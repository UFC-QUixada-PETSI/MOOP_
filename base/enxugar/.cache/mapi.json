{
    "title": "@enxugar: Toalha com testes",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@enxugar: Toalha com testes</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"toalha-com-testes\">Toalha com testes</h1>\n<!-- toch -->\n<table>\n<colgroup>\n<col style=\"width: 25%\" />\n<col style=\"width: 25%\" />\n<col style=\"width: 25%\" />\n<col style=\"width: 25%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#testes\">Testes</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/enxugar/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"intro\">Intro</h2>\n<ul>\n<li>Crie uma classe Toalha <code>Towel</code> com os atributos cor\n<code>color</code>, tamanho <code>size</code> e umidade\n<code>wetness</code>.</li>\n<li>Crie um construtor que inicialize todos os atributos cor e tamanho\ncom valores recebidos como par\u00e2metro e umidade com 0.</li>\n<li>Crie um m\u00e9todo enxugar <code>dry</code> que recebe um valor inteiro\nquantidade <code>amout</code> e AUMENTA o atributo umidade da\ntoalha.</li>\n<li>Crie um m\u00e9todo torcer <code>wringOut</code> que zera o atributo\numidade da towel.</li>\n<li>Crie um m\u00e9todo para pegar m\u00e1ximo de umidade\n<code>getMaxWetness</code> que retorna o valor m\u00e1ximo de umidade que\nessa toalha pode ter.</li>\n<li>O m\u00e1ximo de umidade que uma toalha pode ter \u00e9 de acordo com o\ntamanho dela:\n<ul>\n<li><code>P</code> -&gt; 10</li>\n<li><code>M</code> -&gt; 20</li>\n<li><code>G</code> -&gt; 30</li>\n</ul></li>\n<li>Crie um m\u00e9todo que retorna se a toalha esta seca <code>isDry</code>,\nque retorna <code>true</code> se a umidade da toalha for 0 e\n<code>false</code> caso contr\u00e1rio.</li>\n<li>Fa\u00e7a um c\u00f3digo de teste para validar o comportamento da classe\nToalha.</li>\n</ul>\n<h2 id=\"guide\">Guide</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/enxugar/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE cria\u00e7\u00e3o</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$criar</span> azul P</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> azul, Tamanho: P, Umidade: 0</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE esta_seca</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$seca</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">sim</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE enxugar</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enxugar</span> 5</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> azul, Tamanho: P, Umidade: 5</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE nao esta seca</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$seca</span></span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">nao</span></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE toalha encharcada</span></span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enxugar</span> 5</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">toalha</span> encharcada</span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE umidade maxima alcan\u00e7ada</span></span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> azul, Tamanho: P, Umidade: 10</span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enxugar</span> 5</span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">toalha</span> encharcada</span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> azul, Tamanho: P, Umidade: 10</span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE torcer</span></span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$torcer</span></span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> azul, Tamanho: P, Umidade: 0</span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE cria\u00e7\u00e3o</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$criar</span> verde G</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> verde, Tamanho: G, Umidade: 0</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE limite de 30 e encharcada</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enxugar</span> 30</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">toalha</span> encharcada</span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> verde, Tamanho: G, Umidade: 30</span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE n\u00e3o passa do limite</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enxugar</span> 1</span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">toalha</span> encharcada</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$mostrar</span></span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Cor:</span> verde, Tamanho: G, Umidade: 30</span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/enxugar/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/enxugar/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/enxugar/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT cria\u00e7\u00e3o\ncriar azul P\nmostrar\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT esta_seca\ncriar azul P\nmostrar\nseca\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$seca\nsim\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT enxugar\ncriar azul P\nmostrar\nseca\nenxugar 5\nmostrar\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$seca\nsim\n$enxugar 5\n$mostrar\nCor: azul, Tamanho: P, Umidade: 5\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT nao esta seca\ncriar azul P\nmostrar\nseca\nenxugar 5\nmostrar\nseca\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$seca\nsim\n$enxugar 5\n$mostrar\nCor: azul, Tamanho: P, Umidade: 5\n$seca\nnao\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT toalha encharcada\ncriar azul P\nmostrar\nseca\nenxugar 5\nmostrar\nseca\nenxugar 5\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$seca\nsim\n$enxugar 5\n$mostrar\nCor: azul, Tamanho: P, Umidade: 5\n$seca\nnao\n$enxugar 5\ntoalha encharcada\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT umidade maxima alcan\u00e7ada\ncriar azul P\nmostrar\nseca\nenxugar 5\nmostrar\nseca\nenxugar 5\nmostrar\nenxugar 5\nmostrar\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$seca\nsim\n$enxugar 5\n$mostrar\nCor: azul, Tamanho: P, Umidade: 5\n$seca\nnao\n$enxugar 5\ntoalha encharcada\n$mostrar\nCor: azul, Tamanho: P, Umidade: 10\n$enxugar 5\ntoalha encharcada\n$mostrar\nCor: azul, Tamanho: P, Umidade: 10\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT torcer\ncriar azul P\nmostrar\nseca\nenxugar 5\nmostrar\nseca\nenxugar 5\nmostrar\nenxugar 5\nmostrar\ntorcer\nmostrar\nend\n======== EXPECT\n$criar azul P\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$seca\nsim\n$enxugar 5\n$mostrar\nCor: azul, Tamanho: P, Umidade: 5\n$seca\nnao\n$enxugar 5\ntoalha encharcada\n$mostrar\nCor: azul, Tamanho: P, Umidade: 10\n$enxugar 5\ntoalha encharcada\n$mostrar\nCor: azul, Tamanho: P, Umidade: 10\n$torcer\n$mostrar\nCor: azul, Tamanho: P, Umidade: 0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT cria\u00e7\u00e3o\ncriar verde G\nmostrar\nend\n======== EXPECT\n$criar verde G\n$mostrar\nCor: verde, Tamanho: G, Umidade: 0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT limite de 30 e encharcada\ncriar verde G\nmostrar\nenxugar 30\nmostrar\nend\n======== EXPECT\n$criar verde G\n$mostrar\nCor: verde, Tamanho: G, Umidade: 0\n$enxugar 30\ntoalha encharcada\n$mostrar\nCor: verde, Tamanho: G, Umidade: 30\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT n\u00e3o passa do limite\ncriar verde G\nmostrar\nenxugar 30\nmostrar\nenxugar 1\nmostrar\nend\n======== EXPECT\n$criar verde G\n$mostrar\nCor: verde, Tamanho: G, Umidade: 0\n$enxugar 30\ntoalha encharcada\n$mostrar\nCor: verde, Tamanho: G, Umidade: 30\n$enxugar 1\ntoalha encharcada\n$mostrar\nCor: verde, Tamanho: G, Umidade: 30\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "function input() { return \"\"; }\nexport {};\n\nfunction main() {\n    // CRIE SUA TOALHA AQUI\n    // let toalha = new Toalha();\n    while (true) {\n        let line = input();\n        console.log(\"$\" + line);\n        \n        let par = line.split(\" \");\n        let cmd = par[0];\n\n        if (cmd == \"criar\") { // ATUALIZE SUA TOALHA UTILIZANDO O CONSTRUTOR\n            // const cor = par[1];\n            // const tamanho = par[2];\n        } else if (cmd == \"mostrar\") { // MOSTRE SUA TOALHA\n        } else if (cmd == \"enxugar\") { // CHAME O METODO ENXUGAR\n            // const quantidade = +par[1];\n        } else if (cmd == \"seca\") { // UTILIZE O METODO PARA OBTER SE ESTA SECA E IMPRIMIR SIM OU NAO\n        } else if (cmd == \"torcer\") { // CHAME O METODO TORCER\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            console.log(\"comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.Scanner;\n\n\npublic class Shell {\n    \n    public static void main(String[] a) {\n        // CRIE SUA TOALHA AQUI\n        // Toalha toalha = new Toalha();\n        \n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"criar\")) { // ATUALIZE SUA TOALHA USANDO O CONSTRUTOR\n                // var cor = par[1];\n                // var tamanho = par[2];\n            } else if (cmd.equals(\"mostrar\")) { // MOSTRE SUA TOALHA\n            } else if (cmd.equals(\"enxugar\")) { // ENXUGUE\n                // var quantidade = Integer.parseInt(par[1]);\n            } else if (cmd.equals(\"seca\")) { // OBTENHA SE ESTA SECA E IMPRIMA SIM OU NAO\n            } else if (cmd.equals(\"torcer\")) { // CHAME O METODO TORCER\n            } else if (cmd.equals(\"end\")) {\n                break;\n            } else {\n                System.out.println(\"comando invalido\");\n            }\n        }\n    }\n    private static Scanner scanner = new Scanner(System.in);\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <sstream>\nusing namespace std;\n\nint main() {\n    // CRIE SUA TOALHA AQUI\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n\n        stringstream par(line);\n        par >> cmd;\n\n        if (cmd == \"mostrar\") { // MOSTRE A TOALHA\n        } else if (cmd == \"criar\") { // ATUALIZE A TOALHA UTILIZAND O CONSTRUTOR\n            // string cor, tamanho;\n            // par >> cor >> tamanho;\n        } else if (cmd == \"enxugar\") { // USE O METODO ENXUGAR\n            // int umidade {};\n            // par >> umidade;\n        } else if (cmd == \"torcer\") { // USE O METODO TORCER\n        } else if (cmd == \"seca\") { // VERIFIQUE SE ESTA SECA E IMPRIMA \"sim\" OU \"nao\"\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n}",
                "encoding": 0
            }
        ]
    }
}
