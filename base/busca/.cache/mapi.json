{
    "title": "Opera\u00e7\u00f5es de @busca",
    "description": "# Opera\u00e7\u00f5es de @busca\n\n\n<!-- toch -->\n[Intro](#intro) | [Draft](#draft) | [Shell](#shell)\n-- | -- | --\n<!-- toch -->\n\n![cover](https://gist.github.com/assets/4747652/c22c464a-b797-4bd7-b963-4e4f1ee7f96b)\n\n***\n\n## Intro\n\n- Na entrada de um evento de um experimento social, os participantes ganhavam uma pulseira especial que precisavam ficar utilizando.\n- A pulseira informava, num pequeno visor, um n\u00famero inteiro que representava o n\u00edvel de stress daquele participante.\n- O n\u00famero 1 significava totalmente tranquilo e vai aumentando conforme o stress do participante aumentava at\u00e9 o valor m\u00e1ximo de infinito.\n- Para fazer uma representa\u00e7\u00e3o l\u00f3gica de homens e mulheres em um vetor de inteiros, os n\u00fameros positivos representam os homens e os n\u00fameros negativos representam mulheres.\n- Precisamos escrever os algoritmos que identifiquem informa\u00e7\u00f5es importantes sobre os participantes da fila.\n\n**Exemplos:**\n\n- `{}` equivale a uma fila vazia.\n- `{-1, -50, -99}` equivale a uma mulher totalmente tranquila, uma mulher m\u00e9dio estressada e uma mulher extremamente estressada.\n- `{80, 70, 90, -4}` equivale a tr\u00eas homens estressados e uma mulher tranquila.\n\n**Fun\u00e7\u00f5es**:\n\n- **in**: existe determinado valor na fila?\n- **index_of**: qual posi\u00e7\u00e3o aparece X na fila pela primeira vez?\n- **find_if**: qual a posi\u00e7\u00e3o do primeiro valor positivo da fila?\n- **min_element**: qual a posi\u00e7\u00e3o do menor valor da lista?\n- **find_min_if**: qual a posi\u00e7\u00e3o do menor valor positivo?\n\n***\n\n## Draft\n\n- [solver.cpp](.cache/draft.cpp)\n- [solver.ts](.cache/draft.ts)\n- [Solver.java](.cache/draft.java)\n\n## Shell\n\n```sh\n#__case in\n$in [1,2,3,4] 4\ntrue\n$in [1,2,3,5] 1\ntrue\n$in [1,2,5,9] 7\nfalse\n$end\n```\n\n```sh\n#__case index_of\n$index_of [-1,-50,-1,-99] -50\n1\n$index_of [-1,-50,-1,-99] -99\n3\n$index_of [-1,-50,-1,-99] 10\n-1\n$end\n```\n\n```sh\n#__case find_if\n$find_if [5,3,-1,-50,-1,-99]\n0\n$find_if [-1,-50,-1,-99,-444]\n-1\n$end\n```\n\n```sh\n#__case min_element\n$min_element [5,3,-1,-50,-1,-99]\n5\n$min_element [-1,-50,-1,-99,-444]\n4\n$min_element [-2,5,3,-1,50,-1]\n0\n$min_element []\n-1\n$end\n```\n\n```sh\n#__case find_min_if\n$find_min_if [5,3,-1,-50,-1,-99]\n1\n$find_min_if [-1,-50,-1,-99,-444]\n-1\n$end\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> in\nin [1,2,3,4] 4\nin [1,2,3,5] 1\nin [1,2,5,9] 7\nend\n========\n$in [1,2,3,4] 4\ntrue\n$in [1,2,3,5] 1\ntrue\n$in [1,2,5,9] 7\nfalse\n$end\n<<<<<<<<\n\n>>>>>>>> index_of\nindex_of [-1,-50,-1,-99] -50\nindex_of [-1,-50,-1,-99] -99\nindex_of [-1,-50,-1,-99] 10\nend\n========\n$index_of [-1,-50,-1,-99] -50\n1\n$index_of [-1,-50,-1,-99] -99\n3\n$index_of [-1,-50,-1,-99] 10\n-1\n$end\n<<<<<<<<\n\n>>>>>>>> find_if\nfind_if [5,3,-1,-50,-1,-99]\nfind_if [-1,-50,-1,-99,-444]\nend\n========\n$find_if [5,3,-1,-50,-1,-99]\n0\n$find_if [-1,-50,-1,-99,-444]\n-1\n$end\n<<<<<<<<\n\n>>>>>>>> min_element\nmin_element [5,3,-1,-50,-1,-99]\nmin_element [-1,-50,-1,-99,-444]\nmin_element [-2,5,3,-1,50,-1]\nmin_element []\nend\n========\n$min_element [5,3,-1,-50,-1,-99]\n5\n$min_element [-1,-50,-1,-99,-444]\n4\n$min_element [-2,5,3,-1,50,-1]\n0\n$min_element []\n-1\n$end\n<<<<<<<<\n\n>>>>>>>> find_min_if\nfind_min_if [5,3,-1,-50,-1,-99]\nfind_min_if [-1,-50,-1,-99,-444]\nend\n========\n$find_min_if [5,3,-1,-50,-1,-99]\n1\n$find_min_if [-1,-50,-1,-99,-444]\n-1\n$end\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
