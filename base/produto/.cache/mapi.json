{
    "title": "@produto: @produto - Padr\u00e3o Composite e Decorator",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@produto: @produto - Padr\u00e3o Composite e Decorator</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>@produto - Padr\u00e3o Composite e Decorator</h1>\n<p>Padr\u00f5es de projeto s\u00e3o solu\u00e7\u00f5es para problemas comuns que encontramos ao projetar um sistema. Eles s\u00e3o como receitas de bolo que podemos aplicar em nossos projetos para resolver problemas recorrentes. Os padr\u00f5es de projeto s\u00e3o divididos em tr\u00eas categorias: padr\u00f5es de cria\u00e7\u00e3o, padr\u00f5es estruturais e padr\u00f5es comportamentais.</p>\n<p>Vamos trabalhar os conceitos de dois padr\u00f5es de projeto: Composite e Decorator.</p>\n<h2>Composite</h2>\n<p>O padr\u00e3o Composite \u00e9 um padr\u00e3o estrutural que permite que objetos sejam agrupados de forma a trat\u00e1-los como se fossem um \u00fanico objeto. Ele permite que clientes tratem objetos individuais e composi\u00e7\u00f5es de objetos de maneira uniforme.</p>\n<h2>Decorator</h2>\n<p>O padr\u00e3o Decorator \u00e9 um padr\u00e3o estrutural que permite que responsabilidades sejam adicionadas a um objeto dinamicamente. Ele permite que um objeto seja envolvido por outros objetos que adicionam comportamento a ele. \u00c9 frequentemente usado para adicionar responsabilidades a objetos sem que isso cause um efeito colateral para os outros objetos.</p>\n<h3>Exemplo</h3>\n<p>Vamos modelar um sistema de vendas de produtos. O sistema deve permitir que sejam cadastrados produtos simples e pacotes. Pacotes s\u00e3o o agrupamento de produtos que devem ser vendidos juntos. Produtos simples s\u00e3o produtos que n\u00e3o cont\u00eam outros produtos. Pacotes e produtos simples devem ser tratados de forma uniforme. Al\u00e9m disso, deve ser poss\u00edvel criar produtos ou pacotes com desconto, em quaisquer tipo de montagem ou configura\u00e7\u00e3o.</p>\n<h3>Descri\u00e7\u00e3o</h3>\n<h4>Interface IProduct</h4>\n<p>Define os m\u00e9todos que todas as classes de produto devem implementar.</p>\n<ul>\n<li><code>getPrice()</code>: Retorna o pre\u00e7o do produto.</li>\n<li><code>getLabel()</code>: Retorna o r\u00f3tulo do produto.</li>\n</ul>\n<h4>Classe Product</h4>\n<p>Implementa a interface <code>IProduct</code> e representa um produto simples.</p>\n<ul>\n<li><strong>Atributos:</strong><ul>\n<li><code>name</code>: Nome do produto.</li>\n<li><code>price</code>: Pre\u00e7o do produto.</li>\n</ul>\n</li>\n<li><strong>M\u00e9todos:</strong><ul>\n<li><code>constructor(name: string, price: number)</code>: Inicializa os atributos <code>name</code> e <code>price</code>.</li>\n<li><code>getPrice()</code>: Retorna o pre\u00e7o do produto.</li>\n<li><code>getLabel()</code>: Retorna o nome do produto.</li>\n</ul>\n</li>\n</ul>\n<h4>Classe Bundle</h4>\n<p>Implementa a interface <code>IProduct</code> e representa um pacote de produtos (padr\u00e3o composite).</p>\n<ul>\n<li><strong>Atributos:</strong><ul>\n<li><code>products</code>: Lista de produtos que comp\u00f5em o pacote.</li>\n</ul>\n</li>\n<li><strong>M\u00e9todos:</strong><ul>\n<li><code>constructor(products: IProduct[] = [])</code>: Inicializa a lista de produtos.</li>\n<li><code>addProduct(product: IProduct)</code>: Adiciona um produto ao pacote.</li>\n<li><code>getPrice()</code>: Retorna o pre\u00e7o total do pacote.</li>\n<li><code>getLabel()</code>: Retorna uma string com os nomes dos produtos no pacote. Exemplo: <code>[bermuda, camisa, bone]</code>.</li>\n</ul>\n</li>\n</ul>\n<h4>Classe DiscountedProduct</h4>\n<p>Implementa a interface <code>IProduct</code> e representa um produto com desconto (padr\u00e3o decorator).</p>\n<ul>\n<li><strong>Atributos:</strong><ul>\n<li><code>product</code>: O produto original.</li>\n<li><code>discount</code>: O percentual de desconto.</li>\n</ul>\n</li>\n<li><strong>M\u00e9todos:</strong><ul>\n<li><code>constructor(product: IProduct, discount: number)</code>: Inicializa os atributos <code>product</code> e <code>discount</code>.</li>\n<li><code>getPrice()</code>: Retorna o pre\u00e7o do produto com desconto.</li>\n<li><code>getLabel()</code>: Retorna uma string com o nome do produto e o desconto aplicado. Exemplo: <code>camisa(10% OFF)</code>.</li>\n</ul>\n</li>\n</ul>\n<h4>Classe Manager</h4>\n<p>Serve para gerenciar a cria\u00e7\u00e3o e manipula\u00e7\u00e3o dos produtos.</p>\n<ul>\n<li><strong>Atributos:</strong><ul>\n<li><code>products</code>: Array para armazenar os produtos.</li>\n</ul>\n</li>\n<li><strong>M\u00e9todos:</strong><ul>\n<li><code>constructor()</code>: Inicializa o array <code>products</code>.</li>\n<li><code>addProduct(name: string, price: number)</code>: Adiciona um novo produto ao array.</li>\n<li><code>addBundle(indexes: number[])</code>: Cria um novo pacote com base nos \u00edndices fornecidos e adiciona ao array.</li>\n<li><code>addDiscount(index: number, discount: number)</code>: Adiciona um desconto a um produto existente.</li>\n<li><code>toString()</code>: Retorna uma string com informa\u00e7\u00f5es sobre todos os produtos no array.</li>\n</ul>\n</li>\n</ul>\n<h2>Guide</h2>\n<p><img alt=\"Diagrama de Classes\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/produto/diagrama.png\" /></p>\n<!-- load diagrama.puml fenced=ts:filter -->\n\n<div class=\"language-ts highlight\"><pre><span></span><code><span class=\"kd\">@startuml</span>\n\n<span class=\"nx\">skinparam</span><span class=\"w\"> </span><span class=\"nx\">defaultFontName</span><span class=\"w\"> </span><span class=\"s2\">&quot;Source Code Pro&quot;</span>\n<span class=\"nx\">skinparam</span><span class=\"w\"> </span><span class=\"nx\">dpi</span><span class=\"w\"> </span><span class=\"mf\">150</span>\n\n\n\n<span class=\"s1\">&#39; Interface que define a responsabilidade de um produto</span>\n<span class=\"s1\">interface IProduct {</span>\n<span class=\"s1\">  + getPrice(): double</span>\n<span class=\"s1\">  + getLabel(): String</span>\n<span class=\"s1\">}</span>\n\n<span class=\"s1\">&#39;</span><span class=\"w\"> </span><span class=\"nx\">Produto</span><span class=\"w\"> </span><span class=\"nx\">simples</span>\n<span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">Product</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">price</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">double</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">Product</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">price</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">double</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getPrice</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">double</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getLabel</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"p\">}</span>\n\n<span class=\"s1\">&#39; Conjunto de produtos que s\u00e3o vendidos juntos</span>\n<span class=\"s1\">class Bundle {</span>\n<span class=\"s1\">    - products: List&lt;IProduct&gt;</span>\n<span class=\"s1\">  + Bundle(products: List&lt;IProduct&gt;)</span>\n<span class=\"s1\">  + addProduct(product: IProduct): void</span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">A</span><span class=\"w\"> </span><span class=\"nx\">soma</span><span class=\"w\"> </span><span class=\"nx\">dos</span><span class=\"w\"> </span><span class=\"nx\">pre\u00e7os</span><span class=\"w\"> </span><span class=\"nx\">dos</span><span class=\"w\"> </span><span class=\"nx\">produtos</span><span class=\"w\"> </span><span class=\"nx\">individuais</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getPrice</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">double</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; A concatena\u00e7\u00e3o dos nomes dos produtos individuais no formato [nome1, nome2, nome3]</span>\n<span class=\"s1\">  + getLabel(): String</span>\n<span class=\"s1\">}</span>\n\n<span class=\"s1\">&#39;</span><span class=\"w\"> </span><span class=\"nx\">Produto</span><span class=\"w\"> </span><span class=\"nx\">com</span><span class=\"w\"> </span><span class=\"nx\">desconto</span>\n<span class=\"kd\">class</span><span class=\"w\"> </span><span class=\"nx\">DiscountedProduct</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">product</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">IProduct</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; Valor de 0 a 100</span>\n<span class=\"s1\">    - discount: double</span>\n\n<span class=\"s1\">  + DiscountedProduct(product: IProduct, discount: double)</span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">O</span><span class=\"w\"> </span><span class=\"nx\">valor</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"nx\">produto</span><span class=\"w\"> </span><span class=\"nx\">original</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">desconto</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getPrice</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kr\">double</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; O label do produto original com o desconto no formato</span>\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">label_original</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">desconto</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"nx\">OFF</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">getLabel</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"p\">}</span>\n\n<span class=\"s1\">&#39; Gerenciador de produtos</span>\n<span class=\"s1\">class ProductManager {</span>\n<span class=\"s1\">    - products: List&lt;IProduct&gt;</span>\n<span class=\"s1\">  + ProductManager()</span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">Adiciona</span><span class=\"w\"> </span><span class=\"nx\">um</span><span class=\"w\"> </span><span class=\"nx\">produto</span><span class=\"w\"> </span><span class=\"nx\">simples</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">addProduct</span><span class=\"p\">(</span><span class=\"nx\">label</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">price</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">double</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n\n<span class=\"w\">  </span><span class=\"s1\">&#39; Cria um pacote a partir de todos os \u00edndices</span>\n<span class=\"s1\">  + addPackage(indexes: List&lt;int&gt;): void</span>\n\n<span class=\"s1\">  &#39;</span><span class=\"w\"> </span><span class=\"nx\">Adiciona</span><span class=\"w\"> </span><span class=\"nx\">um</span><span class=\"w\"> </span><span class=\"nx\">desconto</span><span class=\"w\"> </span><span class=\"nx\">a</span><span class=\"w\"> </span><span class=\"nx\">um</span><span class=\"w\"> </span><span class=\"nx\">produto</span><span class=\"w\"> </span><span class=\"nx\">dado</span><span class=\"w\"> </span><span class=\"nx\">o</span><span class=\"w\"> </span><span class=\"nx\">\u00edndice</span><span class=\"w\"> </span><span class=\"k\">do</span><span class=\"w\"> </span><span class=\"nx\">produto</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">addDiscount</span><span class=\"p\">(</span><span class=\"nx\">index</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">discount</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kt\">double</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"ow\">void</span>\n\n<span class=\"w\">  </span><span class=\"err\">&#39;</span><span class=\"w\"> </span><span class=\"nx\">Mostra</span><span class=\"w\"> </span><span class=\"nx\">os</span><span class=\"w\"> </span><span class=\"nx\">\u00edndices</span><span class=\"w\"> </span><span class=\"nx\">dos</span><span class=\"w\"> </span><span class=\"nx\">produtos</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">seus</span><span class=\"w\"> </span><span class=\"nx\">r\u00f3tulos</span><span class=\"w\"> </span><span class=\"nx\">e</span><span class=\"w\"> </span><span class=\"nx\">pre\u00e7os</span>\n<span class=\"w\">  </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nx\">toString</span><span class=\"p\">()</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"nb\">String</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"nx\">IProduct</span><span class=\"w\"> </span><span class=\"o\">&lt;|</span><span class=\"p\">..</span><span class=\"w\"> </span><span class=\"nx\">Product</span>\n<span class=\"nx\">IProduct</span><span class=\"w\"> </span><span class=\"o\">&lt;|</span><span class=\"p\">..</span><span class=\"w\"> </span><span class=\"nx\">Bundle</span>\n<span class=\"nx\">IProduct</span><span class=\"w\"> </span><span class=\"o\">&lt;|</span><span class=\"p\">..</span><span class=\"w\"> </span><span class=\"nx\">DiscountedProduct</span>\n<span class=\"nx\">ProductManager</span><span class=\"w\"> </span><span class=\"o\">*--&gt;</span><span class=\"w\"> </span><span class=\"nx\">IProduct</span>\n<span class=\"kd\">@enduml</span>\n</code></pre></div>\n<!-- load -->\n\n<h2>Shell</h2>\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE criando produto simples</span>\n\n<span class=\"nv\">$add</span><span class=\"w\"> </span>camisa<span class=\"w\"> </span><span class=\"m\">40</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>bermuda<span class=\"w\"> </span><span class=\"m\">30</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span>bone<span class=\"w\"> </span><span class=\"m\">20</span>\n<span class=\"nv\">$show</span>\n<span class=\"m\">00</span>:camisa:40.00\n<span class=\"m\">01</span>:bermuda:30.00\n<span class=\"m\">02</span>:bone:20.00\n\n<span class=\"c1\">#TEST_CASE criando pacote</span>\n<span class=\"nv\">$addPacote</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">2</span>\n<span class=\"nv\">$addPacote</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"nv\">$addPacote</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">2</span>\n<span class=\"nv\">$show</span>\n<span class=\"m\">00</span>:camisa:40.00\n<span class=\"m\">01</span>:bermuda:30.00\n<span class=\"m\">02</span>:bone:20.00\n<span class=\"m\">03</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">]</span>:60.00\n<span class=\"m\">04</span>:<span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">]</span>:60.00\n<span class=\"m\">05</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bermuda,<span class=\"w\"> </span>bone<span class=\"o\">]</span>:90.00\n\n<span class=\"c1\">#TEST_CASE criando produto com desconto</span>\n<span class=\"nv\">$addDesconto</span><span class=\"w\"> </span><span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"nv\">$addDesconto</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">20</span>\n<span class=\"nv\">$addDesconto</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">15</span>\n\n<span class=\"nv\">$show</span>\n<span class=\"m\">00</span>:camisa:40.00\n<span class=\"m\">01</span>:bermuda:30.00\n<span class=\"m\">02</span>:bone:20.00\n<span class=\"m\">03</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">]</span>:60.00\n<span class=\"m\">04</span>:<span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">]</span>:60.00\n<span class=\"m\">05</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bermuda,<span class=\"w\"> </span>bone<span class=\"o\">]</span>:90.00\n<span class=\"m\">06</span>:camisa<span class=\"o\">(</span><span class=\"m\">10</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:36.00\n<span class=\"m\">07</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">](</span><span class=\"m\">20</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:48.00\n<span class=\"m\">08</span>:<span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">](</span><span class=\"m\">15</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:51.00\n\n<span class=\"c1\">#TEST_CASE finalizando</span>\n\n<span class=\"c1\"># [camisa, bone](https://github.com/qxcodepoo/arcade/blob/master/base/produto/20%) + [bermuda, bermuda](https://github.com/qxcodepoo/arcade/blob/master/base/produto/15%)</span>\n<span class=\"nv\">$addPacote</span><span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\"> </span><span class=\"m\">8</span>\n<span class=\"nv\">$addDesconto</span><span class=\"w\"> </span><span class=\"m\">9</span><span class=\"w\"> </span><span class=\"m\">10</span>\n<span class=\"nv\">$show</span>\n<span class=\"m\">00</span>:camisa:40.00\n<span class=\"m\">01</span>:bermuda:30.00\n<span class=\"m\">02</span>:bone:20.00\n<span class=\"m\">03</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">]</span>:60.00\n<span class=\"m\">04</span>:<span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">]</span>:60.00\n<span class=\"m\">05</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bermuda,<span class=\"w\"> </span>bone<span class=\"o\">]</span>:90.00\n<span class=\"m\">06</span>:camisa<span class=\"o\">(</span><span class=\"m\">10</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:36.00\n<span class=\"m\">07</span>:<span class=\"o\">[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">](</span><span class=\"m\">20</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:48.00\n<span class=\"m\">08</span>:<span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">](</span><span class=\"m\">15</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:51.00\n<span class=\"m\">09</span>:<span class=\"o\">[[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">](</span><span class=\"m\">20</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">](</span><span class=\"m\">15</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)]</span>:99.00\n<span class=\"m\">10</span>:<span class=\"o\">[[</span>camisa,<span class=\"w\"> </span>bone<span class=\"o\">](</span><span class=\"m\">20</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>,<span class=\"w\"> </span><span class=\"o\">[</span>bermuda,<span class=\"w\"> </span>bermuda<span class=\"o\">](</span><span class=\"m\">15</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)](</span><span class=\"m\">10</span>%<span class=\"w\"> </span>OFF<span class=\"o\">)</span>:89.10\n\n<span class=\"nv\">$end</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT criando produto simples\nadd camisa 40\nadd bermuda 30\nadd bone 20\nshow\nend\n======== EXPECT\n$add camisa 40\n$add bermuda 30\n$add bone 20\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT criando pacote\nadd camisa 40\nadd bermuda 30\nadd bone 20\nshow\naddPacote 0 2\naddPacote 1 1\naddPacote 0 1 2\nshow\nend\n======== EXPECT\n$add camisa 40\n$add bermuda 30\n$add bone 20\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n$addPacote 0 2\n$addPacote 1 1\n$addPacote 0 1 2\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n03:[camisa, bone]:60.00\n04:[bermuda, bermuda]:60.00\n05:[camisa, bermuda, bone]:90.00\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT criando produto com desconto\nadd camisa 40\nadd bermuda 30\nadd bone 20\nshow\naddPacote 0 2\naddPacote 1 1\naddPacote 0 1 2\nshow\naddDesconto 0 10\naddDesconto 3 20\naddDesconto 4 15\nshow\nend\n======== EXPECT\n$add camisa 40\n$add bermuda 30\n$add bone 20\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n$addPacote 0 2\n$addPacote 1 1\n$addPacote 0 1 2\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n03:[camisa, bone]:60.00\n04:[bermuda, bermuda]:60.00\n05:[camisa, bermuda, bone]:90.00\n$addDesconto 0 10\n$addDesconto 3 20\n$addDesconto 4 15\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n03:[camisa, bone]:60.00\n04:[bermuda, bermuda]:60.00\n05:[camisa, bermuda, bone]:90.00\n06:camisa(10% OFF):36.00\n07:[camisa, bone](20% OFF):48.00\n08:[bermuda, bermuda](15% OFF):51.00\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT finalizando\nadd camisa 40\nadd bermuda 30\nadd bone 20\nshow\naddPacote 0 2\naddPacote 1 1\naddPacote 0 1 2\nshow\naddDesconto 0 10\naddDesconto 3 20\naddDesconto 4 15\nshow\naddPacote 7 8\naddDesconto 9 10\nshow\nend\n======== EXPECT\n$add camisa 40\n$add bermuda 30\n$add bone 20\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n$addPacote 0 2\n$addPacote 1 1\n$addPacote 0 1 2\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n03:[camisa, bone]:60.00\n04:[bermuda, bermuda]:60.00\n05:[camisa, bermuda, bone]:90.00\n$addDesconto 0 10\n$addDesconto 3 20\n$addDesconto 4 15\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n03:[camisa, bone]:60.00\n04:[bermuda, bermuda]:60.00\n05:[camisa, bermuda, bone]:90.00\n06:camisa(10% OFF):36.00\n07:[camisa, bone](20% OFF):48.00\n08:[bermuda, bermuda](15% OFF):51.00\n$addPacote 7 8\n$addDesconto 9 10\n$show\n00:camisa:40.00\n01:bermuda:30.00\n02:bone:20.00\n03:[camisa, bone]:60.00\n04:[bermuda, bermuda]:60.00\n05:[camisa, bermuda, bone]:90.00\n06:camisa(10% OFF):36.00\n07:[camisa, bone](20% OFF):48.00\n08:[bermuda, bermuda](15% OFF):51.00\n09:[[camisa, bone](20% OFF), [bermuda, bermuda](15% OFF)]:99.00\n10:[[camisa, bone](20% OFF), [bermuda, bermuda](15% OFF)](10% OFF):89.10\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\";\nexport {};\n\n",
                "type": "show"
            }
        ]
    }
}
