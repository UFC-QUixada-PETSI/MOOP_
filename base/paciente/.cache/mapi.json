{
    "title": "@paciente: @paciente",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@paciente: @paciente</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>@paciente</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#esqueleto\">Esqueleto</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/paciente/cover.jpg\" /></p>\n<h2>Intro</h2>\n<p>Na UTI do nosso hospital existem v\u00e1rios pacientes. Cada paciente \u00e9 atendico por m\u00e9dicos de v\u00e1rias especialidades. Pacientes e m\u00e9dicos podem se comunicar via mensagens. O sistema deve ser capaz de.</p>\n<ul>\n<li>cadastrar pacientes e m\u00e9dicos.</li>\n<li>informar quais os m\u00e9dicos que atendem determinado paciente.</li>\n<li>\n<p>informar quais pacientes que s\u00e3o atendidos por um m\u00e9dico.</p>\n</li>\n<li>\n<p><strong>Reposit\u00f3rios Individuais - 3.0 P</strong></p>\n<ul>\n<li>Adicionar pacientes.<ul>\n<li>Cada paciente tem um id(nome) e uma diagn\u00f3stico.</li>\n</ul>\n</li>\n<li>Adicionar m\u00e9dicos.<ul>\n<li>Cada m\u00e9dico tem um id(nome) e uma especialidade.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-sh highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE inserir</span>\n<span class=\"nv\">$addPacs</span><span class=\"w\"> </span>fred-fratura<span class=\"w\"> </span>alvis-avc<span class=\"w\"> </span>goku-hemorragia<span class=\"w\"> </span>silva-sinusite\n<span class=\"nv\">$addMeds</span><span class=\"w\"> </span>bisturi-cirurgia<span class=\"w\"> </span>snif-alergologia<span class=\"w\"> </span>facada-cirurgia\n<span class=\"nv\">$show</span>\nPac:<span class=\"w\"> </span>alvis:avc<span class=\"w\">        </span>Meds:<span class=\"w\"> </span><span class=\"o\">[]</span>\nPac:<span class=\"w\"> </span>fred:fratura<span class=\"w\">     </span>Meds:<span class=\"w\"> </span><span class=\"o\">[]</span>\nPac:<span class=\"w\"> </span>goku:hemorragia<span class=\"w\">  </span>Meds:<span class=\"w\"> </span><span class=\"o\">[]</span>\nPac:<span class=\"w\"> </span>silva:sinusite<span class=\"w\">   </span>Meds:<span class=\"w\"> </span><span class=\"o\">[]</span>\nMed:<span class=\"w\"> </span>bisturi:cirurgia<span class=\"w\"> </span>Pacs:<span class=\"w\"> </span><span class=\"o\">[]</span>\nMed:<span class=\"w\"> </span>facada:cirurgia<span class=\"w\">  </span>Pacs:<span class=\"w\"> </span><span class=\"o\">[]</span>\nMed:<span class=\"w\"> </span>snif:alergologia<span class=\"w\"> </span>Pacs:<span class=\"w\"> </span><span class=\"o\">[]</span>\n\n\n<span class=\"c1\">#    - Vincular pacientes e m\u00e9dicos.</span>\n<span class=\"c1\">#        - Dois m\u00e9dicos da mesma especialidade n\u00e3o podem ser respons\u00e1veis pelo mesmo paciente.</span>\n<span class=\"c1\">#        - O paciente n\u00e3o deve entrar duas vezes na lista do m\u00e9dico e vice-versa.</span>\n\n<span class=\"c1\">#TEST_CASE vincular</span>\n<span class=\"c1\"># tie _med _pac _pac ...</span>\n<span class=\"nv\">$tie</span><span class=\"w\"> </span>bisturi<span class=\"w\"> </span>fred<span class=\"w\"> </span>alvis<span class=\"w\"> </span>goku\n<span class=\"nv\">$tie</span><span class=\"w\"> </span>snif<span class=\"w\"> </span>silva<span class=\"w\"> </span>alvis\n<span class=\"nv\">$tie</span><span class=\"w\"> </span>facada<span class=\"w\"> </span>goku\nfail:<span class=\"w\"> </span>ja<span class=\"w\"> </span>existe<span class=\"w\"> </span>outro<span class=\"w\"> </span>medico<span class=\"w\"> </span>da<span class=\"w\"> </span>especialidade<span class=\"w\"> </span>cirurgia\n<span class=\"nv\">$show</span>\nPac:<span class=\"w\"> </span>alvis:avc<span class=\"w\">        </span>Meds:<span class=\"w\"> </span><span class=\"o\">[</span>bisturi,<span class=\"w\"> </span>snif<span class=\"o\">]</span>\nPac:<span class=\"w\"> </span>fred:fratura<span class=\"w\">     </span>Meds:<span class=\"w\"> </span><span class=\"o\">[</span>bisturi<span class=\"o\">]</span>\nPac:<span class=\"w\"> </span>goku:hemorragia<span class=\"w\">  </span>Meds:<span class=\"w\"> </span><span class=\"o\">[</span>bisturi<span class=\"o\">]</span>\nPac:<span class=\"w\"> </span>silva:sinusite<span class=\"w\">   </span>Meds:<span class=\"w\"> </span><span class=\"o\">[</span>snif<span class=\"o\">]</span>\nMed:<span class=\"w\"> </span>bisturi:cirurgia<span class=\"w\"> </span>Pacs:<span class=\"w\"> </span><span class=\"o\">[</span>alvis,<span class=\"w\"> </span>fred,<span class=\"w\"> </span>goku<span class=\"o\">]</span>\nMed:<span class=\"w\"> </span>facada:cirurgia<span class=\"w\">  </span>Pacs:<span class=\"w\"> </span><span class=\"o\">[]</span>\nMed:<span class=\"w\"> </span>snif:alergologia<span class=\"w\"> </span>Pacs:<span class=\"w\"> </span><span class=\"o\">[</span>alvis,<span class=\"w\"> </span>silva<span class=\"o\">]</span>\n\n<span class=\"nv\">$end</span>\n</code></pre></div>\n<hr />\n<h2>Guide</h2>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/paciente/diagrama.png\" /></p>\n<hr />\n<h2>Esqueleto</h2>\n<!--FILTER Solver.java java-->\n<div class=\"language-java highlight\"><pre><span></span><code><span class=\"kd\">interface</span> <span class=\"nc\">IPaciente</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getId</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addMedico</span><span class=\"p\">(</span><span class=\"n\">IMedico</span><span class=\"w\"> </span><span class=\"n\">medico</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">removerMedico</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">idMedico</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"o\">&lt;</span><span class=\"n\">IMedico</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nf\">getMedicos</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getDiagnostico</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">interface</span> <span class=\"nc\">IMedico</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getId</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addPaciente</span><span class=\"p\">(</span><span class=\"n\">IPaciente</span><span class=\"w\"> </span><span class=\"n\">paciente</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">removerPaciente</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">idPaciente</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"o\">&lt;</span><span class=\"n\">IPaciente</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nf\">getPacientes</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getClasse</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Medico</span><span class=\"w\"> </span><span class=\"kd\">implements</span><span class=\"w\"> </span><span class=\"n\">IMedico</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">sender</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">classe</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">IPaciente</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">pacientes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Medico</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">sender</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">classe</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getId</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addPaciente</span><span class=\"p\">(</span><span class=\"n\">IPaciente</span><span class=\"w\"> </span><span class=\"n\">paciente</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">removerPaciente</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">idPaciente</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"o\">&lt;</span><span class=\"n\">IPaciente</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nf\">getPacientes</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getClasse</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Paciente</span><span class=\"w\"> </span><span class=\"kd\">implements</span><span class=\"w\"> </span><span class=\"n\">IPaciente</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">sender</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">diagnostico</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">IMedico</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">medicos</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Paciente</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">sender</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">diagnostico</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getId</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addMedico</span><span class=\"p\">(</span><span class=\"n\">IMedico</span><span class=\"w\"> </span><span class=\"n\">medico</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">removerMedico</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">idMedico</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">Collection</span><span class=\"o\">&lt;</span><span class=\"n\">IMedico</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nf\">getMedicos</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getDiagnostico</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Hospital</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">private</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">IPaciente</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">pacientes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">private</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">IMedico</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">medicos</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Hospital</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">removerPaciente</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">sender</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">removerMedico</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">sender</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addPaciente</span><span class=\"p\">(</span><span class=\"n\">IPaciente</span><span class=\"w\"> </span><span class=\"n\">paciente</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addMedico</span><span class=\"p\">(</span><span class=\"n\">IMedico</span><span class=\"w\"> </span><span class=\"n\">medico</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">vincular</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nomeMedico</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nomePaciente</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kd\">class</span> <span class=\"nc\">Solver</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kd\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">Scanner</span><span class=\"w\"> </span><span class=\"n\">scanner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Scanner</span><span class=\"p\">(</span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">in</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">Hospital</span><span class=\"w\"> </span><span class=\"n\">hospital</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Hospital</span><span class=\"p\">();</span>\n\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">scanner</span><span class=\"p\">.</span><span class=\"na\">nextLine</span><span class=\"p\">();</span>\n<span class=\"w\">            </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;$&quot;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">ui</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Arrays</span><span class=\"p\">.</span><span class=\"na\">asList</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">.</span><span class=\"na\">split</span><span class=\"p\">(</span><span class=\"s\">&quot; &quot;</span><span class=\"p\">));</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;end&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;addPacs&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">stream</span><span class=\"p\">().</span><span class=\"na\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"p\">.</span><span class=\"na\">forEach</span><span class=\"p\">(</span><span class=\"n\">tk</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">hospital</span><span class=\"p\">.</span><span class=\"na\">addPaciente</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Paciente</span><span class=\"p\">(</span><span class=\"n\">tk</span><span class=\"p\">.</span><span class=\"na\">split</span><span class=\"p\">(</span><span class=\"s\">&quot;-&quot;</span><span class=\"p\">)</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tk</span><span class=\"p\">.</span><span class=\"na\">split</span><span class=\"p\">(</span><span class=\"s\">&quot;-&quot;</span><span class=\"p\">)</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">)));</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;addMeds&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">stream</span><span class=\"p\">().</span><span class=\"na\">skip</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">).</span><span class=\"na\">forEach</span><span class=\"p\">(</span><span class=\"n\">tk</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">hospital</span><span class=\"p\">.</span><span class=\"na\">addMedico</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Medico</span><span class=\"p\">(</span><span class=\"n\">tk</span><span class=\"p\">.</span><span class=\"na\">split</span><span class=\"p\">(</span><span class=\"s\">&quot;-&quot;</span><span class=\"p\">)</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tk</span><span class=\"p\">.</span><span class=\"na\">split</span><span class=\"p\">(</span><span class=\"s\">&quot;-&quot;</span><span class=\"p\">)</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">)));</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;show&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">(</span><span class=\"n\">hospital</span><span class=\"p\">.</span><span class=\"na\">toString</span><span class=\"p\">());</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">).</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;tie&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">stream</span><span class=\"p\">().</span><span class=\"na\">skip</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">).</span><span class=\"na\">forEach</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">hospital</span><span class=\"p\">.</span><span class=\"na\">vincular</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">));</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;fail: comando invalido&quot;</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<!--FILTER_END-->\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT inserir\naddPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\naddMeds bisturi-cirurgia snif-alergologia facada-cirurgia\nshow\nend\n======== EXPECT\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT vincular\naddPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\naddMeds bisturi-cirurgia snif-alergologia facada-cirurgia\nshow\ntie bisturi fred alvis goku\ntie snif silva alvis\ntie facada goku\nshow\nend\n======== EXPECT\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n$tie bisturi fred alvis goku\n$tie snif silva alvis\n$tie facada goku\nfail: ja existe outro medico da especialidade cirurgia\n$show\nPac: alvis:avc        Meds: [bisturi, snif]\nPac: fred:fratura     Meds: [bisturi]\nPac: goku:hemorragia  Meds: [bisturi]\nPac: silva:sinusite   Meds: [snif]\nMed: bisturi:cirurgia Pacs: [alvis, fred, goku]\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: [alvis, silva]\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
