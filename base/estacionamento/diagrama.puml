
@startuml

skinparam defaultFontName "Source Code Pro"
skinparam dpi 150

abstract class Veiculo {
  - id : string
  # tipo : string
  # horaEntrada : number

  ' tipo será definido na classe filha
  ' id será o nome do dono da bike ou a placa do carro/moto
  + Veiculo(id : string, tipo : string)

  + setEntrada(horaEntrada : number) : void
  + getEntrada() : number

  + getTipo() : string
  + getId() : string

  ' mostra o valor a ser pago
  + abstract calcularValor(horaSaida: number): void

  ' retornar {tipo} : {id} : {horaEntrada}
  ' alinhado   10      10
  + toString() : string
}

class Bike extends Veiculo {
  + Bike(id : string)
  + calcularValor(horaSaida : number) : void
}

class Moto extends Veiculo {
  + Moto(id : string)
  + calcularValor(horaSaida : number) : void
}

class Carro extends Veiculo {
  + Carro(id : string)
  + calcularValor(horaSaida : number) : void
}

class Estacionamento {
  - veiculos : Veiculo[]
  - horaAtual : number

  + Estacionamento()

  ' retorna -1 se não encontrar ou o indice do veiculo no array
  - procurarVeiculo(id : string) : number

  ' estaciona o veiculo no array, salva a hora de entrada
  + estacionar(veiculo : Veiculo) : void

  ' procurar o veiculo no array, calcular o valor para pagar
  + pagar(id : string) : void

  ' procurar o veiculo no array e o remove
  + sair(id : string) : void

  ' incrementa a hora atual
  + passarTempo(tempo : number) : void

  ' mostra a lista de veículos na ordem que foram estacionados
  + toString() : string
}


Estacionamento "1" o-- "0..*" Veiculo

@enduml