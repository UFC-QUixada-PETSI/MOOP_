{
    "title": "@trem: @trem",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@trem: @trem</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>@trem</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#exemplos\">Exemplos</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/trem/cover.jpg\" /></p>\n<p>O objetivo desta atividade \u00e9 imprementar um sistema que aloca passageiros em vag\u00f5es de um trem. O trem \u00e9 formado por uma s\u00e9rie de vag\u00f5es. \u00c9 poss\u00edvel embarcar, desembarcar passageiros, ver quem est\u00e1 embarcado e a lista de passageiros que j\u00e1 passaram pelo nosso trem.</p>\n<h2>Intro</h2>\n<h3>Parte 1 - Trem e Vag\u00f5es</h3>\n<ul>\n<li>\n<p>Inicie um novo trem com a quantidade limite de vag\u00f5es m\u00e1xima que ele pode carregar.</p>\n<ul>\n<li>Se j\u00e1 houver trem, inicie um novo trem.</li>\n</ul>\n</li>\n<li>\n<p>Adicionar um novo vag\u00e3o.\n        - Ao adicionar, observe o n\u00famero m\u00e1ximo de vag\u00f5es suportados pela locomotiva.\n        - O vag\u00e3o possui uma capacidade que define quantos lugares ele possui.\n        - O vag\u00e3o \u00e9 adicionado ao final do trem.</p>\n</li>\n<li>\n<p>Mostrar o trem.\n        - Cada cadeira vazia deve ser mostrada por um -. Cada vag\u00e3o deve ser delimitado por [ ].</p>\n</li>\n</ul>\n<h3>Parte 2 - Embarque e Desembarque</h3>\n<ul>\n<li>Embarcar um novo passageiro.\n        - Ao tentar embarcar, o trem vai procurar a primeira cadeira livre a partir do primeiro vag\u00e3o em ordem crescente.\n        - Se n\u00e3o houver espa\u00e7o livre em nenhum vag\u00e3o ent\u00e3o n\u00e3o haver\u00e1 embarque.\n        - Passageiros possuem apenas um passId e ele deve ser \u00fanico no sistema.\n        - N\u00e3o deve ser poss\u00edvel embarcar duas vezes o mesmo passageiro no trem.</li>\n<li>Desembarcar um passageiro\n        - Se o passageiro estiver no trem, ele sai do trem liberando sua cadeira.</li>\n</ul>\n<h3>Parte 3 - Cadastro de Passeiros e Registro de Embarque</h3>\n<ul>\n<li>Mostrar a lista de passageiros cadastrados.\n        - Quando um passageiro tenta embarcar, ele \u00e9 cadastrado no sistema, independente de conseguir ou n\u00e3o embarcar.\n        - Mostre a lista ordenada pelo id do passageiro.</li>\n<li>Mostrar a sequ\u00eancia de embarque e desembarque.</li>\n</ul>\n<h2>Exemplos</h2>\n<div class=\"language-python highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE init </span>\n<span class=\"c1\">#init _maxVagoes</span>\n<span class=\"c1\">#nwvag _capacidade</span>\n\n<span class=\"err\">$</span><span class=\"n\">init</span> <span class=\"mi\">2</span>\n<span class=\"err\">$</span><span class=\"n\">nwvag</span> <span class=\"mi\">2</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"p\">]</span>\n<span class=\"err\">$</span><span class=\"n\">nwvag</span> <span class=\"mi\">3</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"p\">][</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"p\">]</span>\n<span class=\"err\">$</span><span class=\"n\">nwvag</span> <span class=\"mi\">1</span>\n<span class=\"n\">fail</span><span class=\"p\">:</span> <span class=\"n\">limite</span> <span class=\"n\">de</span> <span class=\"n\">vag\u00f5es</span> <span class=\"n\">atingido</span>\n\n<span class=\"c1\">#TEST_CASE embarque e desembarque</span>\n<span class=\"c1\">#entrar _idPass</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">goku</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"n\">goku</span> <span class=\"o\">-</span> <span class=\"p\">][</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"p\">]</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">kate</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">sara</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">goku</span>\n<span class=\"n\">fail</span><span class=\"p\">:</span> <span class=\"n\">goku</span> <span class=\"n\">j\u00e1</span> <span class=\"n\">est\u00e1</span> <span class=\"n\">no</span> <span class=\"n\">trem</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"n\">goku</span> <span class=\"n\">kate</span> <span class=\"p\">][</span> <span class=\"n\">sara</span> <span class=\"o\">-</span> <span class=\"o\">-</span> <span class=\"p\">]</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">tina</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">james</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">rufus</span>\n<span class=\"n\">fail</span><span class=\"p\">:</span> <span class=\"n\">trem</span> <span class=\"n\">lotado</span>\n<span class=\"err\">$</span><span class=\"n\">show</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"n\">goku</span> <span class=\"n\">kate</span> <span class=\"p\">][</span> <span class=\"n\">sara</span> <span class=\"n\">tina</span> <span class=\"n\">james</span> <span class=\"p\">]</span>\n\n<span class=\"err\">$</span><span class=\"n\">sair</span> <span class=\"n\">kate</span>\n<span class=\"err\">$</span><span class=\"n\">sair</span> <span class=\"n\">sara</span>\n<span class=\"err\">$</span><span class=\"n\">sair</span> <span class=\"n\">rufus</span>\n<span class=\"n\">fail</span><span class=\"p\">:</span> <span class=\"n\">rufus</span> <span class=\"n\">nao</span> <span class=\"n\">esta</span> <span class=\"n\">no</span> <span class=\"n\">trem</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"n\">goku</span> <span class=\"o\">-</span> <span class=\"p\">][</span> <span class=\"o\">-</span> <span class=\"n\">tina</span> <span class=\"n\">james</span> <span class=\"p\">]</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">alex</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">Trem</span> <span class=\"p\">[</span> <span class=\"n\">goku</span> <span class=\"n\">alex</span> <span class=\"p\">][</span> <span class=\"o\">-</span> <span class=\"n\">tina</span> <span class=\"n\">james</span> <span class=\"p\">]</span>\n<span class=\"err\">$</span><span class=\"n\">end</span>\n\n<span class=\"c1\">#TEST_CASE cadastro de passageiros e movimentacao</span>\n<span class=\"err\">$</span><span class=\"n\">entrar</span> <span class=\"n\">sara</span>\n<span class=\"err\">$</span><span class=\"n\">sair</span> <span class=\"n\">goku</span>\n<span class=\"err\">$</span><span class=\"n\">la</span>\n<span class=\"n\">trem</span> <span class=\"p\">[</span> <span class=\"o\">-</span> <span class=\"n\">alex</span> <span class=\"p\">][</span> <span class=\"n\">sara</span> <span class=\"n\">tina</span> <span class=\"n\">james</span> <span class=\"p\">]</span>\n\n<span class=\"err\">$</span><span class=\"n\">cadastro</span>\n<span class=\"n\">alex</span>\n<span class=\"n\">goku</span>\n<span class=\"n\">james</span>\n<span class=\"n\">kate</span>\n<span class=\"n\">rufus</span>\n<span class=\"n\">sara</span>\n<span class=\"n\">tina</span>\n\n<span class=\"err\">$</span><span class=\"n\">movimentacao</span>\n<span class=\"n\">goku</span> <span class=\"ow\">in</span>\n<span class=\"n\">kate</span> <span class=\"ow\">in</span>\n<span class=\"n\">sara</span> <span class=\"ow\">in</span>\n<span class=\"n\">tina</span> <span class=\"ow\">in</span>\n<span class=\"n\">james</span> <span class=\"ow\">in</span>\n<span class=\"n\">kate</span> <span class=\"n\">out</span>\n<span class=\"n\">sara</span> <span class=\"n\">out</span>\n<span class=\"n\">alex</span> <span class=\"ow\">in</span>\n<span class=\"n\">sara</span> <span class=\"ow\">in</span>\n<span class=\"n\">goku</span> <span class=\"n\">out</span>\n\n<span class=\"err\">$</span><span class=\"n\">end</span>\n</code></pre></div>\n<hr />\n<h2>Guide</h2>\n<div class=\"language-java highlight\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"nc\">Passageiro</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">string</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Vagao</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">cadeiras</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"o\">[]</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">embarcar</span><span class=\"p\">(</span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">desembarcar</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"kt\">boolean</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"p\">(</span><span class=\"n\">capacidade</span><span class=\"p\">)</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Trem</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">maxVagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">number</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">vagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Vagao</span><span class=\"o\">[]</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">addVagao</span><span class=\"p\">(</span><span class=\"n\">vagao</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Vagao</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">embarcar</span><span class=\"p\">(</span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">desembarcar</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"n\">bool</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"p\">(</span><span class=\"n\">maxVagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">)</span>\n\n<span class=\"kd\">enum</span><span class=\"w\"> </span><span class=\"n\">Direcao</span>\n<span class=\"n\">IN</span>\n<span class=\"n\">OUT</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Movimento</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Direcao</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Registro</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">r_Pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"o\">[]</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">movimentacao</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Movimento</span><span class=\"o\">[]</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">cadastrar</span><span class=\"p\">(</span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">movimentar</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">passId</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mov</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Movimento</span><span class=\"p\">)</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init \ninit 2\nnwvag 2\nla\nnwvag 3\nla\nnwvag 1\nend\n======== EXPECT\n$init 2\n$nwvag 2\n$la\nTrem [ - - ]\n$nwvag 3\n$la\nTrem [ - - ][ - - - ]\n$nwvag 1\nfail: limite de vag\u00f5es atingido\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT embarque e desembarque\ninit 2\nnwvag 2\nla\nnwvag 3\nla\nnwvag 1\nentrar goku\nla\nentrar kate\nentrar sara\nentrar goku\nla\nentrar tina\nentrar james\nentrar rufus\nshow\nsair kate\nsair sara\nsair rufus\nla\nentrar alex\nla\nend\n======== EXPECT\n$init 2\n$nwvag 2\n$la\nTrem [ - - ]\n$nwvag 3\n$la\nTrem [ - - ][ - - - ]\n$nwvag 1\nfail: limite de vag\u00f5es atingido\n$entrar goku\n$la\nTrem [ goku - ][ - - - ]\n$entrar kate\n$entrar sara\n$entrar goku\nfail: goku j\u00e1 est\u00e1 no trem\n$la\nTrem [ goku kate ][ sara - - ]\n$entrar tina\n$entrar james\n$entrar rufus\nfail: trem lotado\n$show\nTrem [ goku kate ][ sara tina james ]\n$sair kate\n$sair sara\n$sair rufus\nfail: rufus nao esta no trem\n$la\nTrem [ goku - ][ - tina james ]\n$entrar alex\n$la\nTrem [ goku alex ][ - tina james ]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT cadastro de passageiros e movimentacao\nentrar sara\nsair goku\nla\ncadastro\nmovimentacao\nend\n======== EXPECT\n$entrar sara\n$sair goku\n$la\ntrem [ - alex ][ sara tina james ]\n$cadastro\nalex\ngoku\njames\nkate\nrufus\nsara\ntina\n$movimentacao\ngoku in\nkate in\nsara in\ntina in\njames in\nkate out\nsara out\nalex in\nsara in\ngoku out\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
