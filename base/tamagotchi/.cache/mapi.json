{
    "title": "@tamagotchi: Alimente, brinque e mate",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@tamagotchi: Alimente, brinque e mate</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"alimente-brinque-e-mate\">Alimente, brinque e mate</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/tamagotchi/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<p>Voc\u00ea deve implementar um simulador de bichinho virtual. Ele poder\u00e1\nbrincar, dormir e tomar banho. E eventualmente morrer\u00e1, se voc\u00ea n\u00e3o\ncuidar bem dele.</p>\n<hr />\n<h2 id=\"intro\">Intro</h2>\n<p>Seu sistema dever\u00e1:</p>\n<ul>\n<li>Classe <code>Tamagochi</code>\n<ul>\n<li>\u00c9 respons\u00e1vel por armazenar os dados relativos ao bichinho,\ncontrolar os limites permitidos para os atributos e registrar a\nmorte.</li>\n<li>Construtor\n<ul>\n<li>Recebe energia m\u00e1xima<code>energyMax</code> e limpeza m\u00e1xima\n<code>cleanMax</code> do pet que representam os valores m\u00e1ximo de\nenergia e limpeza.</li>\n<li>Energia <code>energy</code> e limpeza <code>clean</code> devem ser\niniciados no m\u00e1ximo.</li>\n<li>Idade <code>age</code> inicia em zero e aumenta a cada turno.</li>\n<li>Vivo <code>alive</code> inicia como <code>true</code> porque o\nbichinho inicia vivo.</li>\n</ul></li>\n<li>Os m\u00e9todos <code>set</code> alteram os valores dentro dos limites de\n0 at\u00e9 o m\u00e1ximo permitido e se o valor em algum momento for 0, muda o\nvalor de vivo para false.</li>\n</ul></li>\n<li>Classe <code>Game</code>\n<ul>\n<li>\u00c9 respons\u00e1vel por armazenar o bichinho.</li>\n<li>\u00c9 onde est\u00e3o localizadas as l\u00f3gicas sobre as a\u00e7\u00f5es de brincar\n<code>play</code>, dar banho <code>shower</code> e dormir\n<code>sleep</code>.</li>\n<li>Cada opera\u00e7\u00e3o causa aumento e redu\u00e7\u00f5es nos atributos utilizando-se\nos m\u00e9todos <code>set</code> e <code>get</code> do\n<code>Tamagotchi</code>.</li>\n<li>Antes de qualquer a\u00e7\u00e3o, \u00e9 necess\u00e1rio verificar se o bicho est\u00e1 vivo.\nPois brincar com bichos mortos n\u00e3o \u00e9 recomendado.</li>\n</ul></li>\n</ul>\n<h2 id=\"guide\">Guide</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/tamagotchi/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<hr />\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE inicio</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># O comando &quot;$init energia limpeza&quot; recebe os valores do pet.</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># O pet inicia com 0 de idade.</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Toda vez que $init \u00e9 chamado, um novo pet \u00e9 criado.</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 20 15</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># O comando &quot;$show&quot; mostra os par\u00e2metros do Pet na seguinte ordem</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Energia/Max, Limpeza/Max, Idade</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:20/20,</span> L:15/15, I:0</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 10 50</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:10/10,</span> L:50/50, I:0</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE play - Brincar </span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># O comando &quot;$play&quot; altera em -2 energia, -3 limpeza, +1 idade.</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 20 15</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:18/20,</span> L:12/15, I:1</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:14/20,</span> L:6/15, I:3</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE dormir</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># O Comando &quot;$sleep&quot; aumenta energia at\u00e9 o m\u00e1ximo e idade aumenta do n\u00famero de turnos que o pet dormiu.</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sleep</span></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:20/20,</span> L:6/15, I:9</span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE tomar banho</span></span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># O comando &quot;$shower&quot; alteram em -3 energia, MAX na limpeza, +2 na idade.</span></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$shower</span></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:17/20,</span> L:15/15, I:11</span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE dormir sem sono</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Para dormir, precisa ter perdido pelo menos 5 unidades de energia</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sleep</span></span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> nao esta com sono</span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE morrer</span></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># Se algum atributo atingir 0, o pet morre e n\u00e3o poder\u00e1 executar nenhuma a\u00e7\u00e3o</span></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:9/20,</span> L:3/15, I:15</span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> pet morreu de sujeira</span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:7/20,</span> L:0/15, I:16</span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> pet esta morto</span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$shower</span></span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> pet esta morto</span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sleep</span></span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> pet esta morto</span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE fraqueza</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5 10</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> pet morreu de fraqueza</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE morto de fraqueza</span></span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$play</span></span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> pet esta morto</span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-12\"><a href=\"#cb3-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">E:0/5,</span> L:1/10, I:3</span>\n<span id=\"cb3-13\"><a href=\"#cb3-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/tamagotchi/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/tamagotchi/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/tamagotchi/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT inicio\ninit 20 15\nshow\ninit 10 50\nshow\nend\n======== EXPECT\n$init 20 15\n$show\nE:20/20, L:15/15, I:0\n$init 10 50\n$show\nE:10/10, L:50/50, I:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT play - Brincar \ninit 20 15\nplay\nshow\nplay\nplay\nshow\nend\n======== EXPECT\n$init 20 15\n$play\n$show\nE:18/20, L:12/15, I:1\n$play\n$play\n$show\nE:14/20, L:6/15, I:3\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT dormir\ninit 20 15\nplay\nshow\nplay\nplay\nshow\nsleep\nshow\nend\n======== EXPECT\n$init 20 15\n$play\n$show\nE:18/20, L:12/15, I:1\n$play\n$play\n$show\nE:14/20, L:6/15, I:3\n$sleep\n$show\nE:20/20, L:6/15, I:9\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tomar banho\ninit 20 15\nplay\nshow\nplay\nplay\nshow\nsleep\nshow\nshower\nshow\nend\n======== EXPECT\n$init 20 15\n$play\n$show\nE:18/20, L:12/15, I:1\n$play\n$play\n$show\nE:14/20, L:6/15, I:3\n$sleep\n$show\nE:20/20, L:6/15, I:9\n$shower\n$show\nE:17/20, L:15/15, I:11\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT dormir sem sono\ninit 20 15\nplay\nshow\nplay\nplay\nshow\nsleep\nshow\nshower\nshow\nsleep\nend\n======== EXPECT\n$init 20 15\n$play\n$show\nE:18/20, L:12/15, I:1\n$play\n$play\n$show\nE:14/20, L:6/15, I:3\n$sleep\n$show\nE:20/20, L:6/15, I:9\n$shower\n$show\nE:17/20, L:15/15, I:11\n$sleep\nfail: nao esta com sono\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT morrer\ninit 20 15\nplay\nshow\nplay\nplay\nshow\nsleep\nshow\nshower\nshow\nsleep\nplay\nplay\nplay\nplay\nshow\nplay\nshow\nplay\nshower\nsleep\nend\n======== EXPECT\n$init 20 15\n$play\n$show\nE:18/20, L:12/15, I:1\n$play\n$play\n$show\nE:14/20, L:6/15, I:3\n$sleep\n$show\nE:20/20, L:6/15, I:9\n$shower\n$show\nE:17/20, L:15/15, I:11\n$sleep\nfail: nao esta com sono\n$play\n$play\n$play\n$play\n$show\nE:9/20, L:3/15, I:15\n$play\nfail: pet morreu de sujeira\n$show\nE:7/20, L:0/15, I:16\n$play\nfail: pet esta morto\n$shower\nfail: pet esta morto\n$sleep\nfail: pet esta morto\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT fraqueza\ninit 5 10\nplay\nplay\nplay\nend\n======== EXPECT\n$init 5 10\n$play\n$play\n$play\nfail: pet morreu de fraqueza\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT morto de fraqueza\ninit 5 10\nplay\nplay\nplay\nplay\nshow\nend\n======== EXPECT\n$init 5 10\n$play\n$play\n$play\nfail: pet morreu de fraqueza\n$play\nfail: pet esta morto\n$show\nE:0/5, L:1/10, I:3\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "function input() { return \"\"; }\nexport {};\n\nfunction main() {\n    // CRIE SEU JOGO AQUI COM UM PET ZERADO\n\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const par = line.split(\" \");\n        const cmd = par[0];\n\n        if (cmd == \"init\") {\n            // CRIE UM NOVO JOGO COM UM NOVO PET\n            // const energy = parseInt(par[1]);\n            // const clean = parseInt(par[2]);\n        } else if (cmd == \"play\") { // TODO\n        } else if (cmd == \"shower\") { // TODO\n        } else if (cmd == \"sleep\") { // TODO\n        } else if (cmd == \"show\") { // TODO\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.*;\n\n\npublic class Shell {\n    public static void main(String[] a) {\n        \n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"init\")) {\n                // CRIE UM NOVO JOGO COM UM NOVO PET\n                // var energy = Integer.parseInt(par[1]);\n                // var clean = Integer.parseInt(par[2]);\n            } else if (cmd.equals(\"show\")) { // TODO\n            } else if (cmd.equals(\"play\")) { // TODO\n            } else if (cmd.equals(\"shower\")) { // TODO\n            } else if (cmd.equals(\"sleep\")) { // TODO\n            } else if (cmd.equals(\"end\")) {\n                break;\n            } else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    private static Scanner scanner = new Scanner(System.in);\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <sstream>\n#include <string>\nusing namespace std;\n\nint main() {\n\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"init\") {\n            // CRIE UM NOVO JOGO COM UM NOVO PET\n            // int energy, clean;\n            // ss >> energy >> clean;\n        } else if (cmd == \"show\") { // TODO\n        } else if (cmd == \"play\") { // TODO\n        } else if (cmd == \"shower\") { // TODO\n        } else if (cmd == \"eat\") { // TODO\n        } else if (cmd == \"sleep\") { // TODO\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n    return 0;\n}\n",
                "encoding": 0
            }
        ]
    }
}
