{
    "title": "Alimente, brinque e mate o @tamagotchi",
    "description": "# Alimente, brinque e mate o @tamagotchi\n\n<!-- toch -->\n[Intro](#intro) | [Draft](#draft) | [Guide](#guide) | [Shell](#shell)\n-- | -- | -- | --\n<!-- toch -->\n\n![cover](cover.jpg)\n\nVoc\u00ea deve implementar um simulador de bichinho virtual. Ele poder\u00e1 comer, brincar, dormir e tomar banho. E eventualmente morrer\u00e1, se voc\u00ea n\u00e3o cuidar bem dele.\n\n***\n\n## Intro\n\nSeu sistema dever\u00e1:\n\n- **Inicializar**\n  - passando energia, saciedade e limpeza m\u00e1ximas do pet.\n  - Todos os n\u00edveis devem ser iniciados no m\u00e1ximo na cria\u00e7\u00e3o do pet.\n  - Os outros atributos s\u00e3o\n    - diamantes, que ele vai ganhar jogando.\n    - e idade que aumenta a cada a\u00e7\u00e3o realizada,\n    - ambos iniciando em 0.\n- **Comendo, Jogando, Dormindo e tomando banho**\n  - Cada opera\u00e7\u00e3o causa aumento e redu\u00e7\u00f5es nos atributos.\n  - Nenhum atributo pode passar do m\u00e1ximo ou ir abaixo de 0.\n- **Morrendo**\n  - Se algum atributo chegar a 0, o pet morre e nenhuma a\u00e7\u00e3o pode ser feita a n\u00e3o ser mostrar os dados.\n\n***\n\n## Draft\n\n- [solver.java](.cache/draft.java)\n- [solver.cpp](.cache/draft.cpp)\n- [solver.ts](.cache/draft.ts)\n\n## Guide\n\n![diagrama](diagrama.png)\n\n<!-- load diagrama.puml fenced=ts:filter -->\n\n```ts\n\n+class Pet {\n    ' se o pet est\u00e1 vivo\n    - alive     : boolean\n\n    - clean     : int\n    - cleanMax  : int\n    - energy    : int\n    - energyMax : int\n    - hungry    : int\n    - hungryMax : int\n    \n    - age       : int\n    - diamonds  : int\n    __\n\n    ' verifique se o pet est\u00e1 vivo\n    ' se estiver morto emita uma mensagem de erro\n    ' retorne true ou false de acordo com o estado do pet\n    - testAlive() : boolean\n    __\n\n    ' inicialize todos os atributos\n    ' inicialize os atributos Max de acordo com os par\u00e2metros\n    '   do construtor\n    ' hungry, energy e clean iniciam com os valores m\u00e1ximo\n    ' idade e diamantes iniciam com 0\n    ' alive deve ser true\n    + Pet(energyMax : int, hungryMax : int, cleanMax : int)\n    + toString() : string\n    __\n    \n    ' invoque o m\u00e9todo testAlive para verificar se o pet esta vivo\n    ' altere os atributos do pet de acordo com as regras de comer\n    ' utilizando os m\u00e9todos get e set\n    + eat()\n    \n    \n    ' invoque o m\u00e9todo testAlive para verificar se o pet esta vivo\n    ' altere os atributos do pet de acordo com as regras de jogar\n    ' utilizando os m\u00e9todos get e set\n    + play()\n    \n    \n    ' invoque o m\u00e9todo testAlive para verificar se o pet esta vivo\n    ' altere os atributos do pet de acordo com as regras de comer\n    ' utilizando os m\u00e9todos get e set\n    + shower()\n    \n    ' invoque o m\u00e9todo testAlive para verificar se o pet esta vivo\n    ' altere os atributos do pet de acordo com as regras de comer\n    ' utilizando os m\u00e9todos get e set\n    + sleep()\n    __\n\n    + getClean()      : int\n    + getCleanMax()   : int\n    + getEnergy()     : int\n    + getEnergyMax()  : int\n    + getHungry()     : int\n    + getHungryMax()  : int\n    \n    ' atribui o valor do par\u00e2metro ao atributo clean\n    ' se o valor for menor que 0 o pet morre de sujo\n    ' garanta que os valores ficar\u00e3o no interalo 0 - max\n\n    + setClean (value : int)\n    \n    ' atribui o valor de energia\n    ' se o valor ficar abaixo de 0, o pet morre de fraqueza\n    ' garanta que os valores ficar\u00e3o no interalo 0 - max\n    + setEnergy(value : int)\n    \n    ' atribui o valor da hungry\n    ' se o valor for menor ou igual a 0 o pet morre de fome\n    ' garanta que os valores ficar\u00e3o no interalo 0 - max\n    + setHungry(value : int)\n}\n\nclass Legenda {\n  + atributoPublic\n  - atributoPrivate\n  # atributoProtected\n  __\n  + m\u00e9todoPublic()\n  - m\u00e9todoPrivate()\n  # m\u00e9todoProtected()\n}\n\n```\n\n<!-- load -->\n\n[![_](../_images/resolucao.png)](https://youtu.be/X6SV1izH67w)\n\n***\n\n## Shell\n\n```bash\n#__case inicio\n# O comando \"$init energia saciedade limpeza\" recebe os valores do pet.\n# O pet inicia com 0 diamantes e 0 de idade.\n# Toda vez que $init \u00e9 chamado, um novo pet \u00e9 criado.\n$init 20 10 15\n# O comando \"$show\" mostra os par\u00e2metros do Pet na seguinte ordem\n# Energia/Max, Saciedade/Max, Limpeza/Max, Diamantes, Idade\n$show\nE:20/20, S:10/10, L:15/15, D:0, I:0\n$init 10 20 50\n$show\nE:10/10, S:20/20, L:50/50, D:0, I:0\n$end\n```\n\n***\n\n```bash\n#__case play - Brincar \n# O comando \"$play\" altera em -2 energia, -1 saciedade, -3 limpeza, +1 diamante, +1 idade.\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n\n#__case comer \n# O Comando \"$eat\" altera em -1 a energia, +4 a saciedade, -2 a limpeza, +0 diamantes,  +1 a idade\n$eat\n$show\nE:15/20, S:10/10, L:7/15, D:2, I:3\n\n#__case dormir\n# O Comando \"$sleep\" aumenta energia at\u00e9 o m\u00e1ximo e idade aumenta do n\u00famero de turnos que o pet dormiu.\n# Tamb\u00e9m perde 1 de saciedade.\n$sleep\n$show\nE:20/20, S:9/10, L:7/15, D:2, I:8\n\n#__case tomar banho\n# O comando \"$shower\" alteram em -3 energia, -1 na saciedade, MAX na limpeza, +0 diamantes, +2 na idade.\n$shower\n$show\nE:17/20, S:8/10, L:15/15, D:2, I:10\n\n#__case dormir sem sono\n# Para dormir, precisa ter perdido pelo menos 5 unidades de energia\n$sleep\nfail: nao esta com sono\n\n#__case morrer\n# Se algum atributo atingir 0, o pet morre e n\u00e3o poder\u00e1 executar nenhuma a\u00e7\u00e3o\n$play\n$play\n$play\n$play\n$show\nE:9/20, S:4/10, L:3/15, D:6, I:14\n$play\nfail: pet morreu de sujeira\n$show\nE:7/20, S:3/10, L:0/15, D:7, I:15\n$play\nfail: pet esta morto\n$eat\nfail: pet esta morto\n$shower\nfail: pet esta morto\n$sleep\nfail: pet esta morto\n$end\n```\n\n***\n\n```bash\n#__case fraqueza\n$init 5 10 10\n$play\n$play\n$play\nfail: pet morreu de fraqueza\n#__case morto de fraqueza\n$play\nfail: pet esta morto\n$show\nE:0/5, S:7/10, L:1/10, D:3, I:3\n$end\n```\n\n***\n\n```bash\n#__case fome\n$init 10 3 10\n$play\n$play\n$play\nfail: pet morreu de fome\n$play\nfail: pet esta morto\n$show\nE:4/10, S:0/3, L:1/10, D:3, I:3\n$end\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> inicio\ninit 20 10 15\nshow\ninit 10 20 50\nshow\nend\n========\n$init 20 10 15\n$show\nE:20/20, S:10/10, L:15/15, D:0, I:0\n$init 10 20 50\n$show\nE:10/10, S:20/20, L:50/50, D:0, I:0\n$end\n<<<<<<<<\n\n>>>>>>>> play - Brincar\ninit 20 10 15\nplay\nshow\nplay\nshow\nend\n========\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n$end\n<<<<<<<<\n\n>>>>>>>> comer\ninit 20 10 15\nplay\nshow\nplay\nshow\neat\nshow\nend\n========\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n$eat\n$show\nE:15/20, S:10/10, L:7/15, D:2, I:3\n$end\n<<<<<<<<\n\n>>>>>>>> dormir\ninit 20 10 15\nplay\nshow\nplay\nshow\neat\nshow\nsleep\nshow\nend\n========\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n$eat\n$show\nE:15/20, S:10/10, L:7/15, D:2, I:3\n$sleep\n$show\nE:20/20, S:9/10, L:7/15, D:2, I:8\n$end\n<<<<<<<<\n\n>>>>>>>> tomar banho\ninit 20 10 15\nplay\nshow\nplay\nshow\neat\nshow\nsleep\nshow\nshower\nshow\nend\n========\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n$eat\n$show\nE:15/20, S:10/10, L:7/15, D:2, I:3\n$sleep\n$show\nE:20/20, S:9/10, L:7/15, D:2, I:8\n$shower\n$show\nE:17/20, S:8/10, L:15/15, D:2, I:10\n$end\n<<<<<<<<\n\n>>>>>>>> dormir sem sono\ninit 20 10 15\nplay\nshow\nplay\nshow\neat\nshow\nsleep\nshow\nshower\nshow\nsleep\nend\n========\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n$eat\n$show\nE:15/20, S:10/10, L:7/15, D:2, I:3\n$sleep\n$show\nE:20/20, S:9/10, L:7/15, D:2, I:8\n$shower\n$show\nE:17/20, S:8/10, L:15/15, D:2, I:10\n$sleep\nfail: nao esta com sono\n$end\n<<<<<<<<\n\n>>>>>>>> morrer\ninit 20 10 15\nplay\nshow\nplay\nshow\neat\nshow\nsleep\nshow\nshower\nshow\nsleep\nplay\nplay\nplay\nplay\nshow\nplay\nshow\nplay\neat\nshower\nsleep\nend\n========\n$init 20 10 15\n$play\n$show\nE:18/20, S:9/10, L:12/15, D:1, I:1\n$play\n$show\nE:16/20, S:8/10, L:9/15, D:2, I:2\n$eat\n$show\nE:15/20, S:10/10, L:7/15, D:2, I:3\n$sleep\n$show\nE:20/20, S:9/10, L:7/15, D:2, I:8\n$shower\n$show\nE:17/20, S:8/10, L:15/15, D:2, I:10\n$sleep\nfail: nao esta com sono\n$play\n$play\n$play\n$play\n$show\nE:9/20, S:4/10, L:3/15, D:6, I:14\n$play\nfail: pet morreu de sujeira\n$show\nE:7/20, S:3/10, L:0/15, D:7, I:15\n$play\nfail: pet esta morto\n$eat\nfail: pet esta morto\n$shower\nfail: pet esta morto\n$sleep\nfail: pet esta morto\n$end\n<<<<<<<<\n\n>>>>>>>> fraqueza\ninit 5 10 10\nplay\nplay\nplay\nend\n========\n$init 5 10 10\n$play\n$play\n$play\nfail: pet morreu de fraqueza\n$end\n<<<<<<<<\n\n>>>>>>>> morto de fraqueza\ninit 5 10 10\nplay\nplay\nplay\nplay\nshow\nend\n========\n$init 5 10 10\n$play\n$play\n$play\nfail: pet morreu de fraqueza\n$play\nfail: pet esta morto\n$show\nE:0/5, S:7/10, L:1/10, D:3, I:3\n$end\n<<<<<<<<\n\n>>>>>>>> fome\ninit 10 3 10\nplay\nplay\nplay\nplay\nshow\nend\n========\n$init 10 3 10\n$play\n$play\n$play\nfail: pet morreu de fome\n$play\nfail: pet esta morto\n$show\nE:4/10, S:0/3, L:1/10, D:3, I:3\n$end\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
