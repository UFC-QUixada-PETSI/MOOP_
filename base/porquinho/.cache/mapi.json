{
    "title": "@porquinho: Guardando moedas e itens em um cofrinho",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@porquinho: Guardando moedas e itens em um cofrinho</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"guardando-moedas-e-itens-em-um-cofrinho\">Guardando moedas e\nitens em um cofrinho</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/porquinho/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<h2 id=\"intro\">Intro</h2>\n<p>A classe Pig (Porquinho) representa um cofre que permite aos usu\u00e1rios\nadicionar moedas e itens, que s\u00e3o armazenados com base no volume\ndispon\u00edvel. O cofre tem uma capacidade m\u00e1xima de volume e pode ser\nquebrado para extrair o conte\u00fado.</p>\n<h3 id=\"responsabilidades\">Responsabilidades</h3>\n<ul>\n<li><strong>Adicionar Moedas e Itens:</strong>\n<ul>\n<li>Os usu\u00e1rios podem adicionar moedas e itens ao cofrinho.</li>\n<li>A adi\u00e7\u00e3o \u00e9 limitada pela capacidade m\u00e1xima de volume do\nporquinho.</li>\n</ul></li>\n<li><strong>Quebrar o Cofrinho:</strong>\n<ul>\n<li>Os usu\u00e1rios podem quebrar o cofrinho para extrair seu conte\u00fado.</li>\n<li>Uma vez quebrado, o cofrinho n\u00e3o pode mais receber adi\u00e7\u00f5es.</li>\n</ul></li>\n<li><strong>Extrair Moedas e Itens:</strong>\n<ul>\n<li>Ap\u00f3s quebrar o cofrinho, os usu\u00e1rios podem extrair as moedas e itens\narmazenados.</li>\n<li>As moedas e itens s\u00e3o removidos do cofrinho e retornados ao\nusu\u00e1rio.</li>\n</ul></li>\n<li><strong>Obter Valor e Volume Total:</strong>\n<ul>\n<li>Os usu\u00e1rios podem verificar o valor total das moedas armazenadas no\ncofrinho.</li>\n<li>Tamb\u00e9m podem verificar o volume total ocupado pelos itens e\nmoedas.</li>\n</ul></li>\n</ul>\n<h2 id=\"guide\">Guide</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/porquinho/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<h3 id=\"classe-coin\">Classe Coin</h3>\n<ul>\n<li>A classe <code>Coin</code> possui os seguintes atributos:\n<ul>\n<li><code>value</code>: Valor da moeda.</li>\n<li><code>volume</code>: Volume da moeda.</li>\n<li><code>label</code>: R\u00f3tulo da moeda.</li>\n</ul></li>\n<li>Al\u00e9m disso, a classe possui os seguintes m\u00e9todos:\n<ul>\n<li><code>toString(): string</code>: Retorna uma representa\u00e7\u00e3o em string\nda moeda no formato <code>f\"{this.value.2f}, {this.volume}\"</code></li>\n<li><code>getValue(): number</code>: Retorna o valor da moeda.</li>\n<li><code>getVolume(): number</code>: Retorna o volume da moeda.</li>\n<li><code>getLabel(): string</code>: Retorna o r\u00f3tulo da moeda.</li>\n</ul></li>\n</ul>\n<h4 id=\"m\u00e9todo-est\u00e1tico\">M\u00e9todo Est\u00e1tico</h4>\n<p>A classe <code>Coin</code> possui m\u00e9todos est\u00e1ticos para criar\ninst\u00e2ncias de moedas com valores pr\u00e9-definidos:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode typescript\"><code class=\"sourceCode typescript\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C10 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">0.10</span><span class=\"op\">,</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"st\">&quot;C10&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C25 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">0.25</span><span class=\"op\">,</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"st\">&quot;C25&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C50 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">0.50</span><span class=\"op\">,</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"st\">&quot;C50&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C100 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">1.0</span><span class=\"op\">,</span> <span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"st\">&quot;C100&quot;</span>)<span class=\"op\">;</span></span></code></pre></div>\n<h3 id=\"classe-item\">Classe Item</h3>\n<p>A classe <code>Item</code> possui os seguintes atributos:</p>\n<ul>\n<li><code>label</code>: R\u00f3tulo do item.</li>\n<li><code>volume</code>: Volume do item.</li>\n</ul>\n<p>Al\u00e9m disso, a classe possui os seguintes m\u00e9todos:</p>\n<ul>\n<li><code>getLabel(): string</code>: Retorna o r\u00f3tulo do item.</li>\n<li><code>getVolume(): number</code>: Retorna o volume do item.</li>\n<li><code>setVolume(volume: number): void</code>: Define o volume do\nitem.</li>\n<li><code>setLabel(label: string): void</code>: Define o r\u00f3tulo do\nitem.</li>\n<li><code>toString(): string</code>: Retorna uma representa\u00e7\u00e3o em string\ndo item.\n<ul>\n<li>Formato de retorno: <code>label:volume</code></li>\n</ul></li>\n</ul>\n<h3 id=\"classe-pig\">Classe Pig</h3>\n<p>A classe <code>Pig</code> possui os seguintes atributos:</p>\n<ul>\n<li><code>items</code>: Array de itens.</li>\n<li><code>coins</code>: Array de moedas.</li>\n<li><code>volumeMax</code>: Volume m\u00e1ximo suportado pela\n\u201ccochonilha\u201d.</li>\n<li><code>broken</code>: Indica se a \u201ccochonilha\u201d est\u00e1 quebrada ou\nn\u00e3o.</li>\n</ul>\n<ol type=\"1\">\n<li><p><strong>Defini\u00e7\u00e3o da Classe Pig:</strong></p>\n<ul>\n<li>Definir a classe <code>Pig</code> com os atributos\n<code>items</code>, <code>coins</code>, <code>volumeMax</code> e\n<code>broken</code>.</li>\n<li>Implementar o construtor que recebe <code>volumeMax</code> como\npar\u00e2metro e o atribui \u00e0 propriedade <code>volumeMax</code>.</li>\n<li>Inicializar os arrays <code>items</code> e <code>coins</code> como\nvazios.</li>\n<li>Inicializar a propriedade <code>broken</code> como\n<code>false</code>.</li>\n</ul></li>\n<li><p><strong>Implementa\u00e7\u00e3o dos M\u00e9todos:</strong></p>\n<ul>\n<li><strong>M\u00e9todo <code>addCoin(coin: Coin): boolean</code></strong>\n<ul>\n<li>Aiciona uma moeda ao vetor de moedas.</li>\n<li>Par\u00e2metros:\n<ul>\n<li><code>coin</code>: Moeda a ser adicionada.</li>\n</ul></li>\n<li>Retorna <code>true</code> se a adi\u00e7\u00e3o for bem-sucedida, caso\ncontr\u00e1rio, retorna <code>false</code>.</li>\n<li>Erro: <code>fail: the pig is broken</code> se o porquinho estiver\nquebrado.</li>\n<li>Erro: <code>fail: the pig is full</code> se o porquinho estiver\ncheio.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>addItem(item: Item): boolean</code></strong>\n<ul>\n<li>Adiciona um item ao vetor de itens.</li>\n<li>Par\u00e2metros:\n<ul>\n<li><code>item</code>: Item a ser adicionado.</li>\n</ul></li>\n<li>Retorna <code>true</code> se a adi\u00e7\u00e3o for bem-sucedida, caso\ncontr\u00e1rio, retorna <code>false</code>.</li>\n<li>Erro: <code>fail: the pig is broken</code> se o porquinho estiver\nquebrado.</li>\n<li>Erro: <code>fail: the pig is full</code> se o porquinho estiver\ncheio.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>getVolume(): number</code></strong>\n<ul>\n<li>Retorna o volume total ocupado pelo conte\u00fado do porquinho.\n<strong>Passos:</strong></li>\n</ul></li>\n</ul>\n<ol type=\"1\">\n<li><strong>Verifica\u00e7\u00e3o de Estado:</strong>\n<ul>\n<li>Verifica se o porquinho est\u00e1 quebrada.\n<ul>\n<li>Se estiver quebrado, retorna volume 0.</li>\n</ul></li>\n</ul></li>\n<li><strong>C\u00e1lculo do Volume:</strong>\n<ul>\n<li>Inicializa a vari\u00e1vel <code>volume</code> com valor 0.</li>\n<li>Percorre o array de itens e adiciona o volume de cada item \u00e0\nvari\u00e1vel <code>volume</code>.</li>\n<li>Percorre o array de moedas e adiciona o volume de cada moeda \u00e0\nvari\u00e1vel <code>volume</code>.</li>\n<li>Retorna o valor total de <code>volume</code>.</li>\n</ul></li>\n</ol>\n<ul>\n<li><strong>M\u00e9todo <code>getValue(): number</code></strong>\n<ul>\n<li>Retorna o valor total das moedas no porquinho.\n<strong>Passos:</strong></li>\n</ul></li>\n</ul>\n<ol type=\"1\">\n<li><strong>C\u00e1lculo do Valor:</strong>\n<ul>\n<li>Inicializa a vari\u00e1vel <code>value</code> com valor 0.</li>\n<li>Percorre o array de moedas e adiciona o valor de cada moeda \u00e0\nvari\u00e1vel <code>value</code>.</li>\n<li>Retorna o valor total de <code>value</code>.</li>\n</ul></li>\n</ol>\n<ul>\n<li><strong>M\u00e9todo <code>breakPig(): boolean</code></strong>\n<ul>\n<li>Quebra o porquinho, tornando-o inutiliz\u00e1vel.</li>\n<li>Define a propriedade <code>broken</code> como\n<code>true</code>.</li>\n<li>Retorna <code>true</code> se a quebra for bem-sucedida, caso\ncontr\u00e1rio, retorna <code>false</code>.</li>\n<li>Erro: <code>fail: the pig is already broken</code> se o porquinho j\u00e1\nestiver quebrado.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>extractCoins(): Coin[]</code></strong>\n<ul>\n<li>Remove e retorna todas as moedas do porquinho.</li>\n<li>Retorna um array com todas as moedas removidas.</li>\n<li>Erro: <code>fail: you must break the pig first</code> se o porquinho\nn\u00e3o estiver quebrado.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>extractItems(): Item[]</code></strong>\n<ul>\n<li>Remove e retorna todos os itens do porquinho.</li>\n<li>Retorna um array com todos os itens removidos.</li>\n<li>Erro: <code>fail: you must break the pig first</code> se o porquinho\nn\u00e3o estiver quebrado.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>toString(): string</code></strong>\n<ul>\n<li>Retorna uma representa\u00e7\u00e3o em string do estado atual do porquinho,\nincluindo se est\u00e1 intacto ou quebrado, a lista de moedas e itens\narmazenados, o valor total e o volume ocupado.</li>\n<li>Formato de retorno:\n<code>state=estado : coins=[moedas] : items=[itens] : value=valor : volume=volumeAtual/volumeMaximo</code>.</li>\n</ul></li>\n</ul></li>\n</ol>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft/Solver.java\">Solver.java</a></li>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE init</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">20</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.00</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE insert</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addCoin <span class=\"dv\">10</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addCoin <span class=\"dv\">50</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">4</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE itens</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addItem ouro <span class=\"dv\">3</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">7</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addItem passaporte <span class=\"dv\">2</span></span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">9</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE failed break</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractItems</span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>fail: you must <span class=\"cf\">break</span> the pig first</span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>[]</span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractCoins</span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>fail: you must <span class=\"cf\">break</span> the pig first</span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>[]</span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">9</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE breaking</span></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>$break</span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>broken : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE getItems</span></span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractItems</span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>]</span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>broken : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE getCoins</span></span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-48\"><a href=\"#cb2-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractCoins</span>\n<span id=\"cb2-49\"><a href=\"#cb2-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>]</span>\n<span id=\"cb2-50\"><a href=\"#cb2-50\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-51\"><a href=\"#cb2-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-52\"><a href=\"#cb2-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>broken : coins<span class=\"op\">=</span>[] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.00</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb2-53\"><a href=\"#cb2-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 10</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$break</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 10</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is broken</span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>broken <span class=\"bu\">:</span> coins=[] : items=[] : value=0.00 : volume=0/10</span>\n<span id=\"cb3-12\"><a href=\"#cb3-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-13\"><a href=\"#cb3-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addItem</span> bilhete 2</span>\n<span id=\"cb3-14\"><a href=\"#cb3-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is broken</span>\n<span id=\"cb3-15\"><a href=\"#cb3-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-16\"><a href=\"#cb3-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-17\"><a href=\"#cb3-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>broken <span class=\"bu\">:</span> coins=[] : items=[] : value=0.00 : volume=0/10</span>\n<span id=\"cb3-18\"><a href=\"#cb3-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-19\"><a href=\"#cb3-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE full coin</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5</span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 10</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 25</span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5</span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 50</span>\n<span id=\"cb4-10\"><a href=\"#cb4-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is full</span>\n<span id=\"cb4-11\"><a href=\"#cb4-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-12\"><a href=\"#cb4-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb4-13\"><a href=\"#cb4-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5</span>\n<span id=\"cb4-14\"><a href=\"#cb4-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-15\"><a href=\"#cb4-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE full item</span></span>\n<span id=\"cb4-16\"><a href=\"#cb4-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addItem</span> ouro 1</span>\n<span id=\"cb4-17\"><a href=\"#cb4-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-18\"><a href=\"#cb4-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb4-19\"><a href=\"#cb4-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=<span class=\"pp\">[</span><span class=\"ss\">ouro:1</span><span class=\"pp\">]</span> : value=0.35 : volume=4/5</span>\n<span id=\"cb4-20\"><a href=\"#cb4-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-21\"><a href=\"#cb4-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addItem</span> pirulito 2</span>\n<span id=\"cb4-22\"><a href=\"#cb4-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is full</span>\n<span id=\"cb4-23\"><a href=\"#cb4-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-24\"><a href=\"#cb4-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb4-25\"><a href=\"#cb4-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=<span class=\"pp\">[</span><span class=\"ss\">ouro:1</span><span class=\"pp\">]</span> : value=0.35 : volume=4/5</span>\n<span id=\"cb4-26\"><a href=\"#cb4-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-27\"><a href=\"#cb4-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init\ninit 20\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT insert\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT itens\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT failed break\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT breaking\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nbreak\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$break\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT getItems\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nbreak\nshow\nextractItems\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$break\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=0/20\n$extractItems\n[ouro:3, passaporte:2]\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT getCoins\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nbreak\nshow\nextractItems\nshow\nextractCoins\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$break\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=0/20\n$extractItems\n[ouro:3, passaporte:2]\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=0/20\n$extractCoins\n[0.10:1, 0.50:3]\n$show\nstate=broken : coins=[] : items=[] : value=0.00 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\ninit 10\nbreak\naddCoin 10\nshow\naddItem bilhete 2\nshow\nend\n======== EXPECT\n$init 10\n$break\n$addCoin 10\nfail: the pig is broken\n$show\nstate=broken : coins=[] : items=[] : value=0.00 : volume=0/10\n$addItem bilhete 2\nfail: the pig is broken\n$show\nstate=broken : coins=[] : items=[] : value=0.00 : volume=0/10\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT full coin\ninit 5\naddCoin 10\naddCoin 25\nshow\naddCoin 50\nshow\nend\n======== EXPECT\n$init 5\n$addCoin 10\n$addCoin 25\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$addCoin 50\nfail: the pig is full\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT full item\ninit 5\naddCoin 10\naddCoin 25\nshow\naddCoin 50\nshow\naddItem ouro 1\nshow\naddItem pirulito 2\nshow\nend\n======== EXPECT\n$init 5\n$addCoin 10\n$addCoin 25\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$addCoin 50\nfail: the pig is full\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$addItem ouro 1\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[ouro:1] : value=0.35 : volume=4/5\n$addItem pirulito 2\nfail: the pig is full\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[ouro:1] : value=0.35 : volume=4/5\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "java": [
            {
                "name": "Shell.java",
                "contents": "\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.StringJoiner;\nimport java.util.stream.Collectors;\n\npublic class Shell {\n    public static void main(String[] _args) {\n\n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"init\")) {\n                // int maxVolume = Integer.parseInt(par[1]);\n            }\n            else if (cmd.equals(\"show\")) {\n                // Imprima o estado do porquinho\n            }\n            else if (cmd.equals(\"addCoin\")) {\n                // var coin = par[1];\n            }\n            else if (cmd.equals(\"addItem\")) {\n                // var item = par[1];\n                // var volume = Integer.parseInt(par[2]);\n            }\n            else if (cmd.equals(\"break\")) {\n                // pig.breakPig();\n            }\n            else if (cmd.equals(\"extractCoins\")) {\n                // Obtenha as moedas usando o m\u00e9todo extractCoins\n                // Imprima as moedas obtidas\n            }\n            else if (cmd.equals(\"extractItems\")) {\n                // Obtenha os itens usando o m\u00e9todo extractItems\n                // Imprima os itens obtidos\n            }\n            else {\n                System.out.println(\"fail: invalid command\");\n            }\n        }\n    }\n\n    public static Scanner scanner = new Scanner(System.in);\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <utility>\n#include <iomanip>\n#include <memory>\nusing namespace std;\n\ntemplate <typename CONTAINER, typename FN>\nstring map_join(const CONTAINER& container, FN fn, string sep = \", \", string prefix = \"[\", string suffix = \"]\") {\n    stringstream ss;\n    for (auto it = container.begin(); it != container.end(); ++it) {\n        ss << (it != container.begin() ? sep : \"\") << fn(*it);\n    }\n    return prefix + ss.str() + suffix;\n}\n\nint main() {\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;\n        } else if (cmd == \"init\") {\n            // int volumeMax;\n            // ss >> volumeMax;\n        } else if (cmd == \"show\") {\n        } else if (cmd == \"break\") {\n        } else if (cmd == \"addCoin\") {\n            // string label;\n            // ss >> label;\n        } else if (cmd == \"addItem\") {\n            // string label;\n            // int volume;\n            // ss >> label >> volume;\n        } else if (cmd == \"extractItems\") {\n            // Obtenha os itens com o m\u00e9todo extractItems\n            // e imprima os itens obtidos\n        } else if (cmd == \"extractCoins\") {\n            // Obtenha as moedas com o m\u00e9todo extractCoins\n            // e imprima as moedas obtidas\n        } else {\n            cout << \"fail: invalid command\\n\";\n        }\n    }\n}\n",
                "encoding": 0
            }
        ],
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\nfunction main() {\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const par = line.split(\" \");\n        const cmd = par[0];\n\n        if (cmd == \"end\") {\n            break;\n        }\n        else if (cmd == \"init\") {\n            // const volume = parseInt(par[1]);\n        }\n        else if (cmd == \"show\") {\n        }\n        else if (cmd == \"addCoin\") {\n            // const value = parseInt(par[1]);\n        }\n        else if (cmd == \"addItem\") {\n            // const label = par[1];\n            // const volume = parseInt(par[2]);\n        }\n        else if (cmd == \"break\") {\n        }\n        else if (cmd == \"extractCoins\") {\n        }\n        else if (cmd == \"extractItems\") {\n        }\n        else {\n            console.log(\"fail: invalid command\");\n        }\n    }\n}\n\nmain();\n",
                "encoding": 0
            }
        ]
    }
}
