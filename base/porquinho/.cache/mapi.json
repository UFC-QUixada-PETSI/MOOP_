{
    "title": "@porquinho: Guardando moedas e itens em um cofrinho",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@porquinho: Guardando moedas e itens em um cofrinho</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"guardando-moedas-e-itens-em-um-cofrinho\">Guardando moedas e\nitens em um cofrinho</h1>\n<!-- toch -->\n<table>\n<colgroup>\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 20%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/porquinho/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<h2 id=\"intro\">Intro</h2>\n<p>A classe Pig (Porquinho) representa um cofre que permite aos usu\u00e1rios\nadicionar moedas e itens, que s\u00e3o armazenados com base no volume\ndispon\u00edvel. O cofre tem uma capacidade m\u00e1xima de volume e pode ser\nquebrado para extrair o conte\u00fado.</p>\n<h3 id=\"responsabilidades\">Responsabilidades</h3>\n<ul>\n<li><strong>Adicionar Moedas e Itens:</strong>\n<ul>\n<li>Os usu\u00e1rios podem adicionar moedas e itens ao cofrinho.</li>\n<li>A adi\u00e7\u00e3o \u00e9 limitada pela capacidade m\u00e1xima de volume do\nporquinho.</li>\n</ul></li>\n<li><strong>Quebrar o Cofrinho:</strong>\n<ul>\n<li>Os usu\u00e1rios podem quebrar o cofrinho para extrair seu conte\u00fado.</li>\n<li>Uma vez quebrado, o cofrinho n\u00e3o pode mais receber adi\u00e7\u00f5es.</li>\n</ul></li>\n<li><strong>Extrair Moedas e Itens:</strong>\n<ul>\n<li>Ap\u00f3s quebrar o cofrinho, os usu\u00e1rios podem extrair as moedas e itens\narmazenados.</li>\n<li>As moedas e itens s\u00e3o removidos do cofrinho e retornados ao\nusu\u00e1rio.</li>\n</ul></li>\n<li><strong>Obter Valor e Volume Total:</strong>\n<ul>\n<li>Os usu\u00e1rios podem verificar o valor total das moedas armazenadas no\ncofrinho.</li>\n<li>Tamb\u00e9m podem verificar o volume total ocupado pelos itens e\nmoedas.</li>\n</ul></li>\n</ul>\n<h2 id=\"guide\">Guide</h2>\n<h3 id=\"classe-coin\">Classe Coin</h3>\n<ul>\n<li>A classe <code>Coin</code> possui os seguintes atributos:\n<ul>\n<li><code>value</code>: Valor da moeda.</li>\n<li><code>volume</code>: Volume da moeda.</li>\n<li><code>label</code>: R\u00f3tulo da moeda.</li>\n</ul></li>\n<li>Al\u00e9m disso, a classe possui os seguintes m\u00e9todos:\n<ul>\n<li><code>toString(): string</code>: Retorna uma representa\u00e7\u00e3o em string\nda moeda no formato <code>f\"{this.value.2f}, {this.volume}\"</code></li>\n<li><code>getValue(): number</code>: Retorna o valor da moeda.</li>\n<li><code>getVolume(): number</code>: Retorna o volume da moeda.</li>\n<li><code>getLabel(): string</code>: Retorna o r\u00f3tulo da moeda.</li>\n</ul></li>\n</ul>\n<h4 id=\"m\u00e9todo-est\u00e1tico\">M\u00e9todo Est\u00e1tico</h4>\n<p>A classe <code>Coin</code> possui m\u00e9todos est\u00e1ticos para criar\ninst\u00e2ncias de moedas com valores pr\u00e9-definidos:</p>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode typescript\"><code class=\"sourceCode typescript\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C10 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">0.10</span><span class=\"op\">,</span> <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"st\">&quot;C10&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C25 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">0.25</span><span class=\"op\">,</span> <span class=\"dv\">2</span><span class=\"op\">,</span> <span class=\"st\">&quot;C25&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C50 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">0.50</span><span class=\"op\">,</span> <span class=\"dv\">3</span><span class=\"op\">,</span> <span class=\"st\">&quot;C50&quot;</span>)<span class=\"op\">;</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">static</span> C100 <span class=\"op\">=</span> <span class=\"kw\">new</span> <span class=\"fu\">Coin</span>(<span class=\"fl\">1.0</span><span class=\"op\">,</span> <span class=\"dv\">4</span><span class=\"op\">,</span> <span class=\"st\">&quot;C100&quot;</span>)<span class=\"op\">;</span></span></code></pre></div>\n<h3 id=\"classe-item\">Classe Item</h3>\n<p>A classe <code>Item</code> possui os seguintes atributos:</p>\n<ul>\n<li><code>label</code>: R\u00f3tulo do item.</li>\n<li><code>volume</code>: Volume do item.</li>\n</ul>\n<p>Al\u00e9m disso, a classe possui os seguintes m\u00e9todos:</p>\n<ul>\n<li><code>getLabel(): string</code>: Retorna o r\u00f3tulo do item.</li>\n<li><code>getVolume(): number</code>: Retorna o volume do item.</li>\n<li><code>setVolume(volume: number): void</code>: Define o volume do\nitem.</li>\n<li><code>setLabel(label: string): void</code>: Define o r\u00f3tulo do\nitem.</li>\n<li><code>toString(): string</code>: Retorna uma representa\u00e7\u00e3o em string\ndo item.\n<ul>\n<li>Formato de retorno: <code>label:volume</code></li>\n</ul></li>\n</ul>\n<h3 id=\"classe-pig\">Classe Pig</h3>\n<p>A classe <code>Pig</code> possui os seguintes atributos:</p>\n<ul>\n<li><code>items</code>: Array de itens.</li>\n<li><code>coins</code>: Array de moedas.</li>\n<li><code>volumeMax</code>: Volume m\u00e1ximo suportado pela\n\u201ccochonilha\u201d.</li>\n<li><code>broken</code>: Indica se a \u201ccochonilha\u201d est\u00e1 quebrada ou\nn\u00e3o.</li>\n</ul>\n<ol type=\"1\">\n<li><p><strong>Defini\u00e7\u00e3o da Classe Pig:</strong></p>\n<ul>\n<li>Definir a classe <code>Pig</code> com os atributos\n<code>items</code>, <code>coins</code>, <code>volumeMax</code> e\n<code>broken</code>.</li>\n<li>Implementar o construtor que recebe <code>volumeMax</code> como\npar\u00e2metro e o atribui \u00e0 propriedade <code>volumeMax</code>.</li>\n<li>Inicializar os arrays <code>items</code> e <code>coins</code> como\nvazios.</li>\n<li>Inicializar a propriedade <code>broken</code> como\n<code>false</code>.</li>\n</ul></li>\n<li><p><strong>Implementa\u00e7\u00e3o dos M\u00e9todos:</strong></p>\n<ul>\n<li><strong>M\u00e9todo <code>addCoin(coin: Coin): boolean</code></strong>\n<ul>\n<li>Aiciona uma moeda ao vetor de moedas.</li>\n<li>Par\u00e2metros:\n<ul>\n<li><code>coin</code>: Moeda a ser adicionada.</li>\n</ul></li>\n<li>Retorna <code>true</code> se a adi\u00e7\u00e3o for bem-sucedida, caso\ncontr\u00e1rio, retorna <code>false</code>.</li>\n<li>Erro: <code>fail: the pig is broken</code> se o porquinho estiver\nquebrado.</li>\n<li>Erro: <code>fail: the pig is full</code> se o porquinho estiver\ncheio.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>addItem(item: Item): boolean</code></strong>\n<ul>\n<li>Adiciona um item ao vetor de itens.</li>\n<li>Par\u00e2metros:\n<ul>\n<li><code>item</code>: Item a ser adicionado.</li>\n</ul></li>\n<li>Retorna <code>true</code> se a adi\u00e7\u00e3o for bem-sucedida, caso\ncontr\u00e1rio, retorna <code>false</code>.</li>\n<li>Erro: <code>fail: the pig is broken</code> se o porquinho estiver\nquebrado.</li>\n<li>Erro: <code>fail: the pig is full</code> se o porquinho estiver\ncheio.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>getVolume(): number</code></strong>\n<ul>\n<li>Retorna o volume total ocupado pelo conte\u00fado do porquinho.\n<strong>Passos:</strong></li>\n</ul></li>\n</ul>\n<ol type=\"1\">\n<li><strong>Verifica\u00e7\u00e3o de Estado:</strong>\n<ul>\n<li>Verifica se o porquinho est\u00e1 quebrada.\n<ul>\n<li>Se estiver quebrado, retorna volume 0.</li>\n</ul></li>\n</ul></li>\n<li><strong>C\u00e1lculo do Volume:</strong>\n<ul>\n<li>Inicializa a vari\u00e1vel <code>volume</code> com valor 0.</li>\n<li>Percorre o array de itens e adiciona o volume de cada item \u00e0\nvari\u00e1vel <code>volume</code>.</li>\n<li>Percorre o array de moedas e adiciona o volume de cada moeda \u00e0\nvari\u00e1vel <code>volume</code>.</li>\n<li>Retorna o valor total de <code>volume</code>.</li>\n</ul></li>\n</ol>\n<ul>\n<li><strong>M\u00e9todo <code>getValue(): number</code></strong>\n<ul>\n<li>Retorna o valor total das moedas no porquinho.\n<strong>Passos:</strong></li>\n</ul></li>\n</ul>\n<ol type=\"1\">\n<li><strong>C\u00e1lculo do Valor:</strong>\n<ul>\n<li>Inicializa a vari\u00e1vel <code>value</code> com valor 0.</li>\n<li>Percorre o array de moedas e adiciona o valor de cada moeda \u00e0\nvari\u00e1vel <code>value</code>.</li>\n<li>Retorna o valor total de <code>value</code>.</li>\n</ul></li>\n</ol>\n<ul>\n<li><strong>M\u00e9todo <code>breakPig(): boolean</code></strong>\n<ul>\n<li>Quebra o porquinho, tornando-o inutiliz\u00e1vel.</li>\n<li>Define a propriedade <code>broken</code> como\n<code>true</code>.</li>\n<li>Retorna <code>true</code> se a quebra for bem-sucedida, caso\ncontr\u00e1rio, retorna <code>false</code>.</li>\n<li>Erro: <code>fail: the pig is already broken</code> se o porquinho j\u00e1\nestiver quebrado.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>extractCoins(): Coin[]</code></strong>\n<ul>\n<li>Remove e retorna todas as moedas do porquinho.</li>\n<li>Retorna um array com todas as moedas removidas.</li>\n<li>Erro: <code>fail: you must break the pig first</code> se o porquinho\nn\u00e3o estiver quebrado.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>extractItems(): Item[]</code></strong>\n<ul>\n<li>Remove e retorna todos os itens do porquinho.</li>\n<li>Retorna um array com todos os itens removidos.</li>\n<li>Erro: <code>fail: you must break the pig first</code> se o porquinho\nn\u00e3o estiver quebrado.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>toString(): string</code></strong>\n<ul>\n<li>Retorna uma representa\u00e7\u00e3o em string do estado atual do porquinho,\nincluindo se est\u00e1 intacto ou quebrado, a lista de moedas e itens\narmazenados, o valor total e o volume ocupado.</li>\n<li>Formato de retorno:\n<code>state=estado : coins=[moedas] : items=[itens] : value=valor : volume=volumeAtual/volumeMaximo</code>.</li>\n</ul></li>\n</ul></li>\n</ol>\n<h3 id=\"classe-adapter\">Classe Adapter</h3>\n<p>A classe <code>Adapter</code> possui um atributo:</p>\n<ul>\n<li><code>pig</code>: Objeto da classe <code>Pig</code>.</li>\n</ul>\n<p>Al\u00e9m disso, a classe possui os seguintes m\u00e9todos:</p>\n<ol type=\"1\">\n<li><p><strong>Defini\u00e7\u00e3o da Classe Adapter:</strong></p>\n<ul>\n<li>Definir a classe <code>Adapter</code> com o atributo\n<code>pig</code>, que \u00e9 um objeto da classe <code>Pig</code>.</li>\n<li>Implementar o construtor que recebe <code>volumeMax</code> como\npar\u00e2metro e inicializa o objeto <code>pig</code> com um novo objeto\n<code>Pig</code> passando <code>volumeMax</code> como argumento.</li>\n</ul></li>\n<li><p><strong>Implementa\u00e7\u00e3o dos M\u00e9todos:</strong></p>\n<ul>\n<li><strong>M\u00e9todo <code>addCoin(value: number): void</code></strong>\n<ul>\n<li><p>Adiciona uma moeda ao porquinho usando o m\u00e9todo\n<code>addCoin(coin: Coin)</code> da classe <code>Pig</code>.</p></li>\n<li><p>Par\u00e2metros:</p>\n<ul>\n<li><code>value</code>: Valor da moeda a ser adicionada.</li>\n</ul></li>\n<li><p>Exemplo de uso em typescript:</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode typescript\"><code class=\"sourceCode typescript\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span>      (value <span class=\"op\">===</span> <span class=\"dv\">10</span>)   { <span class=\"kw\">this</span><span class=\"op\">.</span><span class=\"at\">pig</span><span class=\"op\">.</span><span class=\"fu\">addCoin</span>(Coin<span class=\"op\">.</span><span class=\"at\">C10</span>)<span class=\"op\">;</span> } <span class=\"co\">// Adiciona uma moeda de 0.10 \u00e0 ao porquinho</span></span></code></pre></div></li>\n</ul></li>\n<li><strong>M\u00e9todo\n<code>addItem(label: string, volume: number): void</code></strong>\n<ul>\n<li>Cria um item e adiciona ao porquinho usando o m\u00e9todo\n<code>addItem(item: Item)</code> da classe <code>Pig</code>.</li>\n<li>Par\u00e2metros:\n<ul>\n<li><code>label</code>: R\u00f3tulo do item a ser adicionado.</li>\n<li><code>volume</code>: Volume do item a ser adicionado.</li>\n</ul></li>\n</ul></li>\n<li><strong>M\u00e9todo <code>breakPig(): void</code></strong>\n<ul>\n<li>Quebra o porquinho usando o m\u00e9todo <code>breakPig()</code> da classe\n<code>Pig</code>.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>extractItems(): string</code></strong>\n<ul>\n<li>Remove e retorna todos os itens do porquinho usando o m\u00e9todo\n<code>extractItems()</code> da classe <code>Pig</code>.</li>\n<li>Retorna uma string representando os itens removidos.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>extractCoins(): string</code></strong>\n<ul>\n<li>Remove e retorna todas as moedas da \u201ccochonilha\u201d usando o m\u00e9todo\n<code>extractCoins()</code> da classe <code>Pig</code>.</li>\n<li>Retorna uma string representando as moedas removidas.</li>\n</ul></li>\n<li><strong>M\u00e9todo <code>toString(): string</code></strong>\n<ul>\n<li><p>Retorna uma representa\u00e7\u00e3o em string do estado do porquinho usando\no m\u00e9todo <code>toString()</code> da classe <code>Pig</code>.</p></li>\n<li><p>Retorna uma string representando o estado atual do\nporquinho.</p></li>\n<li><p>Exemplo de uso:</p>\n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode typescript\"><code class=\"sourceCode typescript\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">toString</span>()<span class=\"op\">;</span> <span class=\"co\">// Retorna uma representa\u00e7\u00e3o em string do estado do porquinho.</span></span></code></pre></div>\n<hr /></li>\n</ul></li>\n</ul></li>\n</ol>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft.cpp\">draft.cpp</a></li>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft.java\">draft.java</a></li>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/porquinho/.cache/draft.ts\">draft.ts</a></li>\n</ul>\n<h2 id=\"guide-1\">Guide</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/porquinho/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<!-- load diagrama.puml fenced=ts:filter -->\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode ts\"><code class=\"sourceCode typescript\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&#39;--</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>@startuml</span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>skinparam defaultFontName Hasklig</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>skinparam dpi <span class=\"dv\">150</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&#39;==</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">class</span> Coin {</span>\n<span id=\"cb4-10\"><a href=\"#cb4-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> value  <span class=\"op\">:</span> double</span>\n<span id=\"cb4-11\"><a href=\"#cb4-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> volume <span class=\"op\">:</span> int</span>\n<span id=\"cb4-12\"><a href=\"#cb4-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> label  <span class=\"op\">:</span> <span class=\"dt\">string</span></span>\n<span id=\"cb4-13\"><a href=\"#cb4-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-14\"><a href=\"#cb4-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; static const Coin C10; //c++</span></span>\n<span id=\"cb4-15\"><a href=\"#cb4-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> {<span class=\"kw\">static</span>} C10  <span class=\"op\">:</span> Coin</span>\n<span id=\"cb4-16\"><a href=\"#cb4-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> {<span class=\"kw\">static</span>} C25  <span class=\"op\">:</span> Coin</span>\n<span id=\"cb4-17\"><a href=\"#cb4-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> {<span class=\"kw\">static</span>} C50  <span class=\"op\">:</span> Coin</span>\n<span id=\"cb4-18\"><a href=\"#cb4-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> {<span class=\"kw\">static</span>} C100 <span class=\"op\">:</span> Coin</span>\n<span id=\"cb4-19\"><a href=\"#cb4-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-20\"><a href=\"#cb4-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> <span class=\"fu\">Coin</span>(value<span class=\"op\">:</span> double<span class=\"op\">,</span> volume<span class=\"op\">:</span> int<span class=\"op\">,</span> label<span class=\"op\">:</span> <span class=\"dt\">string</span>)</span>\n<span id=\"cb4-21\"><a href=\"#cb4-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-22\"><a href=\"#cb4-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getValue</span>()  <span class=\"op\">:</span> double</span>\n<span id=\"cb4-23\"><a href=\"#cb4-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getVolume</span>() <span class=\"op\">:</span> int</span>\n<span id=\"cb4-24\"><a href=\"#cb4-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getLabel</span>()  <span class=\"op\">:</span> <span class=\"dt\">string</span></span>\n<span id=\"cb4-25\"><a href=\"#cb4-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-26\"><a href=\"#cb4-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; retorna value:volume</span></span>\n<span id=\"cb4-27\"><a href=\"#cb4-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">toString</span>() <span class=\"op\">:</span> <span class=\"dt\">string</span></span>\n<span id=\"cb4-28\"><a href=\"#cb4-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb4-29\"><a href=\"#cb4-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-30\"><a href=\"#cb4-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">class</span> Item {</span>\n<span id=\"cb4-31\"><a href=\"#cb4-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> label  <span class=\"op\">:</span> <span class=\"dt\">string</span></span>\n<span id=\"cb4-32\"><a href=\"#cb4-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> volume <span class=\"op\">:</span> int</span>\n<span id=\"cb4-33\"><a href=\"#cb4-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-34\"><a href=\"#cb4-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">Item</span>(label <span class=\"op\">:</span> <span class=\"dt\">string</span><span class=\"op\">,</span> volume <span class=\"op\">:</span> int)</span>\n<span id=\"cb4-35\"><a href=\"#cb4-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-36\"><a href=\"#cb4-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getLabel</span>()  <span class=\"op\">:</span> <span class=\"dt\">string</span></span>\n<span id=\"cb4-37\"><a href=\"#cb4-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getVolume</span>() <span class=\"op\">:</span> int</span>\n<span id=\"cb4-38\"><a href=\"#cb4-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">setLabel</span> (label  <span class=\"op\">:</span> <span class=\"dt\">string</span>)</span>\n<span id=\"cb4-39\"><a href=\"#cb4-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">setVolume</span>(volume <span class=\"op\">:</span> int)</span>\n<span id=\"cb4-40\"><a href=\"#cb4-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-41\"><a href=\"#cb4-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; retorna label:volume</span></span>\n<span id=\"cb4-42\"><a href=\"#cb4-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">toString</span>() <span class=\"op\">:</span> <span class=\"bu\">String</span></span>\n<span id=\"cb4-43\"><a href=\"#cb4-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb4-44\"><a href=\"#cb4-44\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-45\"><a href=\"#cb4-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">class</span> Pig {</span>\n<span id=\"cb4-46\"><a href=\"#cb4-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> broken    <span class=\"op\">:</span> <span class=\"dt\">boolean</span></span>\n<span id=\"cb4-47\"><a href=\"#cb4-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-48\"><a href=\"#cb4-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> coins     <span class=\"op\">:</span> <span class=\"bu\">Array</span><span class=\"op\">&lt;</span>Coin<span class=\"op\">&gt;</span></span>\n<span id=\"cb4-49\"><a href=\"#cb4-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> items     <span class=\"op\">:</span> <span class=\"bu\">Array</span><span class=\"op\">&lt;</span>Item<span class=\"op\">&gt;</span></span>\n<span id=\"cb4-50\"><a href=\"#cb4-50\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-51\"><a href=\"#cb4-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">-</span> volumeMax <span class=\"op\">:</span> int</span>\n<span id=\"cb4-52\"><a href=\"#cb4-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-53\"><a href=\"#cb4-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-54\"><a href=\"#cb4-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; inicializa o volumeMax</span></span>\n<span id=\"cb4-55\"><a href=\"#cb4-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">Pig</span>(volumeMax <span class=\"op\">:</span> int)</span>\n<span id=\"cb4-56\"><a href=\"#cb4-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-57\"><a href=\"#cb4-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se nao estiver quebrado e couber, adicione a moeda ao vetor de moedas</span></span>\n<span id=\"cb4-58\"><a href=\"#cb4-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">addCoin</span>(coin  <span class=\"op\">:</span> Coin) <span class=\"op\">:</span> <span class=\"dt\">boolean</span></span>\n<span id=\"cb4-59\"><a href=\"#cb4-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-60\"><a href=\"#cb4-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se n\u00e3o estiver quebrado e couber, adicione o item ao vetor de itens</span></span>\n<span id=\"cb4-61\"><a href=\"#cb4-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">addItem</span>(item  <span class=\"op\">:</span> Item) <span class=\"op\">:</span> <span class=\"dt\">boolean</span></span>\n<span id=\"cb4-62\"><a href=\"#cb4-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-63\"><a href=\"#cb4-63\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se o porco n\u00e3o estiver quebrado, quebre o porco</span></span>\n<span id=\"cb4-64\"><a href=\"#cb4-64\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">breakPig</span>() <span class=\"op\">:</span> <span class=\"dt\">boolean</span></span>\n<span id=\"cb4-65\"><a href=\"#cb4-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-66\"><a href=\"#cb4-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se estiver quebrado, pegue e retorne as moedas</span></span>\n<span id=\"cb4-67\"><a href=\"#cb4-67\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se n\u00e3o estiver quebrado, retorne um vetor vazio</span></span>\n<span id=\"cb4-68\"><a href=\"#cb4-68\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">extractCoins</span>() <span class=\"op\">:</span> <span class=\"bu\">Array</span><span class=\"op\">&lt;</span>Coin<span class=\"op\">&gt;</span></span>\n<span id=\"cb4-69\"><a href=\"#cb4-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-70\"><a href=\"#cb4-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se estiver quebrado, pegue e retorne os itens</span></span>\n<span id=\"cb4-71\"><a href=\"#cb4-71\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se n\u00e3o estiver quebrado, retorne um vetor vazio</span></span>\n<span id=\"cb4-72\"><a href=\"#cb4-72\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">extractItems</span>() <span class=\"op\">:</span> <span class=\"bu\">Array</span><span class=\"op\">&lt;</span>Item<span class=\"op\">&gt;</span></span>\n<span id=\"cb4-73\"><a href=\"#cb4-73\" aria-hidden=\"true\" tabindex=\"-1\"></a>  </span>\n<span id=\"cb4-74\"><a href=\"#cb4-74\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; retorna uma string com uma lista de itens, valor, volume / volumeMax, </span></span>\n<span id=\"cb4-75\"><a href=\"#cb4-75\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; e se o porquinho est\u00e1 quebrado ou n\u00e3o</span></span>\n<span id=\"cb4-76\"><a href=\"#cb4-76\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">toString</span>() <span class=\"op\">:</span> <span class=\"bu\">String</span></span>\n<span id=\"cb4-77\"><a href=\"#cb4-77\" aria-hidden=\"true\" tabindex=\"-1\"></a>  __</span>\n<span id=\"cb4-78\"><a href=\"#cb4-78\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se estiver quebrado</span></span>\n<span id=\"cb4-79\"><a href=\"#cb4-79\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&#39; retorne zero</span></span>\n<span id=\"cb4-80\"><a href=\"#cb4-80\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; se n\u00e3o estiver quebrado</span></span>\n<span id=\"cb4-81\"><a href=\"#cb4-81\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"st\">&#39; percorre o vetor de moedas e o vetor de itens somando o volume de cada um</span></span>\n<span id=\"cb4-82\"><a href=\"#cb4-82\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getVolume</span>()    <span class=\"op\">:</span> int</span>\n<span id=\"cb4-83\"><a href=\"#cb4-83\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-84\"><a href=\"#cb4-84\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; percorre o vetor de moedas somando o valor de cada moeda</span></span>\n<span id=\"cb4-85\"><a href=\"#cb4-85\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getValue</span>()     <span class=\"op\">:</span> double</span>\n<span id=\"cb4-86\"><a href=\"#cb4-86\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-87\"><a href=\"#cb4-87\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; retorna o volumeMax</span></span>\n<span id=\"cb4-88\"><a href=\"#cb4-88\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">getVolumeMax</span>() <span class=\"op\">:</span> int</span>\n<span id=\"cb4-89\"><a href=\"#cb4-89\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-90\"><a href=\"#cb4-90\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"st\">&#39; retorna se o porquinho est\u00e1 quebrado ou n\u00e3o</span></span>\n<span id=\"cb4-91\"><a href=\"#cb4-91\" aria-hidden=\"true\" tabindex=\"-1\"></a>  <span class=\"op\">+</span> <span class=\"fu\">isBroken</span>()     <span class=\"op\">:</span> <span class=\"dt\">boolean</span></span>\n<span id=\"cb4-92\"><a href=\"#cb4-92\" aria-hidden=\"true\" tabindex=\"-1\"></a>}</span>\n<span id=\"cb4-93\"><a href=\"#cb4-93\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&#39;--</span></span>\n<span id=\"cb4-94\"><a href=\"#cb4-94\" aria-hidden=\"true\" tabindex=\"-1\"></a>@enduml</span></code></pre></div>\n<!-- load -->\n<hr />\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE init</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">20</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.00</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE insert</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addCoin <span class=\"dv\">10</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addCoin <span class=\"dv\">50</span></span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">4</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE itens</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addItem ouro <span class=\"dv\">3</span></span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">7</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>$addItem passaporte <span class=\"dv\">2</span></span>\n<span id=\"cb5-18\"><a href=\"#cb5-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-19\"><a href=\"#cb5-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">9</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-20\"><a href=\"#cb5-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-21\"><a href=\"#cb5-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE failed break</span></span>\n<span id=\"cb5-22\"><a href=\"#cb5-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractItems</span>\n<span id=\"cb5-23\"><a href=\"#cb5-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>fail: you must <span class=\"cf\">break</span> the pig first</span>\n<span id=\"cb5-24\"><a href=\"#cb5-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>[]</span>\n<span id=\"cb5-25\"><a href=\"#cb5-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-26\"><a href=\"#cb5-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractCoins</span>\n<span id=\"cb5-27\"><a href=\"#cb5-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>fail: you must <span class=\"cf\">break</span> the pig first</span>\n<span id=\"cb5-28\"><a href=\"#cb5-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>[]</span>\n<span id=\"cb5-29\"><a href=\"#cb5-29\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-30\"><a href=\"#cb5-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-31\"><a href=\"#cb5-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>intact : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">9</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-32\"><a href=\"#cb5-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-33\"><a href=\"#cb5-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE breaking</span></span>\n<span id=\"cb5-34\"><a href=\"#cb5-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>$break</span>\n<span id=\"cb5-35\"><a href=\"#cb5-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-36\"><a href=\"#cb5-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>broken : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-37\"><a href=\"#cb5-37\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-38\"><a href=\"#cb5-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE getItems</span></span>\n<span id=\"cb5-39\"><a href=\"#cb5-39\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-40\"><a href=\"#cb5-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractItems</span>\n<span id=\"cb5-41\"><a href=\"#cb5-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ouro:<span class=\"dv\">3</span>, passaporte:<span class=\"dv\">2</span>]</span>\n<span id=\"cb5-42\"><a href=\"#cb5-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-43\"><a href=\"#cb5-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-44\"><a href=\"#cb5-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>broken : coins<span class=\"op\">=</span>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.60</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-45\"><a href=\"#cb5-45\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-46\"><a href=\"#cb5-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE getCoins</span></span>\n<span id=\"cb5-47\"><a href=\"#cb5-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-48\"><a href=\"#cb5-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>$extractCoins</span>\n<span id=\"cb5-49\"><a href=\"#cb5-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>[<span class=\"fl\">0.10</span>:<span class=\"dv\">1</span>, <span class=\"fl\">0.50</span>:<span class=\"dv\">3</span>]</span>\n<span id=\"cb5-50\"><a href=\"#cb5-50\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-51\"><a href=\"#cb5-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-52\"><a href=\"#cb5-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>state<span class=\"op\">=</span>broken : coins<span class=\"op\">=</span>[] : items<span class=\"op\">=</span>[] : value<span class=\"op\">=</span><span class=\"fl\">0.00</span> : volume<span class=\"op\">=</span><span class=\"dv\">0</span><span class=\"op\">/</span><span class=\"dv\">20</span></span>\n<span id=\"cb5-53\"><a href=\"#cb5-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 10</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$break</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 10</span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is broken</span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>broken <span class=\"bu\">:</span> coins=[] : items=[] : value=0.00 : volume=0/10</span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addItem</span> bilhete 2</span>\n<span id=\"cb6-14\"><a href=\"#cb6-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is broken</span>\n<span id=\"cb6-15\"><a href=\"#cb6-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-16\"><a href=\"#cb6-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb6-17\"><a href=\"#cb6-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>broken <span class=\"bu\">:</span> coins=[] : items=[] : value=0.00 : volume=0/10</span>\n<span id=\"cb6-18\"><a href=\"#cb6-18\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb6-19\"><a href=\"#cb6-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE full coin</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5</span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 10</span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 25</span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5</span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addCoin</span> 50</span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is full</span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb7-13\"><a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5</span>\n<span id=\"cb7-14\"><a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-15\"><a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE full item</span></span>\n<span id=\"cb7-16\"><a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addItem</span> ouro 1</span>\n<span id=\"cb7-17\"><a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-18\"><a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb7-19\"><a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=<span class=\"pp\">[</span><span class=\"ss\">ouro:1</span><span class=\"pp\">]</span> : value=0.35 : volume=4/5</span>\n<span id=\"cb7-20\"><a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-21\"><a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$addItem</span> pirulito 2</span>\n<span id=\"cb7-22\"><a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> the pig is full</span>\n<span id=\"cb7-23\"><a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-24\"><a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb7-25\"><a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">state</span><span class=\"op\">=</span>intact <span class=\"bu\">:</span> coins=[0.10:1, 0.25:2] : items=<span class=\"pp\">[</span><span class=\"ss\">ouro:1</span><span class=\"pp\">]</span> : value=0.35 : volume=4/5</span>\n<span id=\"cb7-26\"><a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb7-27\"><a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init\ninit 20\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT insert\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT itens\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT failed break\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT breaking\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nbreak\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$break\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT getItems\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nbreak\nshow\nextractItems\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$break\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=0/20\n$extractItems\n[ouro:3, passaporte:2]\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT getCoins\ninit 20\nshow\naddCoin 10\naddCoin 50\nshow\naddItem ouro 3\nshow\naddItem passaporte 2\nshow\nextractItems\nextractCoins\nshow\nbreak\nshow\nextractItems\nshow\nextractCoins\nshow\nend\n======== EXPECT\n$init 20\n$show\nstate=intact : coins=[] : items=[] : value=0.00 : volume=0/20\n$addCoin 10\n$addCoin 50\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=4/20\n$addItem ouro 3\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3] : value=0.60 : volume=7/20\n$addItem passaporte 2\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$extractItems\nfail: you must break the pig first\n[]\n$extractCoins\nfail: you must break the pig first\n[]\n$show\nstate=intact : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=9/20\n$break\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[ouro:3, passaporte:2] : value=0.60 : volume=0/20\n$extractItems\n[ouro:3, passaporte:2]\n$show\nstate=broken : coins=[0.10:1, 0.50:3] : items=[] : value=0.60 : volume=0/20\n$extractCoins\n[0.10:1, 0.50:3]\n$show\nstate=broken : coins=[] : items=[] : value=0.00 : volume=0/20\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\ninit 10\nbreak\naddCoin 10\nshow\naddItem bilhete 2\nshow\nend\n======== EXPECT\n$init 10\n$break\n$addCoin 10\nfail: the pig is broken\n$show\nstate=broken : coins=[] : items=[] : value=0.00 : volume=0/10\n$addItem bilhete 2\nfail: the pig is broken\n$show\nstate=broken : coins=[] : items=[] : value=0.00 : volume=0/10\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT full coin\ninit 5\naddCoin 10\naddCoin 25\nshow\naddCoin 50\nshow\nend\n======== EXPECT\n$init 5\n$addCoin 10\n$addCoin 25\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$addCoin 50\nfail: the pig is full\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT full item\ninit 5\naddCoin 10\naddCoin 25\nshow\naddCoin 50\nshow\naddItem ouro 1\nshow\naddItem pirulito 2\nshow\nend\n======== EXPECT\n$init 5\n$addCoin 10\n$addCoin 25\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$addCoin 50\nfail: the pig is full\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[] : value=0.35 : volume=3/5\n$addItem ouro 1\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[ouro:1] : value=0.35 : volume=4/5\n$addItem pirulito 2\nfail: the pig is full\n$show\nstate=intact : coins=[0.10:1, 0.25:2] : items=[ouro:1] : value=0.35 : volume=4/5\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "adapter.ts",
                "contents": "class Adapter {\n    public constructor(volumeMax: number) {\n        this.pig = new Pig(volumeMax);\n    }\n\n    addCoin(value: number): void {\n        if      (value === 10)   { this.pig.addCoin(Coin.C10); }\n        else if (value === 25)   { this.pig.addCoin(Coin.C25); }\n        else if (value === 50)   { this.pig.addCoin(Coin.C50); }\n        else if (value ===  100) { this.pig.addCoin(Coin.C100);}\n    }\n\n    addItem(label: string, volume: number): void {\n        let item = new Item(label, volume)\n        this.pig.addItem(item);\n    }\n\n    breakPig(): void {\n        this.pig.breakPig();\n    }\n\n    extractItems(): string {\n        return \"[\" + this.pig.extractItems().map(item => item.toString()).join(\", \") + \"]\";\n        return \"\";\n    }\n\n    extractCoins(): string{\n        return \"[\" + this.pig.extractCoins().map(item => item.toString()).join(\", \") + \"]\";\n        return \"\";\n    }\n\n    toString(): string {\n        return this.pig.toString();\n        return \"\";\n    }\n}\n\nexport { Adapter };",
                "encoding": 0
            },
            {
                "name": "aashell.ts",
                "contents": "import { Adapter } from \"./adapter\";\n\nfunction input(): string { let X: any = input; X.L = X.L || require(\"fs\").readFileSync(0).toString().split(/\\r?\\n/); return X.L.shift(); } // _TEST_ONLY_\n// function input(): string { let X: any = input; X.P = X.P || require(\"readline-sync\"); return X.P.question() } // _FREE_ONLY_\nfunction write(text: any, endl=\"\\n\") { process.stdout.write(\"\" + text + endl); }\nexport {};\n\nfunction main() {\n    let adp = new Adapter(0);\n\n    while (true) {\n        write(\"$\", \"\");\n        let line = input();\n        write(line); // _TEST_ONLY_\n        let args = line.split(\" \");\n\n        if      (args[0] === \"end\")   { break;                                                       }\n        else if (args[0] === \"init\")  { adp = new Adapter(Number(args[1]));                          }\n        else if (args[0] === \"show\")  { write(adp.toString());                                       }\n        else if (args[0] === \"addItem\")   { adp.addItem(args[1], +args[2]);                          }\n        else if (args[0] === \"addCoin\")   { adp.addCoin(+args[1]);\n        }\n        else if (args[0] === \"extractItems\") { \n            write(adp.extractItems());\n        }\n        else if (args[0] === \"extractCoins\") { \n            write(adp.extractCoins());\n        }\n        else if (args[0] === \"break\")    { adp.breakPig();                                           }\n        else                             { write(\"fail: comando invalido\");                          }\n    }\n}\n\nmain();",
                "encoding": 0
            },
            {
                "name": "item.ts",
                "contents": "//--\n\nclass Item {\n    private label: string;\n    private volume: number;\n\n    public constructor(label: string, volume: number) {\n        this.label = label;\n        this.volume = volume;\n    }\n    public getLabel(): string {\n        return this.label;\n    }\n    public getVolume(): number {\n        return this.volume;\n    }\n    public setVolume(volume: number): void {\n        this.volume = volume;\n    }\n    public setLabel(label: string): void {\n        this.label = label;\n    }\n    public toString(): string {\n        return `${this.label}:${this.volume}`;\n    }\n}\n\nexport { Item };",
                "encoding": 0
            },
            {
                "name": "pig.ts",
                "contents": "//--\n\nimport { Coin } from \"./coin\";\nimport { Item } from \"./item\";\n\nclass Pig {\n    private items: Item[];\n    private coins: Coin[];\n    volumeMax: number;\n    broken: boolean;\n\n    public constructor(volumeMax: number) {\n        this.volumeMax = volumeMax;\n        this.broken = false;\n        this.items = [];\n        this.coins = [];\n    }\n\n    public addCoin(coin: Coin): boolean {\n        if (this.broken) {\n            console.log(\"fail: the pig is broken\");\n            return false;\n        }\n        if (this.getVolume() + coin.getVolume() > this.volumeMax) {\n            console.log(\"fail: the pig is full\");\n            return false;\n        }\n        this.coins.push(coin);\n        return true;\n    }\n\n    public addItem(item: Item): boolean {\n        if (this.broken) {\n            console.log(\"fail: the pig is broken\");\n            return false;\n        }\n        if (this.getVolume() + item.getVolume() > this.volumeMax) {\n            console.log(\"fail: the pig is full\");\n            return false;\n        }\n        this.items.push(item);\n        return true;\n    }\n\n    public getVolume(): number {\n        if (this.broken) {\n            return 0;\n        }\n        let volume = 0;\n        for (let item of this.items) {\n            volume += item.getVolume();\n        }\n        for (let coin of this.coins) {\n            volume += coin.getVolume();\n        }\n        return volume;\n    }\n    public getValue(): number {\n        let value = 0;\n        for (let coin of this.coins) {\n            value += coin.getValue();\n        }\n        return value;\n    }\n\n    public breakPig(): boolean {\n        if (this.broken) {\n            console.log(\"fail: the pig is already broken\");\n            return false;\n        }\n        this.broken = true;\n        return true;\n    }\n\n    public extractCoins(): Coin[] {\n        if (!this.broken) {\n            console.log(\"fail: you must break the pig first\");\n            return [];\n        }\n        let aux = this.coins;\n        this.coins = [];\n        return aux;\n    }\n\n    public extractItems(): Item[] {\n        if (!this.broken) {\n            console.log(\"fail: you must break the pig first\");\n            return [];\n        }\n        let aux = this.items;\n        this.items = [];\n        return aux;\n    }\n\n\n    public toString(): string {\n        let state = this.broken ? \"broken\" : \"intact\";\n        let coins = \"[\" + this.coins.map(coin => coin.toString()).join(\", \") + \"]\";\n        let items = \"[\" + this.items.map(item => item.toString()).join(\", \") + \"]\";\n        return `state=${state} : coins=${coins} : items=${items}` + \n                ` : value=${this.getValue().toFixed(2)}` + \n                ` : volume=${this.getVolume()}/${this.volumeMax}`;\n    }\n}\n\nexport { Pig };",
                "encoding": 0
            }
        ]
    }
}
