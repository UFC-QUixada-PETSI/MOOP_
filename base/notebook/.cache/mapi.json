{
    "title": "@notebook: Notebook com carregador e bateria",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@notebook: Notebook com carregador e bateria</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Notebook com carregador e bateria</h1>\n<!-- toch -->\n<h2><a href=\"#guide\">Guide</a></h2>\n<!-- toch -->\n\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/notebook/cover.jpg\" /></p>\n<h2>Guide</h2>\n<h3>Parte 1 - Apenas o notebook</h3>\n<ul>\n<li>Vamos modelar um notebook que pode ser ligado e desligado.</li>\n<li>Crie a classe Notebook com os m\u00e9todos <code>ligar</code> e <code>desligar</code>.</li>\n<li>Crie o m\u00e9todo <code>mostrar</code> que exibe o status do notebook.</li>\n<li>Crie um atributo <code>ligado</code> que indica se o notebook est\u00e1 ligado ou desligado.</li>\n<li>Coloque os atributos como privados e crie m\u00e9todos para acess\u00e1-los e modific\u00e1-los.</li>\n<li>Crie o m\u00e9todo <code>usar(tempo)</code> que exibe uma mensagem de uso do notebook por um tempo.</li>\n<li>Crie um c\u00f3digo de teste como o teste abaixo.</li>\n</ul>\n<div class=\"language-python highlight\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Notebook</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span> <span class=\"c1\"># isso \u00e9 o construtor em python</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__ligado</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span> <span class=\"c1\"># ligado \u00e9 atributo privado e inicializa com false</span>\n    <span class=\"c1\"># preencha com os m\u00e9todos necess\u00e1rios</span>\n\n<span class=\"n\">notebook</span> <span class=\"o\">=</span> <span class=\"n\">Notebook</span><span class=\"p\">()</span> <span class=\"c1\"># criando notebook</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Desligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>     <span class=\"c1\"># msg: erro: ligue o notebook primeiro</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>      <span class=\"c1\"># msg: notebook ligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Ligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>     <span class=\"c1\"># msg: Usando por 10 minutos</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">desligar</span><span class=\"p\">()</span>   <span class=\"c1\"># msg: notebook desligado</span>\n</code></pre></div>\n<h3>Parte 2 - Notebook com bateria</h3>\n<ul>\n<li>Nosso notebook vai ser modificado para ter um atributo <code>bateria</code>.</li>\n<li>Esse atributo pode conter uma inst\u00e2ncia de uma bateria ou <code>null</code> se n\u00e3o houver bateria.</li>\n<li>A classe Bateria deve ter um atributo <code>carga</code> que indica a quantidade de carga.</li>\n<li>A classe Bateria deve ter um atributo <code>capacidade</code> que indica a quantidade m\u00e1xima de carga.</li>\n<li>Coloque os atributos como privados e crie m\u00e9todos para acess\u00e1-los e modific\u00e1-los.</li>\n<li>Ao criar uma bateria, passe a capacidade como par\u00e2metro e inicialize a carga com a capacidade.</li>\n<li>Para ligar o notebook, ele deve ter uma bateria e a carga da bateria deve ser maior que 0.</li>\n<li>Ao usar o notebook, a carga da bateria deve diminuir.</li>\n<li>Se a carga da bateria for 0, o notebook deve desligar.</li>\n<li>Crie um c\u00f3digo de teste como o teste abaixo.</li>\n</ul>\n<div class=\"language-python highlight\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Bateria</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">capacidade</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__capacidade</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">capacidade</span> <span class=\"c1\"># capacidade \u00e9 privado</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__carga</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">capacidade</span>      <span class=\"c1\"># carga \u00e9 privado e inicia com capacidade</span>\n    <span class=\"c1\"># preencha com os m\u00e9todos necess\u00e1rios</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Notebook</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__ligado</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>           <span class=\"c1\"># inicializa desligado</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__bateria</span><span class=\"p\">:</span> <span class=\"n\">Bateria</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span> <span class=\"c1\"># inicializa sem bateria</span>\n    <span class=\"c1\"># preencha com os m\u00e9todos necess\u00e1rios</span>\n\n<span class=\"n\">notebook</span> <span class=\"o\">=</span> <span class=\"n\">Notebook</span><span class=\"p\">()</span> <span class=\"c1\"># criando notebook</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Desligado, Bateria: Nenhuma</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>     <span class=\"c1\"># msg: erro: ligue o notebook primeiro</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>      <span class=\"c1\"># msg: n\u00e3o foi poss\u00edvel ligar</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Desligado, Bateria: Nenhuma</span>\n<span class=\"n\">bateira</span> <span class=\"o\">=</span> <span class=\"n\">Bateria</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"c1\"># criando bateria que suporta 50 minutos e come\u00e7a carregada</span>\n<span class=\"n\">bateira</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>     <span class=\"c1\"># (50/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">setBateria</span><span class=\"p\">(</span><span class=\"n\">bateria</span><span class=\"p\">)</span> <span class=\"c1\"># coloca a bateria no notebook</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Desligado, Bateria: (50/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>     <span class=\"c1\"># msg: notebook desligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>      <span class=\"c1\"># msg: notebook ligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Ligado, Bateria: (50/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>     <span class=\"c1\"># msb: Usando por 30 minutos</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Ligado, Bateria: (20/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>     <span class=\"c1\"># msb: Usando por 20 minutos, notebook descarregou</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Desligado, Bateria: (0/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>      <span class=\"c1\"># msg: n\u00e3o foi poss\u00edvel ligar</span>\n<span class=\"n\">bateira</span> <span class=\"o\">=</span> <span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">rmBateria</span><span class=\"p\">()</span> <span class=\"c1\"># msg: bateria removida</span>\n<span class=\"n\">bateira</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>     <span class=\"c1\"># (0/50)</span>\n</code></pre></div>\n<h3>Parte 3 - Notebook com carregador e bateria</h3>\n<ul>\n<li>Vamos modelar um notebook que pode ter ou n\u00e3o tanto carregador quanto bateria.</li>\n<li>Ter\u00e1 que reescrever os m\u00e9todos <code>usar &lt;tempo&gt;</code>, <code>ligar</code>.</li>\n<li>S\u00f3 poder\u00e1 <code>ligar</code> se tiver carga na bateria ou carregador.</li>\n<li>Enquanto em uso<ul>\n<li>se tiver apenas na bateria, a carga da bateria deve diminuir.</li>\n<li>se estiver na bateria e no carregador, a carga deve aumentar.</li>\n</ul>\n</li>\n<li>O carregador possui uma pot\u00eancia que implica na quantidade de carga carregada por unidade de tempo.</li>\n<li>A bateria possui uma carga e uma capacidade que representam a carga atual e o m\u00e1ximo poss\u00edvel de carga.</li>\n<li>Para simplificar, vamos utilizar minutos como a unidade de tempo e de carga.</li>\n<li>Uma bateria <code>15/50</code> significa que possui ainda 15 minutos de carga e suporta no m\u00e1ximo 50.</li>\n<li>Um carregador com 3 de pot\u00eancia consegue em um minuto de uso, adicionar 3 minutos de carga na bateria.</li>\n<li>Para facilitar, voc\u00ea pode imaginar o notebook sendo utilizado da seguinte forma.</li>\n<li>Adapte a implementa\u00e7\u00e3o para sua linguagem. Complete com os m\u00e9todos necess\u00e1rios.</li>\n</ul>\n<div class=\"language-python highlight\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Bateria</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">capacidade</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__capacidade</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">capacidade</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__carga</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">capacidade</span>\n    <span class=\"c1\"># preencha com os m\u00e9todos necess\u00e1rios</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Carregador</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">potencia</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__potencia</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">potencia</span>\n    <span class=\"c1\"># preencha com os m\u00e9todos necess\u00e1rios</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Notebook</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__ligado</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>           <span class=\"c1\"># inicializa desligado</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__bateria</span><span class=\"p\">:</span> <span class=\"n\">Bateria</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span> <span class=\"c1\"># inicializa sem bateria</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__carregador</span><span class=\"p\">:</span> <span class=\"n\">Carregador</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span> <span class=\"c1\"># inicializa sem carregador</span>\n    <span class=\"c1\"># preencha com os m\u00e9todos necess\u00e1rios</span>\n\n\n<span class=\"n\">notebook</span> <span class=\"o\">=</span> <span class=\"n\">Notebook</span><span class=\"p\">()</span> <span class=\"c1\"># criando notebook</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>    <span class=\"c1\"># msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>      <span class=\"c1\"># msg: n\u00e3o foi poss\u00edvel ligar</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>     <span class=\"c1\"># msg: notebook desligado</span>\n\n<span class=\"n\">bateria</span> <span class=\"o\">=</span> <span class=\"n\">Bateria</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"c1\"># criando bateria que suporta 50 minutos e come\u00e7a carregada</span>\n<span class=\"n\">battery</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>     <span class=\"c1\"># (50/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">setBateria</span><span class=\"p\">(</span><span class=\"n\">bateria</span><span class=\"p\">)</span> <span class=\"c1\"># coloca a bateria no notebook</span>\n\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Desligado, Bateria: (50/50), Carregador: Desconectado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>   <span class=\"c1\"># msg: notebook ligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Ligado, Bateria: (50/50), Carregador: Desconectado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>  <span class=\"c1\"># msb: Usando por 30 minutos</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Ligado, Bateria: (20/50), Carregador: Desconectado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>  <span class=\"c1\"># msb: Usando por 20 minutos, notebook descarregou</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Desligado, Bateria: (0/50), Carregador: Desconectado</span>\n\n<span class=\"n\">bateria</span> <span class=\"o\">=</span> <span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">rmBateria</span><span class=\"p\">()</span> <span class=\"c1\"># msg: bateria removida</span>\n<span class=\"n\">bateria</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span>  <span class=\"c1\"># (0/50)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado</span>\n\n<span class=\"n\">carregador</span> <span class=\"o\">=</span> <span class=\"n\">Carregador</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\"># criando carregador com 2 de potencia</span>\n<span class=\"n\">carregador</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># (Pot\u00eancia 2)</span>\n\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">setCarregador</span><span class=\"p\">(</span><span class=\"n\">carregador</span><span class=\"p\">)</span> <span class=\"c1\"># adicionando carregador no notebook</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Desligado, Bateria: Nenhuma, Carregador: (Pot\u00eancia 2)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">ligar</span><span class=\"p\">()</span>   <span class=\"c1\"># msg: notebook ligado</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Ligado, Bateria: Nenhuma, Carregador: (Pot\u00eancia 2)</span>\n\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">setBateria</span><span class=\"p\">(</span><span class=\"n\">bateria</span><span class=\"p\">)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Ligado, Bateria: (0/50), Carregador: (Pot\u00eancia 2)</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">usar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># msg: Notebook utilizado com sucesso</span>\n<span class=\"n\">notebook</span><span class=\"o\">.</span><span class=\"n\">mostrar</span><span class=\"p\">()</span> <span class=\"c1\"># msg: Status: Ligado, Bateria: (20/50), Carregador: (Pot\u00eancia 2)</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "type": "hide"
        }
    ],
    "draft": {}
}
