{
    "title": "@salario: @salario",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@salario: @salario</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>@salario</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/salario/cover.jpg\" /></p>\n<p>A UFC est\u00e1 precisando de um novo sistema de gera\u00e7\u00e3o de folhas de pagamento, voc\u00ea aceita o desafio?'</p>\n<p>Voc\u00ea deve desenvolver um sistema para calcular o sal\u00e1rio de um funcion\u00e1rio de acordo com sua fun\u00e7\u00e3o e adicionais</p>\n<h2>Intro</h2>\n<ul>\n<li>Cadastrar funcionario pelo nome.<ul>\n<li>nome do funcionario \u00e9 \u00fanico</li>\n<li>funcion\u00e1rio pode ser professor, servidor tec. administrativo ou terceirizado</li>\n</ul>\n</li>\n<li>Mostrar funcion\u00e1rio</li>\n<li>Remover funcion\u00e1rio</li>\n</ul>\n<h3>Regras de neg\u00f3cio parte 1</h3>\n<ul>\n<li>O sal\u00e1rio de professor deve ser calculado com base na sua classe<ul>\n<li>A 3000</li>\n<li>B 5000</li>\n<li>C 7000</li>\n<li>D 9000</li>\n<li>E 11000</li>\n</ul>\n</li>\n<li>O Sta(Servidor T\u00e9cnico Administrativo) tem um salario base de 3000 e \u00e9 acrescentado mais 300 de acordo com seu n\u00edvel<ul>\n<li>salario = 3000 + 300 * nivel</li>\n</ul>\n</li>\n<li>O sal\u00e1rio do Ter(Terceirizado) \u00e9 obtido do produto das horas trabalhadas e 4\n    e \u00e9 acrescentado 500 se for insalubre<ul>\n<li>salario = 4 * horas (+ 500 se insalubre)</li>\n</ul>\n</li>\n</ul>\n<h3>Regras de neg\u00f3cio parte 2</h3>\n<ul>\n<li>Adicionar di\u00e1rias</li>\n<li>Prof podem receber no m\u00e1ximo 2 di\u00e1rias, Sta no m\u00e1ximo 1 e Ter n\u00e3o podem receber.</li>\n<li>Diarias aumentam 100 reais no salario</li>\n</ul>\n<h3>Requisitos e Regras de neg\u00f3cio parte 3</h3>\n<ul>\n<li>Adicionar b\u00f4nus. O valor do b\u00f4nus \u00e9 definido e ent\u00e3o \u00e9 dividido igualmente entre todos os funcion\u00e1rios.</li>\n<li>O valor do b\u00f4nus pode mudar e o sal\u00e1rio deve ser recalculado.</li>\n</ul>\n<h2>Shell</h2>\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#TEST_CASE begin</span>\n<span class=\"nv\">$addProf</span><span class=\"w\"> </span>david<span class=\"w\"> </span>C\n<span class=\"nv\">$addProf</span><span class=\"w\"> </span>elvis<span class=\"w\"> </span>D\n<span class=\"nv\">$addSta</span><span class=\"w\"> </span>gilmario<span class=\"w\"> </span><span class=\"m\">3</span>\n<span class=\"nv\">$addTer</span><span class=\"w\"> </span>helder<span class=\"w\"> </span><span class=\"m\">40</span><span class=\"w\"> </span>sim\n<span class=\"nv\">$showAll</span>\nprof:david:C:7000\nprof:elvis:D:9000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n<span class=\"nv\">$rm</span><span class=\"w\"> </span>elvis\n<span class=\"nv\">$showAll</span>\nprof:david:C:7000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n\n<span class=\"c1\">#TEST_CASE diaria</span>\n<span class=\"nv\">$addDiaria</span><span class=\"w\"> </span>david\n<span class=\"nv\">$addDiaria</span><span class=\"w\"> </span>david\n<span class=\"nv\">$addDiaria</span><span class=\"w\"> </span>david\nfail:<span class=\"w\"> </span>limite<span class=\"w\"> </span>de<span class=\"w\"> </span>diarias<span class=\"w\"> </span>atingido\n<span class=\"nv\">$show</span><span class=\"w\"> </span>david\nprof:david:C:7200\n<span class=\"nv\">$addDiaria</span><span class=\"w\"> </span>gilmario\n<span class=\"nv\">$addDiaria</span><span class=\"w\"> </span>gilmario\nfail:<span class=\"w\"> </span>limite<span class=\"w\"> </span>de<span class=\"w\"> </span>diarias<span class=\"w\"> </span>atingido\n<span class=\"nv\">$show</span><span class=\"w\"> </span>gilmario\nsta:gilmario:3:4000\n<span class=\"nv\">$addDiaria</span><span class=\"w\"> </span>helder\nfail:<span class=\"w\"> </span>terc<span class=\"w\"> </span>nao<span class=\"w\"> </span>pode<span class=\"w\"> </span>receber<span class=\"w\"> </span>diaria\n\n<span class=\"c1\">#TEST_CASE bonus</span>\n\n<span class=\"c1\"># um bonus de 600, para 3 funcion\u00e1rios vai dar 200 reais pra cada</span>\n<span class=\"nv\">$setBonus</span><span class=\"w\"> </span><span class=\"m\">600</span>\n<span class=\"nv\">$show</span><span class=\"w\"> </span>gilmario<span class=\"w\"> </span>\nsta:gilmario:3:4200\n\n<span class=\"nv\">$setBonus</span><span class=\"w\"> </span><span class=\"m\">300</span>\n<span class=\"nv\">$show</span><span class=\"w\"> </span>gilmario\nsta:gilmario:3:4100\n<span class=\"nv\">$end</span>\n</code></pre></div>\n<h2>Guide</h2>\n<ul>\n<li>Fa\u00e7a com que prof, sta e ter sejam subclasses de Funcion\u00e1rio, ou seja herdem todos os atributos e m\u00e9todos da classe Funcion\u00e1rio.</li>\n<li>Utilize apenas um reposit\u00f3rio (tire proveito do polimorfismo).</li>\n<li>As classes filhas devem sobrescrever os m\u00e9todos herdados da classe pai sempre que voc\u00ea achar necess\u00e1rio.</li>\n</ul>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/salario/diagrama.png\" /></p>\n<hr />\n<h2>Draft</h2>\n<!--FILTER Solver.java java-->\n<div class=\"language-java highlight\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"nc\">MsgException</span><span class=\"w\"> </span><span class=\"kd\">extends</span><span class=\"w\"> </span><span class=\"n\">RuntimeException</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">MsgException</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">abstract</span><span class=\"w\"> </span><span class=\"kd\">class</span> <span class=\"nc\">Funcionario</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">bonus</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">diarias</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">maxDiarias</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Funcionario</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getNome</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">setBonus</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">bonus</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">bonus</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bonus</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">//se n\u00e3o atingiu o m\u00e1ximo, adicione mais uma di\u00e1ria</span>\n<span class=\"w\">    </span><span class=\"c1\">//se atingiu o m\u00e1ximo, lance uma MsgException</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addDiaria</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">//retorna bonus + diarias * 100</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">getSalario</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Professor</span><span class=\"w\"> </span><span class=\"kd\">extends</span><span class=\"w\"> </span><span class=\"n\">Funcionario</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">classe</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">//inicializa classe e muda maxDiarias para 2</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Professor</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">classe</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getClasse</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"c1\">//l\u00f3gica do sal\u00e1rio do professor</span>\n<span class=\"w\">    </span><span class=\"c1\">//usa o super.getSalario para pegar bonus e diarias</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">getSalario</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">STA</span><span class=\"w\"> </span><span class=\"kd\">extends</span><span class=\"w\"> </span><span class=\"n\">Funcionario</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">nivel</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">STA</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">nivel</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">getNivel</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">getSalario</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Tercerizado</span><span class=\"w\"> </span><span class=\"kd\">extends</span><span class=\"w\"> </span><span class=\"n\">Funcionario</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">horas</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">protected</span><span class=\"w\"> </span><span class=\"kt\">boolean</span><span class=\"w\"> </span><span class=\"n\">isSalubre</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"nf\">Tercerizado</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">horas</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">isSalubre</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">getHoras</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">getIsSalubre</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">getSalario</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addDiaria</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">UFC</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">private</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Funcionario</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">funcionarios</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">TreeMap</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"nf\">toString</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"n\">Funcionario</span><span class=\"w\"> </span><span class=\"nf\">getFuncionario</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">addFuncionario</span><span class=\"p\">(</span><span class=\"n\">Funcionario</span><span class=\"w\"> </span><span class=\"n\">funcionario</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">rmFuncionario</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">nome</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">//reparte o bonus para todos os funcionarios</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">setBonus</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">bonus</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Solver</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">public</span><span class=\"w\"> </span><span class=\"kd\">static</span><span class=\"w\"> </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">Scanner</span><span class=\"w\"> </span><span class=\"n\">scanner</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Scanner</span><span class=\"p\">(</span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">in</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">UFC</span><span class=\"w\"> </span><span class=\"n\">ufc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">UFC</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">scanner</span><span class=\"p\">.</span><span class=\"na\">nextLine</span><span class=\"p\">();</span>\n<span class=\"w\">                </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;$&quot;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"n\">String</span><span class=\"w\"> </span><span class=\"n\">ui</span><span class=\"o\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">.</span><span class=\"na\">split</span><span class=\"p\">(</span><span class=\"s\">&quot; &quot;</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;end&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;addProf&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">addFuncionario</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Professor</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"p\">));</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;addSta&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">addFuncionario</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">STA</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Integer</span><span class=\"p\">.</span><span class=\"na\">parseInt</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"p\">)));</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;addTer&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">addFuncionario</span><span class=\"p\">(</span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"n\">Tercerizado</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Integer</span><span class=\"p\">.</span><span class=\"na\">parseInt</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]</span><span class=\"p\">));</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;rm&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">rmFuncionario</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;showAll&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">ufc</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;show&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">getFuncionario</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">));</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;addDiaria&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">getFuncionario</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">).</span><span class=\"na\">addDiaria</span><span class=\"p\">();</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">]</span><span class=\"p\">.</span><span class=\"na\">equals</span><span class=\"p\">(</span><span class=\"s\">&quot;setBonus&quot;</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">ufc</span><span class=\"p\">.</span><span class=\"na\">setBonus</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">.</span><span class=\"na\">parseInt</span><span class=\"p\">(</span><span class=\"n\">ui</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"p\">));</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">print</span><span class=\"p\">(</span><span class=\"s\">&quot;fail: comando invalido&quot;</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">catch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">MsgException</span><span class=\"w\"> </span><span class=\"n\">me</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">me</span><span class=\"p\">.</span><span class=\"na\">getMessage</span><span class=\"p\">());</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<!--FILTER_END-->\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT begin\naddProf david C\naddProf elvis D\naddSta gilmario 3\naddTer helder 40 sim\nshowAll\nrm elvis\nshowAll\nend\n======== EXPECT\n$addProf david C\n$addProf elvis D\n$addSta gilmario 3\n$addTer helder 40 sim\n$showAll\nprof:david:C:7000\nprof:elvis:D:9000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n$rm elvis\n$showAll\nprof:david:C:7000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT diaria\naddProf david C\naddProf elvis D\naddSta gilmario 3\naddTer helder 40 sim\nshowAll\nrm elvis\nshowAll\naddDiaria david\naddDiaria david\naddDiaria david\nshow david\naddDiaria gilmario\naddDiaria gilmario\nshow gilmario\naddDiaria helder\nend\n======== EXPECT\n$addProf david C\n$addProf elvis D\n$addSta gilmario 3\n$addTer helder 40 sim\n$showAll\nprof:david:C:7000\nprof:elvis:D:9000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n$rm elvis\n$showAll\nprof:david:C:7000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n$addDiaria david\n$addDiaria david\n$addDiaria david\nfail: limite de diarias atingido\n$show david\nprof:david:C:7200\n$addDiaria gilmario\n$addDiaria gilmario\nfail: limite de diarias atingido\n$show gilmario\nsta:gilmario:3:4000\n$addDiaria helder\nfail: terc nao pode receber diaria\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT bonus\naddProf david C\naddProf elvis D\naddSta gilmario 3\naddTer helder 40 sim\nshowAll\nrm elvis\nshowAll\naddDiaria david\naddDiaria david\naddDiaria david\nshow david\naddDiaria gilmario\naddDiaria gilmario\nshow gilmario\naddDiaria helder\nsetBonus 600\nshow gilmario \nsetBonus 300\nshow gilmario\nend\n======== EXPECT\n$addProf david C\n$addProf elvis D\n$addSta gilmario 3\n$addTer helder 40 sim\n$showAll\nprof:david:C:7000\nprof:elvis:D:9000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n$rm elvis\n$showAll\nprof:david:C:7000\nsta:gilmario:3:3900\nter:helder:40:sim:660\n$addDiaria david\n$addDiaria david\n$addDiaria david\nfail: limite de diarias atingido\n$show david\nprof:david:C:7200\n$addDiaria gilmario\n$addDiaria gilmario\nfail: limite de diarias atingido\n$show gilmario\nsta:gilmario:3:4000\n$addDiaria helder\nfail: terc nao pode receber diaria\n$setBonus 600\n$show gilmario \nsta:gilmario:3:4200\n$setBonus 300\n$show gilmario\nsta:gilmario:3:4100\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
