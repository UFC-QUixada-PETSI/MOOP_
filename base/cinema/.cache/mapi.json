{
    "title": "@cinema: Gerenciando reservas e cancelamentos de uma sala de cinema",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@cinema: Gerenciando reservas e cancelamentos de uma sala de\ncinema</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1\nid=\"gerenciando-reservas-e-cancelamentos-de-uma-sala-de-cinema\">Gerenciando\nreservas e cancelamentos de uma sala de cinema</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/cinema/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<h2 id=\"intro\">Intro</h2>\n<p>O objetivo desta atividade \u00e9 implementar m\u00e9todos para manipular uma\nsala de cinema, permitindo a reserva, cancelamento e consulta de\ncadeiras.</p>\n<ul>\n<li><strong>Descri\u00e7\u00e3o</strong>\n<ul>\n<li>A sala de cinema \u00e9 representada pela classe Sala\n<code>Theater</code>, que possui um conjunto de cadeiras, cada uma\nassociada a um cliente ou vazia.</li>\n<li>Os m\u00e9todos a serem implementados permitir\u00e3o reservar uma cadeira\npara um cliente, cancelar a reserva de uma cadeira e consultar o estado\ndas cadeiras na sala.</li>\n<li>Cada cadeira pode estar associada a um objeto Cliente\n<code>Client</code>, representando um cliente que reservou a cadeira, ou\nser nula, indicando que a cadeira est\u00e1 vazia.</li>\n<li>Os m\u00e9todos fornecidos devem lidar com valida\u00e7\u00f5es, como verificar se\na cadeira existe, se est\u00e1 ocupada e se o cliente j\u00e1 est\u00e1 presente na\nsala.</li>\n</ul></li>\n<li><strong>Responsabilidades</strong>\n<ul>\n<li>A classe Sala <code>Theater</code> \u00e9 respons\u00e1vel por gerenciar as\nopera\u00e7\u00f5es relacionadas \u00e0s cadeiras na sala de cinema.\n<ul>\n<li>M\u00e9todos a serem implementados:\n<ul>\n<li>p\u00fablicos: s\u00e3o m\u00e9todos acessados por outras classes.\n<ul>\n<li><code>reserve(id: string, phone: number, index: number)</code>:\nReserva uma cadeira para um cliente com o ID e telefone\nespecificados.</li>\n<li><code>cancel(id: string)</code>: Cancela a reserva de uma cadeira\npara o cliente com o ID especificado.</li>\n<li><code>getSeats(): Array&lt;Client | null&gt;</code>: Retorna um\narray contendo o estado atual de todas as cadeiras na sala.</li>\n<li><code>toString(): string</code>: Retorna uma representa\u00e7\u00e3o em string\ndo estado atual das cadeiras na sala.</li>\n</ul></li>\n<li>privados: s\u00e3o m\u00e9todos apenas de uso interno, utilizados para\nauxiliar as opera\u00e7\u00f5es da classe.\n<ul>\n<li><code>search(name: string): int</code>: Procura o \u00edndice da cadeira\nreservada pelo cliente com o nome especificado.</li>\n<li><code>verifyIndix(index: number)</code>: Verifica se um \u00edndice de\ncadeira \u00e9 v\u00e1lido na sala.</li>\n</ul></li>\n</ul></li>\n</ul></li>\n<li>A classe <code>Client</code> \u00e9 respons\u00e1vel por representar os\nclientes que reservam cadeiras na sala de cinema.\n<ul>\n<li>A classe possui m\u00e9todos para obter e definir o ID e telefone do\ncliente, bem como uma representa\u00e7\u00e3o em string do cliente.</li>\n</ul></li>\n</ul></li>\n</ul>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/cinema/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/cinema/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/cinema/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/cinema/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE init 1</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[]</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE init 2</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[-</span> <span class=\"at\">-</span> <span class=\"at\">-</span> <span class=\"at\">-</span> <span class=\"at\">-]</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE init 3</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 4</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[-</span> <span class=\"at\">-</span> <span class=\"at\">-</span> <span class=\"at\">-]</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE reservas</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 4</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> davi 3232 0</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> joao 3131 3</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[davi:3232</span> <span class=\"at\">-</span> <span class=\"at\">-</span> joao:3131]</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE ocupado</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> rute 3030 0</span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> cadeira ja esta ocupada</span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE duplicado</span></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> davi 3234 2</span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> cliente ja esta no cinema</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE cadeira invalida</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 4</span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> davi 3232 5</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> cadeira nao existe</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE cancelamentos</span></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> davi 3232 0</span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$reserve</span> joao 3131 3</span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$cancel</span> davi</span>\n<span id=\"cb3-12\"><a href=\"#cb3-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-13\"><a href=\"#cb3-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[-</span> <span class=\"at\">-</span> <span class=\"at\">-</span> joao:3131]</span>\n<span id=\"cb3-14\"><a href=\"#cb3-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-15\"><a href=\"#cb3-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE cancelamentos errado</span></span>\n<span id=\"cb3-16\"><a href=\"#cb3-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-17\"><a href=\"#cb3-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$cancel</span> rita</span>\n<span id=\"cb3-18\"><a href=\"#cb3-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> cliente nao esta no cinema</span>\n<span id=\"cb3-19\"><a href=\"#cb3-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-20\"><a href=\"#cb3-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[-</span> <span class=\"at\">-</span> <span class=\"at\">-</span> joao:3131]</span>\n<span id=\"cb3-21\"><a href=\"#cb3-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init 1\nshow\nend\n======== EXPECT\n$show\n[]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT init 2\nshow\ninit 5\nshow\nend\n======== EXPECT\n$show\n[]\n$init 5\n$show\n[- - - - -]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT init 3\nshow\ninit 5\nshow\ninit 4\nshow\nend\n======== EXPECT\n$show\n[]\n$init 5\n$show\n[- - - - -]\n$init 4\n$show\n[- - - -]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT reservas\ninit 4\nreserve davi 3232 0\nreserve joao 3131 3\nshow\nend\n======== EXPECT\n$init 4\n$reserve davi 3232 0\n$reserve joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT ocupado\ninit 4\nreserve davi 3232 0\nreserve joao 3131 3\nshow\nreserve rute 3030 0\nend\n======== EXPECT\n$init 4\n$reserve davi 3232 0\n$reserve joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n$reserve rute 3030 0\nfail: cadeira ja esta ocupada\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT duplicado\ninit 4\nreserve davi 3232 0\nreserve joao 3131 3\nshow\nreserve rute 3030 0\nreserve davi 3234 2\nend\n======== EXPECT\n$init 4\n$reserve davi 3232 0\n$reserve joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n$reserve rute 3030 0\nfail: cadeira ja esta ocupada\n$reserve davi 3234 2\nfail: cliente ja esta no cinema\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT cadeira invalida\ninit 4\nreserve davi 3232 5\nend\n======== EXPECT\n$init 4\n$reserve davi 3232 5\nfail: cadeira nao existe\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT cancelamentos\ninit 4\nreserve davi 3232 5\nreserve davi 3232 0\nreserve joao 3131 3\ncancel davi\nshow\nend\n======== EXPECT\n$init 4\n$reserve davi 3232 5\nfail: cadeira nao existe\n$reserve davi 3232 0\n$reserve joao 3131 3\n$cancel davi\n$show\n[- - - joao:3131]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT cancelamentos errado\ninit 4\nreserve davi 3232 5\nreserve davi 3232 0\nreserve joao 3131 3\ncancel davi\nshow\ncancel rita\nshow\nend\n======== EXPECT\n$init 4\n$reserve davi 3232 5\nfail: cadeira nao existe\n$reserve davi 3232 0\n$reserve joao 3131 3\n$cancel davi\n$show\n[- - - joao:3131]\n$cancel rita\nfail: cliente nao esta no cinema\n$show\n[- - - joao:3131]\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\n\n\nfunction main() {\n\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const par = line.split(\" \");\n        const cmd = par[0];\n\n        if (cmd === \"end\") {\n            break;\n        } else if (cmd === \"show\") { \n        } else if (cmd === \"init\") {\n            // const seats = parseInt(par[1], 10);\n        } else if (cmd === \"reserve\") {\n            // const id = par[1];\n            // const phone = parseInt(par[2]);\n            // const index = parseInt(par[3], 10);\n        } else if (cmd === \"cancel\") {\n            // const id = par[1];\n        } else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.Scanner;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n\npublic class Shell {\n    public static void main(String[] _args) {\n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var args = line.split(\" \");\n            var cmd = args[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"show\")) { \n            }\n            else if (cmd.equals(\"init\")) {\n                // var seats = Integer.parseInt(args[1]);\n            }\n            else if (cmd.equals(\"reserve\")) {\n                // var id = args[1];\n                // var phone = args[2];\n                // var index = Integer.parseInt(args[3]);\n            }\n            else if (cmd.equals(\"cancel\")) {\n                // var id = args[1];\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    private static Scanner scanner = new Scanner(System.in);\n\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <memory>\nusing namespace std;\n\ntemplate<class CONTAINER, class FUNC>\nstring map_join(const CONTAINER& c, FUNC f, string sep) {\n    stringstream ss;\n    for (auto it = c.begin(); it != c.end(); it++) {\n        ss << (it == c.begin() ? \"\" : sep);\n        ss << f(*it);\n    }\n    return ss.str();\n}\n\nint main() {\n\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;    \n        } else if (cmd == \"show\") {\n        } else if (cmd == \"init\") {\n            // int qtd;\n            // ss >> qtd;\n        } else if (cmd == \"reserve\") {\n            // string id, phone;\n            // int index;\n            // ss >> id >> phone >> index;\n        } else if (cmd == \"cancel\") {\n            // string id;\n            // ss >> id;\n        } else {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n}\n",
                "encoding": 0
            }
        ]
    }
}
