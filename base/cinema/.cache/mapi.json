{
    "title": "Gerenciando reservas e cancelamentos de uma sala de @cinema",
    "description": "# Gerenciando reservas e cancelamentos de uma sala de @cinema\n\n<!-- toch -->\n[Intro](#intro) | [Draft](#draft) | [Guide](#guide) | [Shell](#shell)\n-- | -- | -- | --\n<!-- toch -->\n\n![cover](cover.jpg)\n\nO objetivo dessa atividade \u00e9 implementar o sistema de aloca\u00e7\u00e3o de uma \u00fanica sala de cinema. Se existem cadeiras livres, os clientes podem reserv\u00e1-las. Tamb\u00e9m podem desistir da reserva. O sistema deve mostrar quem est\u00e1 sentado em cada cadeira.\n\nNessa atividade, voc\u00ea dever\u00e1 criar:\n\n1. Uma classe que representa o cliente.\n2. Uma classe que representa a sala de cinema e guarda os clientes.\n\n## Intro\n\nSeu sistema dever\u00e1:\n\n- **Inicializando.**\n  - Iniciar a sala de cinema.\n    - Ao iniciar, voc\u00ea deve informar quantos assentos existem na sua sala.\n  - Mostrar o estado da sala, escrevendo um - para cada cadeira vazia.\n  - Se uma nova sala for iniciada, apague todas as informa\u00e7\u00f5es da sala antiga.\n- **Reservas.**\n  - reservar uma cadeira para um cliente passando id, telefone e n\u00famero da cadeira.\n    - avise que houve erro ao tentar colocar duas pessoas na mesma cadeira.\n    - avise que houve erro ao tentar colocar duas pessoas com mesmo id na sala.\n    - atualize a fun\u00e7\u00e3o show para mostrar os clientes onde estiverem sentados.\n- **Cancelamentos.**\n  - Cancele reserva passando o id do cliente.\n\n***\n\n## Draft\n\n- [solver.ts](.cache/draft.ts)\n- [solver.cpp](.cache/draft.cpp)\n- [Solver.java](.cache/draft.java)\n\n## Guide\n\n![diagrama](diagrama.png)\n\n<!-- load diagrama.puml fenced=ts:filter -->\n\n```ts\nclass Client {\n  - fone : string\n  - id   : string\n  __\n  + Client(id : string, fone : string)\n  __\n  + getFone() : string\n  + getId()   : string\n  + setFone(fone : string)\n  + setId(id : string)\n  __\n  + toString() : string\n}\n\nclass Sala {\n  \n  - cadeiras : Array<Client | null>\n  \n  ' procura em todas as cadeiras n\u00e3o nulas\n  ' pelo nome do cliente e se encontrar\n  ' retorna o \u00edndice ou ent\u00e3o -1\n  - procurar(nome: string): int\n  \n  ' verifica se o indice da cadeira \u00e9 v\u00e1lido\n  - verificarIndice(indice: int): boolean\n  __\n  \n  ' inicia todas as cadeiras como null\n  + Sala(capacidade : int)\n  \n  ' verifica se o \u00edndice \u00e9 v\u00e1lido (use o m\u00e9todo verificarIndice)\n  ' verifica se a cadeira est\u00e1 ocupada\n  ' verifica se o cliente j\u00e1 est\u00e1 na sala (use o m\u00e9todo procurar)\n  ' cria o cliente e coloca na cadeira\n  + reservar(id : string, fone : string, ind : int) : boolean\n  \n  ' procura o cliente pelo nome (use o m\u00e9todo procurar)\n  ' remover o cliente da cadeira\n  + cancelar(id : string)\n  __\n  + getCadeiras() : Array<Client | null>\n  __\n  + toString() : string\n}\n```\n\n<!-- load -->\n\n***\n\n## Shell\n\n```bash\n#__case init 1\n$show\n[]\n#__case init 2\n$init 5\n$show\n[- - - - -]\n#__case init 3\n$init 4\n$show\n[- - - -]\n$end\n```\n\n```sh\n\n#__case reservas\n$init 4\n$reservar davi 3232 0\n$reservar joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n\n#__case ocupado\n$reservar rute 3030 0\nfail: cadeira ja esta ocupada\n\n#__case duplicado\n$reservar davi 3234 2\nfail: cliente ja esta no cinema\n$end\n```\n\n```sh\n#__case cadeira invalida\n$init 4\n$reservar davi 3232 5\nfail: cadeira nao existe\n#__case cancelamentos\n$reservar davi 3232 0\n$reservar joao 3131 3\n$cancelar davi\n$show\n[- - - joao:3131]\n#__case cancelamentos errado\n$cancelar rita\nfail: cliente nao esta no cinema\n$show\n[- - - joao:3131]\n$end\n#__end__\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> init 1\nshow\nend\n========\n$show\n[]\n$end\n<<<<<<<<\n\n>>>>>>>> init 2\nshow\ninit 5\nshow\nend\n========\n$show\n[]\n$init 5\n$show\n[- - - - -]\n$end\n<<<<<<<<\n\n>>>>>>>> init 3\nshow\ninit 5\nshow\ninit 4\nshow\nend\n========\n$show\n[]\n$init 5\n$show\n[- - - - -]\n$init 4\n$show\n[- - - -]\n$end\n<<<<<<<<\n\n>>>>>>>> reservas\ninit 4\nreservar davi 3232 0\nreservar joao 3131 3\nshow\nend\n========\n$init 4\n$reservar davi 3232 0\n$reservar joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n$end\n<<<<<<<<\n\n>>>>>>>> ocupado\ninit 4\nreservar davi 3232 0\nreservar joao 3131 3\nshow\nreservar rute 3030 0\nend\n========\n$init 4\n$reservar davi 3232 0\n$reservar joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n$reservar rute 3030 0\nfail: cadeira ja esta ocupada\n$end\n<<<<<<<<\n\n>>>>>>>> duplicado\ninit 4\nreservar davi 3232 0\nreservar joao 3131 3\nshow\nreservar rute 3030 0\nreservar davi 3234 2\nend\n========\n$init 4\n$reservar davi 3232 0\n$reservar joao 3131 3\n$show\n[davi:3232 - - joao:3131]\n$reservar rute 3030 0\nfail: cadeira ja esta ocupada\n$reservar davi 3234 2\nfail: cliente ja esta no cinema\n$end\n<<<<<<<<\n\n>>>>>>>> cadeira invalida\ninit 4\nreservar davi 3232 5\nend\n========\n$init 4\n$reservar davi 3232 5\nfail: cadeira nao existe\n$end\n<<<<<<<<\n\n>>>>>>>> cancelamentos\ninit 4\nreservar davi 3232 5\nreservar davi 3232 0\nreservar joao 3131 3\ncancelar davi\nshow\nend\n========\n$init 4\n$reservar davi 3232 5\nfail: cadeira nao existe\n$reservar davi 3232 0\n$reservar joao 3131 3\n$cancelar davi\n$show\n[- - - joao:3131]\n$end\n<<<<<<<<\n\n>>>>>>>> cancelamentos errado\ninit 4\nreservar davi 3232 5\nreservar davi 3232 0\nreservar joao 3131 3\ncancelar davi\nshow\ncancelar rita\nshow\nend\n========\n$init 4\n$reservar davi 3232 5\nfail: cadeira nao existe\n$reservar davi 3232 0\n$reservar joao 3131 3\n$cancelar davi\n$show\n[- - - joao:3131]\n$cancelar rita\nfail: cliente nao esta no cinema\n$show\n[- - - joao:3131]\n$end\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
