{
    "title": "@carga: Um trem com vag\u00f5es de @carga",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@carga: Um trem com vag\u00f5es de @carga</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Um trem com vag\u00f5es de @carga</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"cover\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/carga/cover.jpg\" /></p>\n<p>Vamos ampliar a atividade do trem colocando vag\u00f5es de carga para carregar bagagens.</p>\n<h2>Intro</h2>\n<h3>Parte 1 - Trem e Vag\u00f5es</h3>\n<ul>\n<li>Um vag\u00e3o de pessoas possui uma quantidade de cadeiras.</li>\n<li>Um vag\u00e3o de carga tem um limite de peso.</li>\n<li>O trem possui um m\u00e1ximo de vag\u00f5es que ele pode carregar.</li>\n<li>Ao mostrar um vag\u00e3o de pessoas, coloque [], e para cada cadeira livre coloque um \"-\".</li>\n<li>\n<p>Ao mostrar um vag\u00e3o de carga, use um (), coloque os identificadores de carga e mostre quando de peso livre ainda existe.</p>\n</li>\n<li>\n<p>Uma carga possui um peso e um identificador.</p>\n</li>\n<li>Um passageiro possui um identificador.</li>\n</ul>\n<div class=\"language-text highlight\"><pre><span></span><code>  # init _maxVagoes  #inicia o trem\n  # nwvp _capacidade #novo vagao de pessoa\n  # nwvc _pesoMax    #novo vagao de carga\ninit 3\n  done\nnwvp 2\n  done\nla\n  Trem [ - - ]\nnwvc 350.0\n  done\nla\n  Trem [ - - ](https://github.com/qxcodepoo/arcade/blob/master/base/carga/_350.0)\nnwvp 2\n  done\nla\n  Trem [ - - ](https://github.com/qxcodepoo/arcade/blob/master/base/carga/_350.0)[ - - ]\nnwvc 1\n  fail: limite de vag\u00f5es atingido\n</code></pre></div>\n<h3>Parte 2 - Embarque e Desembarque</h3>\n<ul>\n<li>Embarcar um novo item.<ul>\n<li>Ao tentar embarcar, o trem vai procurar o primeiro vag\u00e3o livre para inserir o item.</li>\n<li>Se n\u00e3o houver espa\u00e7o livre em nenhum vag\u00e3o ent\u00e3o n\u00e3o haver\u00e1 embarque.</li>\n<li>N\u00e3o deve ser poss\u00edvel embarcar duas vezes o mesmo passageiro ou a mesma carga no trem.</li>\n</ul>\n</li>\n<li>Desembarcar um passageiro ou carga<ul>\n<li>Se o item estiver no trem, ele sai do trem liberando sua vaga.</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-text highlight\"><pre><span></span><code># addp _idPass #tenta embarcar uma pessoa\n# addc _idCarga _peso #tenta embarcar uma carga\n\naddp goku\nla\n  Trem [ goku - ](https://github.com/qxcodepoo/arcade/blob/master/base/carga/_350.0)[ - - ]\naddp kate\naddp sara\naddp goku\n  fail: goku j\u00e1 est\u00e1 no trem\nla\n  Trem [ goku kate ](https://github.com/qxcodepoo/arcade/blob/master/base/carga/_350.0)[ sara - ]\naddp tina\naddp james\n  fail: trem lotado\nla\n  Trem [ goku kate ](https://github.com/qxcodepoo/arcade/blob/master/base/carga/_350.0)[ sara james ]\naddc xilitos 200.0\nla\n  Trem [ goku kate ]( xilitos:200.0 _150.0 )[ sara james ]\naddc pipoca 100.0\nla\n  Trem [ goku kate ]( xilitos:200.0 pipoca:100.0 _50.0 )[ sara james ]\naddc cebolitos 100.0\n  fail: trem lotado\nsair kate\nsair sara\nsair rufus\n  fail: rufus nao esta no trem\nsair xilitos\nla\n  Trem [ goku - ]( pipoca:100.0 _50.0 )[ james ]\n</code></pre></div>\n<h3>Parte 3 - Cadastro de Passeiros e Registro de Embarque</h3>\n<ul>\n<li>Mostrar a lista de itens cadastrados.<ul>\n<li>Quando um item tenta embarcar, ele \u00e9 cadastrado no sistema, independente de conseguir ou n\u00e3o embarcar, independente se \u00e9 passageiro ou carga.</li>\n<li>Mostre a lista ordenada pelo id do passageiro.</li>\n</ul>\n</li>\n<li>Mostrar a sequ\u00eancia de embarque e desembarque.</li>\n</ul>\n<div class=\"language-text highlight\"><pre><span></span><code>cadastro\n  alex\n  cebolitos:100.0\n  goku\n  james\n  kate\n  pipoca:100.0\n  sara\n  tina\n  xilitos:200.0\n\nmovimentacao\n  goku in\n  kate in\n  sara in\n  tina in\n  james in\n  xilitos:200.0 in\n  pipoca:100.0 in\n  kate out\n  sara out\n  xilitos:200.0 out\n</code></pre></div>\n<hr />\n<h2>Guide</h2>\n<div class=\"language-java highlight\"><pre><span></span><code><span class=\"kd\">interface</span> <span class=\"nc\">Pass</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"n\">getId</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"n\">string</span>\n\n\n<span class=\"kd\">class</span> <span class=\"nc\">Pessoa</span><span class=\"w\"> </span><span class=\"kd\">implements</span><span class=\"w\"> </span><span class=\"n\">Pass</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">string</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Carga</span><span class=\"w\"> </span><span class=\"kd\">implements</span><span class=\"w\"> </span><span class=\"n\">Pass</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">string</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">peso</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">float</span>\n\n<span class=\"kd\">interface</span> <span class=\"nc\">class</span><span class=\"w\"> </span><span class=\"n\">Vagao</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">elementos</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"o\">[]</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">embarcar</span><span class=\"p\">(</span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Pass</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">desembarcar</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">String</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"kt\">boolean</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Trem</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">maxVagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">number</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">vagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Vagao</span><span class=\"o\">[]</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">addVagao</span><span class=\"p\">(</span><span class=\"n\">vagao</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Vagao</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">embarcar</span><span class=\"p\">(</span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">desembarcar</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">idPass</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"n\">bool</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"p\">(</span><span class=\"n\">maxVagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">)</span>\n\n<span class=\"kd\">enum</span><span class=\"w\"> </span><span class=\"n\">Direcao</span>\n<span class=\"n\">IN</span>\n<span class=\"n\">OUT</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Movimento</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Direcao</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Registro</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">repPassageiros</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"o\">[]</span>\n<span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">movimentacao</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Movimento</span><span class=\"o\">[]</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">cadastrar</span><span class=\"p\">(</span><span class=\"n\">pass</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Passageiro</span><span class=\"p\">)</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">movimentar</span><span class=\"p\">(</span><span class=\"n\">mov</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">Movimento</span><span class=\"p\">)</span>\n<span class=\"o\">--</span>\n<span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"p\">(</span><span class=\"n\">maxVagoes</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"p\">)</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "type": "hide"
        }
    ],
    "draft": {}
}
