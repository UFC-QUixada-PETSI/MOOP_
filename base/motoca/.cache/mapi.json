{
    "title": "@motoca: Crian\u00e7as andando de motoca",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@motoca: Crian\u00e7as andando de motoca</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"crian\u00e7as-andando-de-motoca\">Crian\u00e7as andando de motoca</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/motoca/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<h2 id=\"intro\">Intro</h2>\n<p>Este \u00e9 um projeto de modelagem e implementa\u00e7\u00e3o de uma motoca\nmotorizada em um parque. A ideia \u00e9 simular o funcionamento dessa motoca\natrav\u00e9s de classes em um programa. Para isso, ser\u00e3o implementadas duas\nclasses principais: <code>Pessoa</code> e <code>Moto</code>.</p>\n<ul>\n<li>Descri\u00e7\u00e3o\n<ul>\n<li>A classe <code>Moto</code> representa a motoca em si. Ela possui\natributos como pot\u00eancia, tempo e a pessoa que est\u00e1 atualmente\nutilizando-a.</li>\n<li>A motoca inicia com pot\u00eancia 1, sem minutos e sem ningu\u00e9m.</li>\n<li>Apenas uma pessoa pode estar na motoca por vez.</li>\n<li>As funcionalidades principais da motoca incluem subir uma pessoa,\ndescer uma pessoa, comprar tempo, dirigir por um tempo determinado e\nbuzinar.</li>\n<li>A classe <code>Pessoa</code> representa os usu\u00e1rios da motoca. Ela\npossui os atributos nome e idade.</li>\n</ul></li>\n<li>Comandos\n<ul>\n<li>Todos os comandos seguem o modelo\n<code>$comando arg1 arg2 ...</code>. Em caso de erro, uma mensagem\nadequada deve ser impressa.</li>\n<li><code>$show</code> - Mostra o estado atual da motoca, incluindo\npot\u00eancia, tempo e pessoa atualmente na motoca.\n<ul>\n<li><code>f\"power:{this.power}, time:{this.time}, person:{this.person}\"</code></li>\n<li>power:1, time:0, person:(marcos:4)</li>\n</ul></li>\n<li><code>$init</code> - Reinicia a motoca para o estado inicial, com\npot\u00eancia 1, sem minutos e sem ningu\u00e9m.</li>\n<li><code>$enter</code> - Permite uma pessoa subir na motoca. Deve ser\nseguido pelos argumentos <code>nome</code> e <code>idade</code> da\npessoa.</li>\n<li><code>$leave</code> - Faz a pessoa atualmente na motoca descer.</li>\n<li><code>$buy</code> - Permite comprar tempo em minutos para utilizar a\nmotoca. O tempo recebido \u00e9 incrementado ao tempo atual.</li>\n<li><code>$drive</code> - Permite dirigir a motoca por um tempo\ndeterminado.</li>\n<li><code>$honk</code> - Permite buzinar a motoca.</li>\n</ul></li>\n</ul>\n<h2 id=\"guide\">Guide</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/motoca/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<ul>\n<li>Classe Pessoa\n<ul>\n<li>Crie a classe <code>Pessoa</code> com os atributos <code>age</code>\ne <code>name</code>.</li>\n<li>Defina os atributos como privados.</li>\n<li>Crie o construtor da classe que recebe <code>name</code> como uma\nstring e <code>age</code> como um n\u00famero.</li>\n<li>Crie os m\u00e9todos <code>getAge()</code> e <code>getName()</code> para\nretornar a idade e o nome da pessoa, respectivamente.</li>\n<li>Crie o m\u00e9todo <code>toString()</code> para retornar uma string no\nformato \u201cnome:idade\u201d.</li>\n</ul></li>\n<li>Parte 1: Inserir\n<ul>\n<li>Crie a classe <code>Motoca</code> com os atributos\n<code>potencia</code>, <code>time</code> e <code>pessoa</code>.</li>\n<li>Inicialize os atributos no construtor, onde <code>potencia</code>\ninicia com 1, <code>time</code> inicia com 0 e <code>pessoa</code>\ninicia como nulo.</li>\n<li>Crie o m\u00e9todo <code>inserir(pessoa: Pessoa): bool</code> que permite\ninserir uma pessoa na motoca.</li>\n<li>Verifique se h\u00e1 uma pessoa na motoca. Se houver, imprima \u201cfail: busy\nmotorcycle\u201d e retorne falso.</li>\n<li>Caso contr\u00e1rio, insira a pessoa na motoca e retorne verdadeiro.</li>\n<li>Crie o m\u00e9todo <code>toString()</code> para mostrar o estado da\nmotoca.</li>\n</ul></li>\n<li>Parte 2: Remover\n<ul>\n<li>Crie o m\u00e9todo <code>remover(): Pessoa | null</code> que permite\nremover a pessoa da motoca.</li>\n<li>Verifique se h\u00e1 uma pessoa na motoca. Se n\u00e3o houver, imprima \u201cfail:\nempty motorcycle\u201d e retorne nulo.</li>\n<li>Caso contr\u00e1rio, remova a pessoa da motoca e retorne a pessoa\nremovida.</li>\n</ul></li>\n<li>Parte 3: Comprar Tempo\n<ul>\n<li>Crie o m\u00e9todo <code>buyTime(time: number)</code> que permite comprar\ntempo em minutos para utilizar a motoca.</li>\n<li>Incremente o tempo da motoca com o tempo passado como\npar\u00e2metro.</li>\n</ul></li>\n<li>Parte 4: Dirigir\n<ul>\n<li>Crie o m\u00e9todo <code>drive(time: number)</code> que permite dirigir a\nmotoca por um tempo determinado.</li>\n<li>Verifique se h\u00e1 tempo dispon\u00edvel na motoca. Se n\u00e3o houver, imprima\n\u201cfail: buy time first\u201d.</li>\n<li>Verifique se h\u00e1 uma pessoa na motoca. Se n\u00e3o houver, imprima \u201cfail:\nempty motorcycle\u201d.</li>\n<li>Verifique se a idade da pessoa na motoca \u00e9 maior que 10 anos. Se\nfor, imprima \u201cfail: too old to drive\u201d.</li>\n<li>Calcule o novo tempo ap\u00f3s dirigir. Se o novo tempo for menor ou\nigual a 0, imprima \u201cfail: time finished after X minutes\u201d.</li>\n<li>Atualize o tempo da motoca.</li>\n</ul></li>\n<li>Parte 5: Buzinar\n<ul>\n<li>Crie o m\u00e9todo <code>honk()</code> que permite buzinar a motoca.</li>\n<li>Construa a string da buzina, onde o n\u00famero de \u201ce\u201d \u00e9 igual \u00e0 pot\u00eancia\nda motoca.</li>\n<li>Retorne a buzina.</li>\n</ul></li>\n</ul>\n<hr />\n<ul>\n<li><p>Cada linguagem tem suas formas de definir aus\u00eancia de\nvalor.</p></li>\n<li><p>Por exemplo, vamos criar uma vari\u00e1vel que pode ser um inteiro ou\nn\u00e3o ter valor.</p></li>\n<li><p>Python</p>\n<ul>\n<li><code>null</code> \u00e9 o valor padr\u00e3o para aus\u00eancia de valor.</li>\n<li><code>variavel: int | null = null</code> - Define uma vari\u00e1vel que\npode ser <code>int</code> ou <code>null</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor\ninteiro.</li>\n<li>Teste: <code>if variavel is not null:</code></li>\n</ul></li>\n<li><p>Java</p>\n<ul>\n<li><code>null</code> \u00e9 o valor padr\u00e3o para aus\u00eancia de valor.</li>\n<li>Tipos primitivos n\u00e3o podem ser null.</li>\n<li>Todos as refer\u00eancias a objetos podem ser null.</li>\n<li>Refer\u00eancias n\u00e3o inicializadas s\u00e3o null.</li>\n<li><code>Integer variavel = null</code> - Define uma vari\u00e1vel que pode\nser <code>Integer</code> ou <code>null</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor\ninteiro.</li>\n<li>Teste: <code>if (variavel != null) {</code></li>\n</ul></li>\n<li><p>C++</p>\n<ul>\n<li><code>nullptr</code> \u00e9 o valor padr\u00e3o para aus\u00eancia de valor.</li>\n<li>Apenas ponteiros podem ser nullptr.</li>\n<li>Valores est\u00e1ticos n\u00e3o podem ser nullptr.</li>\n<li>Op\u00e7\u00f5es de abordagem com ponteiros:\n<ul>\n<li><code>int* variavel = nullptr</code> - Define um ponteiro que pode\nser <code>int</code> ou <code>nullptr</code>.</li>\n<li><code>std::shared_ptr&lt;int&gt; variavel = nullptr</code> - Define\num ponteiro que pode ser <code>int</code> ou <code>nullptr</code>.</li>\n<li><code>variavel = new int(5)</code> - Define a vari\u00e1vel com um valor\ninteiro.</li>\n<li>Teste: <code>if (variavel != nullptr) {</code></li>\n</ul></li>\n<li>Op\u00e7\u00f5es de abordagem est\u00e1tica utilizando wrapper(empacotador).\n<ul>\n<li><code>std::optional&lt;int&gt; variavel = std::nullopt</code> -\nDefine uma vari\u00e1vel que pode ser <code>int</code> ou\n<code>std::nullopt</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor\ninteiro.</li>\n<li>Teste: <code>if (variavel.has_value()) {</code></li>\n</ul></li>\n</ul></li>\n<li><p>TypeScript</p>\n<ul>\n<li><code>null</code> e <code>undefined</code> s\u00e3o os valores padr\u00e3o\npara aus\u00eancia de valor.</li>\n<li><code>let variavel: number | null = null</code> - Define uma\nvari\u00e1vel que pode ser <code>number</code> ou <code>null</code>.</li>\n<li><code>variavel = 5</code> - Define a vari\u00e1vel com um valor\ninteiro.</li>\n<li>Teste: <code>if (variavel !== null) {</code></li>\n</ul></li>\n</ul>\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE subindo e buzinando</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">power:1,</span> time:0, person:<span class=\"er\">(</span><span class=\"ex\">empty</span><span class=\"kw\">)</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE subindo</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enter</span> marcos 4</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">power:1,</span> time:0, person:<span class=\"er\">(</span><span class=\"ex\">marcos:4</span><span class=\"kw\">)</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE ocupada</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$enter</span> marisa 2</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> busy motorcycle</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">power:1,</span> time:0, person:<span class=\"er\">(</span><span class=\"ex\">marcos:4</span><span class=\"kw\">)</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE subindo2</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">5</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">5</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span>empty<span class=\"op\">)</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE buzinando</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>$enter marcos <span class=\"dv\">4</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">5</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">marcos:</span><span class=\"dv\">4</span><span class=\"op\">)</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE subindo e trocando</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">7</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$enter heitor <span class=\"dv\">6</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">heitor:</span><span class=\"dv\">6</span><span class=\"op\">)</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>$leave</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">heitor:</span><span class=\"dv\">6</span></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE empty</span></span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>$leave</span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">fail:</span> empty motorcycle</span>\n<span id=\"cb3-12\"><a href=\"#cb3-12\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb3-13\"><a href=\"#cb3-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE replace</span></span>\n<span id=\"cb3-14\"><a href=\"#cb3-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>$enter suzana <span class=\"dv\">8</span></span>\n<span id=\"cb3-15\"><a href=\"#cb3-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb3-16\"><a href=\"#cb3-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">suzana:</span><span class=\"dv\">8</span><span class=\"op\">)</span></span>\n<span id=\"cb3-17\"><a href=\"#cb3-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE no time</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">7</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$buy <span class=\"dv\">30</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">30</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span>empty<span class=\"op\">)</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>$buy <span class=\"dv\">10</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">40</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span>empty<span class=\"op\">)</span></span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE buy time </span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">7</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$drive <span class=\"dv\">10</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">fail:</span> buy time first</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>$buy <span class=\"dv\">50</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE empty</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>$drive <span class=\"dv\">10</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">fail:</span> empty motorcycle</span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>$enter suzana <span class=\"dv\">8</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE driving</span></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>$drive <span class=\"dv\">30</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">20</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">suzana:</span><span class=\"dv\">8</span><span class=\"op\">)</span></span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE limite de idade</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">7</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$buy <span class=\"dv\">20</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>$enter andreina <span class=\"dv\">23</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>$drive <span class=\"dv\">15</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">fail:</span> too old to drive</span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">20</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">andreina:</span><span class=\"dv\">23</span><span class=\"op\">)</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE acabou o tempo</span></span>\n<span id=\"cb7-2\"><a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">7</span></span>\n<span id=\"cb7-3\"><a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$buy <span class=\"dv\">20</span></span>\n<span id=\"cb7-4\"><a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>$enter andreina <span class=\"dv\">6</span></span>\n<span id=\"cb7-5\"><a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>$drive <span class=\"dv\">15</span></span>\n<span id=\"cb7-6\"><a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb7-7\"><a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">5</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">andreina:</span><span class=\"dv\">6</span><span class=\"op\">)</span></span>\n<span id=\"cb7-8\"><a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>$drive <span class=\"dv\">10</span></span>\n<span id=\"cb7-9\"><a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">fail:</span> time finished after <span class=\"dv\">5</span> minutes</span>\n<span id=\"cb7-10\"><a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>$show</span>\n<span id=\"cb7-11\"><a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">power:</span><span class=\"dv\">7</span><span class=\"op\">,</span> <span class=\"fu\">time:</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"fu\">person:</span><span class=\"op\">(</span><span class=\"fu\">andreina:</span><span class=\"dv\">6</span><span class=\"op\">)</span></span>\n<span id=\"cb7-12\"><a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb8\"><pre class=\"sourceCode s\"><code class=\"sourceCode gnuassembler\"><span id=\"cb8-1\"><a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE buzinando</span></span>\n<span id=\"cb8-2\"><a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">1</span></span>\n<span id=\"cb8-3\"><a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>$honk</span>\n<span id=\"cb8-4\"><a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>Pem</span>\n<span id=\"cb8-5\"><a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>$init <span class=\"dv\">5</span></span>\n<span id=\"cb8-6\"><a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>$honk</span>\n<span id=\"cb8-7\"><a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>Peeeeem</span>\n<span id=\"cb8-8\"><a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>$end</span></code></pre></div>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/motoca/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/motoca/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/motoca/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT subindo e buzinando\nshow\nend\n======== EXPECT\n$show\npower:1, time:0, person:(empty)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT subindo\nshow\nenter marcos 4\nshow\nend\n======== EXPECT\n$show\npower:1, time:0, person:(empty)\n$enter marcos 4\n$show\npower:1, time:0, person:(marcos:4)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT ocupada\nshow\nenter marcos 4\nshow\nenter marisa 2\nshow\nend\n======== EXPECT\n$show\npower:1, time:0, person:(empty)\n$enter marcos 4\n$show\npower:1, time:0, person:(marcos:4)\n$enter marisa 2\nfail: busy motorcycle\n$show\npower:1, time:0, person:(marcos:4)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT subindo2\ninit 5\nshow\nend\n======== EXPECT\n$init 5\n$show\npower:5, time:0, person:(empty)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT buzinando\ninit 5\nshow\nenter marcos 4\nshow\nend\n======== EXPECT\n$init 5\n$show\npower:5, time:0, person:(empty)\n$enter marcos 4\n$show\npower:5, time:0, person:(marcos:4)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT subindo e trocando\ninit 7\nenter heitor 6\nshow\nleave\nend\n======== EXPECT\n$init 7\n$enter heitor 6\n$show\npower:7, time:0, person:(heitor:6)\n$leave\nheitor:6\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT empty\ninit 7\nenter heitor 6\nshow\nleave\nleave\nend\n======== EXPECT\n$init 7\n$enter heitor 6\n$show\npower:7, time:0, person:(heitor:6)\n$leave\nheitor:6\n$leave\nfail: empty motorcycle\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT replace\ninit 7\nenter heitor 6\nshow\nleave\nleave\nenter suzana 8\nshow\nend\n======== EXPECT\n$init 7\n$enter heitor 6\n$show\npower:7, time:0, person:(heitor:6)\n$leave\nheitor:6\n$leave\nfail: empty motorcycle\n$enter suzana 8\n$show\npower:7, time:0, person:(suzana:8)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT no time\ninit 7\nbuy 30\nshow\nbuy 10\nshow\nend\n======== EXPECT\n$init 7\n$buy 30\n$show\npower:7, time:30, person:(empty)\n$buy 10\n$show\npower:7, time:40, person:(empty)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT buy time \ninit 7\ndrive 10\nbuy 50\nend\n======== EXPECT\n$init 7\n$drive 10\nfail: buy time first\n$buy 50\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT empty\ninit 7\ndrive 10\nbuy 50\ndrive 10\nenter suzana 8\nend\n======== EXPECT\n$init 7\n$drive 10\nfail: buy time first\n$buy 50\n$drive 10\nfail: empty motorcycle\n$enter suzana 8\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT driving\ninit 7\ndrive 10\nbuy 50\ndrive 10\nenter suzana 8\ndrive 30\nshow\nend\n======== EXPECT\n$init 7\n$drive 10\nfail: buy time first\n$buy 50\n$drive 10\nfail: empty motorcycle\n$enter suzana 8\n$drive 30\n$show\npower:7, time:20, person:(suzana:8)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT limite de idade\ninit 7\nbuy 20\nenter andreina 23\ndrive 15\nshow\nend\n======== EXPECT\n$init 7\n$buy 20\n$enter andreina 23\n$drive 15\nfail: too old to drive\n$show\npower:7, time:20, person:(andreina:23)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT acabou o tempo\ninit 7\nbuy 20\nenter andreina 6\ndrive 15\nshow\ndrive 10\nshow\nend\n======== EXPECT\n$init 7\n$buy 20\n$enter andreina 6\n$drive 15\n$show\npower:7, time:5, person:(andreina:6)\n$drive 10\nfail: time finished after 5 minutes\n$show\npower:7, time:0, person:(andreina:6)\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT buzinando\ninit 1\nhonk\ninit 5\nhonk\nend\n======== EXPECT\n$init 1\n$honk\nPem\n$init 5\n$honk\nPeeeeem\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "function input() { return \"\"; }\nexport {};\n\nfunction main() {\n    //CRIE SUA MOTO AQUI\n\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const par = line.split(\" \");\n        const cmd = par[0];\n\n        if (cmd == \"init\") {\n            // INICIE SUA MOTO USANDO O CONSTRUTOR\n            // const power = parseInt(par[1]);\n        } else if (cmd == \"show\") {\n            // MOSTRE O ESTADO DA MOTO\n        } else if (cmd == \"enter\") {\n            // CRIE UM OBJETO PESSOA E INSIRA NA MOTO\n            // const name = par[1];\n            // const age = parseInt(par[2]);\n        } else if (cmd == \"leave\") {\n            // REMOVA A PESSOA DA MOTO\n            // SE O OBJETO RETORNADO N\u00c3O FOR NULO, MOSTRE SEUS DADOS\n        } else if (cmd == \"honk\") {\n            // TOQUE A BUZINA\n        } else if (cmd == \"buy\") {\n            // COMPRE TEMPO DE USO DA MOTO\n            // const time = parseInt(par[1]);\n        } else if (cmd == \"drive\") {\n            // DIRIJA A MOTO\n            // const time = parseInt(par[1]);\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain()",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.*;\n\npublic class Shell{\n    \n    public static void main(String[] args) {\n        // CRIE SUA MOTO AQUI\n\n        while(true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"init\")) {\n                // CRIE SUA MOTO AQUI\n                // var power = Integer.parseInt(par[1]);\n            } else if (cmd.equals(\"show\")) {\n                // MOSTRE SUA MOTO AQUI\n            } else if (cmd.equals(\"enter\")) {\n                // CRIE UM OBJETO PESSOA AQUI\n                // DEPOIS INSIRA NA MOTO\n                // var name = par[1];\n                // var age = Integer.parseInt(par[2]);\n            } else if (cmd.equals(\"leave\")) {\n                // RETIRE A PESSOA DA MOTO\n                // MOSTRE A PESSOA RETIRADA AQUI\n            } else if (cmd.equals(\"buy\")) {\n                // COMPRE TEMPO\n                // var time = Integer.parseInt(par[1]);\n            } else if (cmd.equals(\"drive\")) {\n                // DIRIJA A MOTO\n                // var time = Integer.parseInt(par[1]);\n            } else if (cmd.equals(\"honk\")) {\n                // BUZINE\n            } else if (cmd.equals(\"end\")) {\n                break;\n            } else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <memory> //shared_ptr\n#include <sstream> //stringstream\n#include <utility> //exchange\nusing namespace std;\n\nint main() {\n    // CRIE SUA MOTO AQUI COM POTENCIA 1\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"init\") {\n            // INICIE A MOTO AQUI USANDO O CONSTRUTOR\n            // int power {};\n            // ss >> power;\n        } else if (cmd == \"show\") {\n            // MOSTRE A MOTO AQUI\n        } else if (cmd == \"leave\") {\n            // RETIRE A PESSOA DA MOTO\n            // SE EXISTIR, MOSTRE A PESSOA\n        } else if (cmd == \"honk\") {\n            // BUZINE A MOTO\n        } else if (cmd == \"enter\") {\n            // CRIE UM PONTEIRO PARA PESSOA E INICIE-O AQUI\n            // DEPOIS INSIRA A PERSON NA MOTO\n            // string name {};\n            // int age {};\n            // ss >> name >> age;\n        } else if (cmd == \"buy\") {\n            // COMPRE TEMPO PARA DIRIGIR\n            // int time {};\n            // ss >> time;\n        } else if (cmd == \"drive\") {\n            // DIRIJA A MOTO POR UM TEMPO\n            // int time {};\n            // ss >> time;\n        } else if (cmd == \"end\") {\n            break;\n        } else {\n            cout << \"fail: invalid command\\n\";\n        }\n    }\n}\n",
                "encoding": 0
            }
        ]
    }
}
