{
    "title": "@contagem: Estressados Opera\u00e7\u00f5es II",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@contagem: Estressados Opera\u00e7\u00f5es II</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"estressados-opera\u00e7\u00f5es-ii\">Estressados Opera\u00e7\u00f5es II</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#alien\">Alien</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contagem/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<hr />\n<h2 id=\"intro\">Intro</h2>\n<ul>\n<li><strong>count</strong>: quantas vezes o valor X apareceu na\nfila?</li>\n<li><strong>sum</strong>: qual a soma de todos os valores de stress da\nfila?</li>\n<li><strong>average</strong>: qual a m\u00e9dia de stress?</li>\n<li><strong>half_compare</strong>: qual metade da lista \u00e9 mais\nestressada? A primeira metade ou a segunda metade? A quantidade de\nelementos na lista sempre ser\u00e1 par. [draw, first, second]</li>\n<li><strong>more_men_or_women</strong>: existem mais homens ou mulheres?\n[draw, men, women]</li>\n<li><strong>sex_battle</strong>: quem \u00e9 mais estressado em m\u00e9dia? [draw,\nmen, women]</li>\n</ul>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/contagem/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>go\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/contagem/.cache/draft/go/shell.go\">shell.go</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/contagem/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/contagem/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE count</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span> <span class=\"at\">-1</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">2</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> <span class=\"pp\">[-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99,</span><span class=\"pp\">-</span><span class=\"ss\">444</span><span class=\"pp\">]</span> 10</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">0</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE sum</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sum</span> <span class=\"pp\">[</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">1</span><span class=\"pp\">]</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">2</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sum</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,</span><span class=\"pp\">-</span><span class=\"ss\">1</span><span class=\"pp\">]</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">9</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sum</span> <span class=\"pp\">[-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">50</span><span class=\"pp\">]</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">51</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE average</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$average</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">26.50</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$average</span> <span class=\"pp\">[-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99,</span><span class=\"pp\">-</span><span class=\"ss\">444</span><span class=\"pp\">]</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">119.00</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE more_men</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$more_men</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">draw</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$more_men</span> <span class=\"pp\">[</span><span class=\"ss\">5,</span><span class=\"pp\">-</span><span class=\"ss\">3,1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">women</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$more_men</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,99</span><span class=\"pp\">]</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">men</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE half_compare</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">5,</span><span class=\"pp\">-</span><span class=\"ss\">5</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">draw</span></span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">5,</span><span class=\"pp\">-</span><span class=\"ss\">4</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">first</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">5,</span><span class=\"pp\">-</span><span class=\"ss\">6</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">second</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">5,3</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">first</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">3,5</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">second</span></span>\n<span id=\"cb5-12\"><a href=\"#cb5-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,</span><span class=\"pp\">-</span><span class=\"ss\">1,50,10,</span><span class=\"pp\">-</span><span class=\"ss\">999</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-13\"><a href=\"#cb5-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">second</span></span>\n<span id=\"cb5-14\"><a href=\"#cb5-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">98,2,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-15\"><a href=\"#cb5-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">draw</span></span>\n<span id=\"cb5-16\"><a href=\"#cb5-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$half_compare</span> <span class=\"pp\">[</span><span class=\"ss\">51,99,1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span></span>\n<span id=\"cb5-17\"><a href=\"#cb5-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">first</span></span>\n<span id=\"cb5-18\"><a href=\"#cb5-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE sex_battle</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sex_battle</span> <span class=\"pp\">[</span><span class=\"ss\">5,3,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">10,</span><span class=\"pp\">-</span><span class=\"ss\">999</span><span class=\"pp\">]</span></span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">women</span></span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sex_battle</span> <span class=\"pp\">[</span><span class=\"ss\">50,98,2,</span><span class=\"pp\">-</span><span class=\"ss\">50,</span><span class=\"pp\">-</span><span class=\"ss\">1,9991</span><span class=\"pp\">]</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">men</span></span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$sex_battle</span> <span class=\"pp\">[-</span><span class=\"ss\">50,99,1,50,</span><span class=\"pp\">-</span><span class=\"ss\">1,</span><span class=\"pp\">-</span><span class=\"ss\">99</span><span class=\"pp\">]</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">draw</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<h2 id=\"alien\">Alien</h2>\n<p><a href=\"https://www.youtube.com/watch?v=yEks2RnwgeA\"><img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contagem/../../wiki/images/alien4.jpg\"\nalt=\"_\" /></a></p>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT count\ncount [5,3,-1,-50,-1,-99] -1\ncount [-1,-50,-1,-99,-444] 10\nend\n======== EXPECT\n$count [5,3,-1,-50,-1,-99] -1\n2\n$count [-1,-50,-1,-99,-444] 10\n0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT sum\nsum [1,-1]\nsum [5,3,-1]\nsum [-1,-50]\nend\n======== EXPECT\n$sum [1,-1]\n2\n$sum [5,3,-1]\n9\n$sum [-1,-50]\n51\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT average\naverage [5,3,-1,-50,-1,-99]\naverage [-1,-50,-1,-99,-444]\nend\n======== EXPECT\n$average [5,3,-1,-50,-1,-99]\n26.50\n$average [-1,-50,-1,-99,-444]\n119.00\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT more_men\nmore_men [5,3,1,-50,-1,-99]\nmore_men [5,-3,1,-50,-1,-99]\nmore_men [5,3,1,-50,-1,99]\nend\n======== EXPECT\n$more_men [5,3,1,-50,-1,-99]\ndraw\n$more_men [5,-3,1,-50,-1,-99]\nwomen\n$more_men [5,3,1,-50,-1,99]\nmen\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT half_compare\nhalf_compare [5,-5]\nhalf_compare [5,-4]\nhalf_compare [5,-6]\nhalf_compare [5,3]\nhalf_compare [3,5]\nhalf_compare [5,3,-1,50,10,-999]\nhalf_compare [50,-98,2,-50,-1,-99]\nhalf_compare [51,99,1,-50,-1,-99]\nend\n======== EXPECT\n$half_compare [5,-5]\ndraw\n$half_compare [5,-4]\nfirst\n$half_compare [5,-6]\nsecond\n$half_compare [5,3]\nfirst\n$half_compare [3,5]\nsecond\n$half_compare [5,3,-1,50,10,-999]\nsecond\n$half_compare [50,-98,2,-50,-1,-99]\ndraw\n$half_compare [51,99,1,-50,-1,-99]\nfirst\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT sex_battle\nsex_battle [5,3,-1,-50,-10,-999]\nsex_battle [50,98,2,-50,-1,9991]\nsex_battle [-50,99,1,50,-1,-99]\nend\n======== EXPECT\n$sex_battle [5,3,-1,-50,-10,-999]\nwomen\n$sex_battle [50,98,2,-50,-1,9991]\nmen\n$sex_battle [-50,99,1,50,-1,-99]\ndraw\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "function input() { return \"\"; }\nexport {};\n\nfunction count(vet: number[], value: number): number {\n    return 0;\n}\n\nfunction sum(vet: number[]): number {\n    return 0;\n}\n\nfunction average(vet: number[]): number {\n    return 0;\n}\n\nfunction more_men(vet: number[]): string {\n    return \"\";\n}\n\nfunction half_compare(vet: number[]): string {\n    return \"\";\n}\n\nfunction sex_battle(vet: number[]): string {\n    return \"\";\n}\n\nfunction main() {\n    while (true) {\n        let line = input();\n        console.log(\"$\" + line);\n\n        let args = line.split(\" \");\n        let cmd = args[0];\n\n        if      (cmd === \"end\")          { break;                                             }\n        else if (cmd === \"count\")        { console.log(count(to_vet(args[1]), +args[2]));     }\n        else if (cmd === \"sum\")          { console.log(sum(to_vet(args[1])));                 }\n        else if (cmd === \"average\")      { console.log(average(to_vet(args[1]))?.toFixed(2)); }\n        else if (cmd === \"more_men\")     { console.log(more_men(to_vet(args[1])));            }\n        else if (cmd === \"half_compare\") { console.log(half_compare(to_vet(args[1])));        }\n        else if (cmd === \"sex_battle\")   { console.log(sex_battle(to_vet(args[1])));          }\n        else                             { console.log(\"fail: comando invalido\");             }\n    }\n}\n\n// Fun\u00e7\u00e3o auxiliar para converter de string para vetor\n// \"[1,2,3,4]\" para [1, 2, 3, 4]\nfunction to_vet(token: string): number[] {\n    let size = token.length;\n    let inside = token.substring(1, size - 1);\n    return inside === \"\" ? [] : inside.split(\",\").map(x => +x)\n}\n\n\nmain()\n",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.List;\nimport java.util.Arrays;\nimport java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.DecimalFormat;\n\nclass Student {\n\n    public static int count(List<Integer> vet, int value) {\n        return 0;\n    }\n\n    public static int sum(List<Integer> vet) {\n        return 0;\n    }\n\n    public static double average(List<Integer> vet) {\n        return 0;\n    }\n\n    public static String moreMen(List<Integer> vet) {\n        return \"\";\n    }\n\n    public static String halfCompare(List<Integer> vet) {\n        return \"\";\n    }\n\n    public static String sexBattle(List<Integer> vet) {\n        return \"\";\n    }\n}\n\n\npublic class Shell {\n    public static void main(String[] _args) {\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n            \n            var args = line.split(\" \");\n            var cmd = args[0];\n            \n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (args[0].equals(\"count\")) {\n                int result = Student.count(strToVet(args[1]), Integer.parseInt(args[2]));\n                System.out.println(\"\" + result);\n            }\n            else if (args[0].equals(\"half_compare\")) {\n                String result = Student.halfCompare(strToVet(args[1]));\n                System.out.println(result);\n            }\n            else if (args[0].equals(\"sex_battle\")) {\n                String result = Student.sexBattle(strToVet(args[1]));\n                System.out.println(result);\n            }\n            else if (args[0].equals(\"sum\")) {\n                int result = Student.sum(strToVet(args[1]));\n                System.out.println(\"\" + result);\n            }\n            else if (args[0].equals(\"average\")) {\n                DecimalFormat df = new DecimalFormat(\"0.00\");\n                String result = df.format(Student.average(strToVet(args[1])));\n                System.out.println(result);\n            }\n            else if (args[0].equals(\"more_men\")) {\n                String result = Student.moreMen(strToVet(args[1]));\n                System.out.println(result);\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    public static List<Integer> strToVet(String s) {\n        if (s.length() == 2) return new ArrayList<>();\n        List<String> parts = Arrays.asList(s.substring(1, s.length() - 1).split(\",\"));\n        List<Integer> result = new ArrayList<>();\n        for (String part : parts) {\n            result.add(Integer.parseInt(part.trim()));\n        }\n        return result;\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <iomanip> //setprecision\nusing namespace std;\n\ninline int count(vector<int> vet, int x) {\n    (void) vet;\n    (void) x;\n    return 0;\n}\n\ninline int sum(vector<int> vet) {\n    (void) vet;\n    return 0;\n}\n\ninline double average(const vector<int>& vet) {\n    // (void) vet;\n    return 0;\n}\n\ninline string more_men(const vector<int>& vet) {\n    (void) vet;\n    return \"\";\n}\n\ninline string half_compare(const vector<int>& vet) {\n    (void) vet;\n    return \"\";\n}\n\ninline string sex_battle(const vector<int>& vet) {\n    (void) vet;\n    return \"\";\n}\n\nvector<int> str2vet(string s);\nvector<string> split(string s, char delim);\n\nint main() {\n    while (true) {\n\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        auto args = split(line, ' ');\n\n        if (args[0] == \"end\") {\n            break;\n        } else if (args[0] == \"count\") {\n            cout << count(str2vet(args[1]), stoi(args[2])) << endl;\n        } else if (args[0] == \"sum\") {\n            cout << sum(str2vet(args[1])) << endl;\n        } else if (args[0] == \"more_men\") {\n            cout << more_men(str2vet(args[1])) << endl;\n        } else if (args[0] == \"half_compare\") {\n            cout << half_compare(str2vet(args[1])) << endl;\n        } else if (args[0] == \"more_men_or_women\") {\n            cout << more_men(str2vet(args[1])) << endl;\n        } else if (args[0] == \"sex_battle\") {\n            cout << sex_battle(str2vet(args[1])) << endl;\n        } else if (args[0] == \"average\") {\n            cout << fixed << setprecision(2) << average(str2vet(args[1])) << endl;\n        } else {\n            cout << \"fail: unknown command\" << endl;\n        }\n    }     \n}\n\nvector<int> str2vet(string s) {\n    vector<int> vet;\n    auto sub = s.substr(1, s.size() - 2);\n    stringstream ss(sub);\n    string token;\n    while (getline(ss, token, ',')) {\n        vet.push_back(stoi(token));\n    }\n    return vet;\n}\n\nvector<string> split(string s, char delim) {\n    vector<string> tokens;\n    stringstream ss(s);\n    string token;\n    while (getline(ss, token, delim)) {\n        tokens.push_back(token);\n    }\n    return tokens;\n}\n",
                "encoding": 0
            }
        ],
        "go": [
            {
                "name": "shell.go",
                "contents": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc count(vet []int, x int) int {\n\t_ = vet\n\t_ = x\n\treturn 0\n}\n\nfunc sum(vet []int) int {\n\t_ = vet\n\treturn 0\n}\n\nfunc average(vet []int) float64 {\n\treturn 0\n}\n\nfunc moreMen(vet []int) string {\n\t_ = vet\n\treturn \"\"\n}\n\nfunc halfCompare(vet []int) string {\n\t_ = vet\n\treturn \"\"\n}\n\nfunc sexBattle(vet []int) string {\n\t_ = vet\n\treturn \"\"\n}\n\n// Fun\u00e7\u00f5es auxiliares\n\nfunc main() {\n\tscanner := bufio.NewScanner(os.Stdin)\n\tfor scanner.Scan() {\n\t\tline := scanner.Text()\n\t\tfmt.Printf(\"$%s\\n\", line)\n\t\targs := strings.Fields(line)\n\t\tif len(args) == 0 {\n\t\t\tcontinue\n\t\t}\n\n\t\tswitch args[0] {\n\t\tcase \"end\":\n\t\t\treturn\n\t\tcase \"count\":\n\t\t\tfmt.Println(count(str2vet(args[1]), toInt(args[2])))\n\t\tcase \"sum\":\n\t\t\tfmt.Println(sum(str2vet(args[1])))\n\t\tcase \"average\":\n\t\t\tfmt.Printf(\"%.2f\\n\", average(str2vet(args[1])))\n\t\tcase \"more_men\":\n\t\t\tfmt.Println(moreMen(str2vet(args[1])))\n\t\tcase \"half_compare\":\n\t\t\tfmt.Println(halfCompare(str2vet(args[1])))\n\t\tcase \"sex_battle\":\n\t\t\tfmt.Println(sexBattle(str2vet(args[1])))\n\t\tdefault:\n\t\t\tfmt.Println(\"fail: unknown command\")\n\t\t}\n\t}\n}\n\nfunc str2vet(s string) []int {\n\tsub := s[1 : len(s)-1]\n\tparts := strings.Split(sub, \",\")\n\tvar vet []int\n\tfor _, part := range parts {\n\t\tif part == \"\" {\n\t\t\tcontinue\n\t\t}\n\t\tval, _ := strconv.Atoi(part)\n\t\tvet = append(vet, val)\n\t}\n\treturn vet\n}\n\nfunc toInt(s string) int {\n\tval, _ := strconv.Atoi(s)\n\treturn val\n}\n",
                "encoding": 0
            }
        ]
    }
}
