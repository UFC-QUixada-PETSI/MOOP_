{
    "title": "Gerencie a fila de espera e atendimento da @budega",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>Gerencie a fila de espera e atendimento da @budega</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpm9cwh44w.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"gerencie-a-fila-de-espera-e-atendimento-da-budega\">Gerencie a\nfila de espera e atendimento da <span class=\"citation\"\ndata-cites=\"budega\">@budega</span></h1>\n<ul>\n<li>Veja a vers\u00e3o online: <a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/budega/Readme.md\">aqui.</a></li>\n<li>Para programar na sua m\u00e1quina (local/virtual) use:\n<ul>\n<li><code>tko down poo budega</code></li>\n</ul></li>\n<li>Se n\u00e3o tem o <code>tko</code>, instale pelo <a\nhref=\"https://github.com/senapk/tko#tko\">LINK</a>.</li>\n</ul>\n<hr />\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/budega/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<p>Nosso objetivo no trabalho \u00e9 modelar uma fila de atendimento de um\nMercatil.</p>\n<h2 id=\"intro\">Intro</h2>\n<ul>\n<li><p>Quando o mercantil \u00e9 incializado, \u00e9 definido a quantidade de\ncaixas que ele ter\u00e1.</p></li>\n<li><p>Os caixas s\u00e3o modelados como um vetor de clientes de tamanho\nfixo. Uma posi\u00e7\u00e3o do caixa ou ter\u00e1 o valor null para indicar que o caixa\nest\u00e1 vazio ou ter\u00e1 um objeto cliente.</p></li>\n<li><p>A fila de espera \u00e9 uma lista de clientes de tamanho vari\u00e1vel.\nTodo cliente que chega \u00e9 inserido no final da fila.</p></li>\n<li><p>As opera\u00e7\u00f5es s\u00e3o entrar, chamarNoCaixa e\nfinalizarAtendimento.</p></li>\n<li><p>Em Java</p>\n<ul>\n<li>Os caixas devem ser implementados com um ArrayList e a fila de\nespera como um LinkedList.</li>\n</ul></li>\n<li><p>Em C++</p>\n<ul>\n<li>Os caixas devem ser implementados com um vector e a fila de espera\ncomo um list.</li>\n<li>Os clientes devem ser criados dinamicamente e gerenciados por um\nshared_ptr.</li>\n</ul></li>\n</ul>\n<hr />\n<h2 id=\"guide\">Guide</h2>\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/budega/.cache/draft.cpp\">draft.cpp</a></li>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/budega/.cache/draft.java\">draft.java</a></li>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/budega/.cache/draft.ts\">draft.ts</a></li>\n</ul>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/budega/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<p><a href=\"https://youtu.be/Z7karsbg1ok\"><img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/budega/../_images/resolucao.png\"\nalt=\"_\" /></a></p>\n<hr />\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE iniciar</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 2</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----]</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> []</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE arrive</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$arrive</span> carla</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$arrive</span> maria</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$arrive</span> rubia</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----]</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> [carla, maria, rubia]</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE call</span></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$call</span> 0</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [carla, <span class=\"at\">-----]</span></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> [maria, rubia]</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE finish</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$finish</span> 0</span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----]</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> [maria, rubia]</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode sh\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE iniciar2</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 3</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----,</span> <span class=\"at\">-----]</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> []</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$arrive</span> carla</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$arrive</span> maria</span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----,</span> <span class=\"at\">-----]</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> [carla, maria]</span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE call</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$call</span> 0</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$call</span> 0</span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> caixa ocupado</span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [carla, <span class=\"at\">-----,</span> <span class=\"at\">-----]</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> <span class=\"pp\">[</span><span class=\"ss\">maria</span><span class=\"pp\">]</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE empty waiting</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$call</span> 2</span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [carla, <span class=\"at\">-----,</span> maria]</span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> []</span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE empty waiting</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$call</span> 1</span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> sem clientes</span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE finish</span></span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$finish</span> 0</span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----,</span> maria]</span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> []</span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$finish</span> 2</span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Caixas:</span> [-----, <span class=\"at\">-----,</span> <span class=\"at\">-----]</span></span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">Espera:</span> []</span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-48\"><a href=\"#cb2-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE error</span></span>\n<span id=\"cb2-49\"><a href=\"#cb2-49\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-50\"><a href=\"#cb2-50\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$finish</span> 3</span>\n<span id=\"cb2-51\"><a href=\"#cb2-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> caixa inexistente</span>\n<span id=\"cb2-52\"><a href=\"#cb2-52\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$finish</span> 1</span>\n<span id=\"cb2-53\"><a href=\"#cb2-53\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> caixa vazio</span>\n<span id=\"cb2-54\"><a href=\"#cb2-54\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-55\"><a href=\"#cb2-55\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> iniciar\ninit 2\nshow\nend\n========\n$init 2\n$show\nCaixas: [-----, -----]\nEspera: []\n$end\n<<<<<<<<\n\n>>>>>>>> arrive\ninit 2\nshow\narrive carla\narrive maria\narrive rubia\nshow\nend\n========\n$init 2\n$show\nCaixas: [-----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$arrive rubia\n$show\nCaixas: [-----, -----]\nEspera: [carla, maria, rubia]\n$end\n<<<<<<<<\n\n>>>>>>>> call\ninit 2\nshow\narrive carla\narrive maria\narrive rubia\nshow\ncall 0\nshow\nend\n========\n$init 2\n$show\nCaixas: [-----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$arrive rubia\n$show\nCaixas: [-----, -----]\nEspera: [carla, maria, rubia]\n$call 0\n$show\nCaixas: [carla, -----]\nEspera: [maria, rubia]\n$end\n<<<<<<<<\n\n>>>>>>>> finish\ninit 2\nshow\narrive carla\narrive maria\narrive rubia\nshow\ncall 0\nshow\nfinish 0\nshow\nend\n========\n$init 2\n$show\nCaixas: [-----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$arrive rubia\n$show\nCaixas: [-----, -----]\nEspera: [carla, maria, rubia]\n$call 0\n$show\nCaixas: [carla, -----]\nEspera: [maria, rubia]\n$finish 0\n$show\nCaixas: [-----, -----]\nEspera: [maria, rubia]\n$end\n<<<<<<<<\n\n>>>>>>>> iniciar2\ninit 3\nshow\narrive carla\narrive maria\nshow\nend\n========\n$init 3\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$show\nCaixas: [-----, -----, -----]\nEspera: [carla, maria]\n$end\n<<<<<<<<\n\n>>>>>>>> call\ninit 3\nshow\narrive carla\narrive maria\nshow\ncall 0\ncall 0\nshow\nend\n========\n$init 3\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$show\nCaixas: [-----, -----, -----]\nEspera: [carla, maria]\n$call 0\n$call 0\nfail: caixa ocupado\n$show\nCaixas: [carla, -----, -----]\nEspera: [maria]\n$end\n<<<<<<<<\n\n>>>>>>>> empty waiting\ninit 3\nshow\narrive carla\narrive maria\nshow\ncall 0\ncall 0\nshow\ncall 2\nshow\nend\n========\n$init 3\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$show\nCaixas: [-----, -----, -----]\nEspera: [carla, maria]\n$call 0\n$call 0\nfail: caixa ocupado\n$show\nCaixas: [carla, -----, -----]\nEspera: [maria]\n$call 2\n$show\nCaixas: [carla, -----, maria]\nEspera: []\n$end\n<<<<<<<<\n\n>>>>>>>> empty waiting\ninit 3\nshow\narrive carla\narrive maria\nshow\ncall 0\ncall 0\nshow\ncall 2\nshow\ncall 1\nend\n========\n$init 3\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$show\nCaixas: [-----, -----, -----]\nEspera: [carla, maria]\n$call 0\n$call 0\nfail: caixa ocupado\n$show\nCaixas: [carla, -----, -----]\nEspera: [maria]\n$call 2\n$show\nCaixas: [carla, -----, maria]\nEspera: []\n$call 1\nfail: sem clientes\n$end\n<<<<<<<<\n\n>>>>>>>> finish\ninit 3\nshow\narrive carla\narrive maria\nshow\ncall 0\ncall 0\nshow\ncall 2\nshow\ncall 1\nfinish 0\nshow\nfinish 2\nshow\nend\n========\n$init 3\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$show\nCaixas: [-----, -----, -----]\nEspera: [carla, maria]\n$call 0\n$call 0\nfail: caixa ocupado\n$show\nCaixas: [carla, -----, -----]\nEspera: [maria]\n$call 2\n$show\nCaixas: [carla, -----, maria]\nEspera: []\n$call 1\nfail: sem clientes\n$finish 0\n$show\nCaixas: [-----, -----, maria]\nEspera: []\n$finish 2\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$end\n<<<<<<<<\n\n>>>>>>>> error\ninit 3\nshow\narrive carla\narrive maria\nshow\ncall 0\ncall 0\nshow\ncall 2\nshow\ncall 1\nfinish 0\nshow\nfinish 2\nshow\nfinish 3\nfinish 1\nend\n========\n$init 3\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$arrive carla\n$arrive maria\n$show\nCaixas: [-----, -----, -----]\nEspera: [carla, maria]\n$call 0\n$call 0\nfail: caixa ocupado\n$show\nCaixas: [carla, -----, -----]\nEspera: [maria]\n$call 2\n$show\nCaixas: [carla, -----, maria]\nEspera: []\n$call 1\nfail: sem clientes\n$finish 0\n$show\nCaixas: [-----, -----, maria]\nEspera: []\n$finish 2\n$show\nCaixas: [-----, -----, -----]\nEspera: []\n$finish 3\nfail: caixa inexistente\n$finish 1\nfail: caixa vazio\n$end\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <memory>\n#include <list>\n#include <utility>\n#include <fn.hpp> // https://raw.githubusercontent.com/senapk/cppaux/master/fn.hpp\n\nclass Pessoa {\n    std::string nome;\npublic:\n    Pessoa(std::string nome):\n    }\n    std::string getNome() const {\n    }\n    std::string str() const {\n    }\n};\nstd::ostream& operator<<(std::ostream& os, const Pessoa& p) {\n    return (os << p.str());\n}\n\nclass Mercantil {\n    std::vector<std::shared_ptr<Pessoa>> caixas; //caixas do supermercado\n    std::list  <std::shared_ptr<Pessoa>> espera; //lista de clientes esperando\n\n    bool validarIndice(int indice) {\n    }\n\npublic:\n    Mercantil(int qtd_caixas):\n    }\n    \n    void chegar(const std::shared_ptr<Pessoa>& person) {\n    }\n\n    bool chamarNoCaixa(int indice) {\n    }\n    \n    std::shared_ptr<Pessoa> finalizar(int indice) {\n    }\n\n    std::string str() const {\n        auto caixas_str = caixas | fn::MAP([](auto c){ \n            return c == nullptr ? \"-----\" : c->getNome();\n        });\n        return fn::format(\"Caixas: {}\\nEspera: {}\", caixas_str, espera);\n    }\n};\n\nstd::ostream& operator<<(std::ostream& os, const Mercantil& b) {\n    return (os << b.str());\n}\n\nint main() {\n    Mercantil bank(0);\n    while (true) {\n        auto line = fn::input();\n        auto args = fn::split(line, ' ');\n        fn::write(\"$\" + line);\n\n        if      (args[0] == \"end\"   ) { break;                                          }\n        else if (args[0] == \"init\"  ) { bank = Mercantil(+args[1]);                     }\n        else if (args[0] == \"call\"  ) { bank.chamarNoCaixa(+args[1]);                   }\n        else if (args[0] == \"finish\") { bank.finalizar(+args[1]);                       }\n        else if (args[0] == \"arrive\") { bank.chegar(std::make_shared<Pessoa>(args[1])); }\n        else if (args[0] == \"show\"  ) { fn::write(bank);                                }\n        else                          { fn::write(\"fail: comando invalido\");            }\n    }\n}\n\n",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.*;\nimport java.util.stream.Collectors;\n\nclass Pessoa {\n    private String nome;\n    Pessoa(String nome) {\n    }\n    public String getNome() {\n    }\n}\n\nclass Mercantil {\n    private ArrayList < Pessoa > caixas; //caixas do supermercado\n    private LinkedList < Pessoa > esperando; //lista de clientes esperando\n    //inicializa esperando como uma lista de tamanho vazio\n    //inicializa caixas como um vetor de tamanho qtd_caixas com todas as posi\u00e7\u00f5es iguais a null\n    Mercantil(int qtd_caixas) { //n\u00famero de caixas no mercado\n    }\n    //verifica se o indice \u00e9 v\u00e1lido para acessar os\n    public boolean validarIndice(int indice) {\n    }\n    public void chegar(Pessoa person) {\n    }\n    //1. verifica se o indice \u00e9 v\u00e1lido\n    //2. verifica se o caixa chamado est\u00e1 vazio\n    //3. verifica se existe alguem na lista de espera\n    //4. se tudo estiver ok, o primeiro cliente da lista de espera \u00e9 movido para este caixa\n    public boolean chamarNoCaixa(int indice) {\n    }\n    //1. verifica se o indice \u00e9 v\u00e1lido\n    //2. verifica se este caixa possui um cliente\n    //3. Se tudo estiver ok, o cliente \u00e9 removido do caixa e volta a ser null para indicar que est\u00e1 vazio\n    public Pessoa finalizar(int indice) {\n    }\n    public String toString() {\n        var caixas = this.caixas.stream()\n                         .map(pessoa -> pessoa == null ? \"-----\" : pessoa.getNome())\n                         .collect(Collectors.joining(\", \"));\n        var espera = this.esperando.stream()\n                         .map(pessoa -> pessoa.getNome())\n                         .collect(Collectors.joining(\", \"));\n        return \"Caixas: [\" + caixas + \"]\\nEspera: [\" + espera + \"]\";\n    }\n}\n\n\nclass Solver {\n    static Mercantil mercantil = new Mercantil(0);\n    public static void main(String[] _args) {\n        while(true) {\n            String line = input();\n            String[] args = line.split(\" \");\n            write('$' + line);\n\n            if     (args[0].equals(\"init\"     )) { mercantil = new Mercantil(number(args[1])); }\n            else if(args[0].equals(\"arrive\"   )) { mercantil.chegar(new Pessoa(args[1]));      }\n            else if(args[0].equals(\"call\"     )) { mercantil.chamarNoCaixa(number(args[1]));   }\n            else if(args[0].equals(\"finish\"   )) { mercantil.finalizar(number(args[1]));       }\n            else if(args[0].equals(\"show\"     )) { write(mercantil.toString());                }\n            else if(args[0].equals(\"end\"      )) { break;                                      }\n            else                                 { write(\"fail: comando invalido\");      }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n    public static String input()           { return scanner.nextLine();       }\n    public static void write(String value) { System.out.println(value);       }\n    public static int number(String str)   { return Integer.parseInt(str);    }\n}",
                "encoding": 0
            }
        ],
        "ts": [
            {
                "name": "adapter.ts",
                "contents": "class Pessoa {\n    private nome: string;\n    constructor(nome: string) {\n        this.nome = nome;\n    }\n    public getNome(): string {\n        return this.nome;\n    }\n    public setNome(nome: string): void {\n        this.nome = nome;\n    }\n}\n\nclass Mercantil {\n    caixas: Array<Pessoa | null>;\n    espera: Array<Pessoa>;\n\n    constructor(nCaixas: number) {\n        this.caixas = [];\n        for (let i = 0; i < nCaixas; i++) {\n            this.caixas.push(null);\n        }\n        this.espera = [];\n    }\n    chegar(pessoa: Pessoa): void {\n        this.espera.push(pessoa);\n    }\n    chamar(index: number) {\n        if (this.espera.length == 0) {\n            console.log(\"fail: sem clientes\");\n            return;\n        }\n        if (this.caixas[index] != null) {\n            console.log(\"fail: caixa ocupado\");\n            return;\n        }\n        this.caixas[index] = this.espera.shift()!;\n    }\n    finalizar(index: number): void {\n        if (index >= this.caixas.length) {\n            console.log(\"fail: caixa inexistente\");\n            return;\n        }\n        if (this.caixas[index] == null) {\n            console.log(\"fail: caixa vazio\");\n            return;\n        }\n        this.caixas[index] = null;\n    }\n\n    toString(): string {\n        let caixas = this.caixas\n                    .map(x => x == null ? \"-----\" : x.getNome())\n                    .join(\", \")\n        let espera = this.espera\n                    .map(x => x.getNome())\n                    .join(\", \");\n        return \"Caixas: [\" + caixas + \"]\\nEspera: [\" + espera + \"]\";\n    }\n}\n\nclass Adapter {\n    constructor() {\n    }\n    init(nCaixas: number): void {\n    }\n    arrive(nome: string): void {\n    }\n    call(index: number): void {\n    }\n    finish(index: number): void {\n    }\n    show(): string {\n        return \"\";\n\n    }\n}\n\nexport { Adapter };",
                "encoding": 0
            },
            {
                "name": "shell.ts",
                "contents": "import { Adapter } from \"./adapter\";\n\nlet _cin_ : string[] = [];\ntry { _cin_ = require(\"fs\").readFileSync(0).toString().split(/\\r?\\n/); } catch(e){}\nlet input = () : string => _cin_.length === 0 ? \"\" : _cin_.shift()!;\nlet write = (text: any, end:string=\"\\n\")=> process.stdout.write(\"\" + text + end);\n\nfunction main() {\n    let adp = new Adapter();\n\n    while (true) {\n        let line = input();\n        let args = line.split(\" \");\n        write(\"$\" + line);\n\n        if       (args[0] == \"end\")    { break;                            }    \n        else if (args[0] == \"init\")   { adp.init(+args[1]);                }\n        else if (args[0] == \"show\")   { write(adp.show());                 }\n        else if (args[0] == \"arrive\") { adp.arrive(args[1]);               }\n        else if (args[0] == \"call\")   { adp.call(+args[1]);                }\n        else if (args[0] == \"finish\") { adp.finish(+args[1]);              }\n        else                          { write(\"fail: comando invalido\");   }\n    }\n}\nmain() \n",
                "encoding": 0
            }
        ]
    }
}
