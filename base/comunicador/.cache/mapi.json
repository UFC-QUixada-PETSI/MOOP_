{
    "title": "@comunicador",
    "description": "# @comunicador\n\n<!-- toch -->\n[Intro](#intro) | [Guia](#guia) | [Diagrama de Classes](#diagrama-de-classes) | [Esqueleto](#esqueleto)\n-- | -- | -- | --\n<!-- toch -->\n\n![cover](cover.jpg)\n\n## Intro\n\nVoc\u00ea vai alterar a implementa\u00e7\u00e3o do Hospital I para habilitar o envio de mensagens entre m\u00e9dicos e pacientes.\n\n- Pacientes s\u00f3 podem enviar mensagens para seus m\u00e9dicos.\n- M\u00e9dicos s\u00f3 podem enviar mensagens para seus pacientes.\n- M\u00e9dicos e pacientes s\u00f3 podem ver suas pr\u00f3prias mensagens.\n- As mensagens funcionam no modo de inbox, ap\u00f3s lidas, elas \"desaparecem\".\n\n## Guia\n\n- As classes Paciente e Medico v\u00e3o ter poucas altera\u00e7\u00f5es.\n- Precisamos que m\u00e9dicos e pacientes sejam diferentes, mas que ambos se comportem como Comunicadores.\n- As antigas interfaces IPaciente e IMedicos v\u00e3o virar classes abstratas que herdam de Comunicador.\n- Em comunicador reside toda a l\u00f3gica da troca de mensagens. A \u00fanica pe\u00e7a que falta \u00e9 que um paciente tem os seus m\u00e9dicos como poss\u00edveis destinat\u00e1rios e vice versa.\n- Por isso, apenas nas classes Paciente e M\u00e9dico que \u00e9 implementado o getReceiver definido na interface ICommunicator.\n- Um paciente quando invocado o m\u00e9todo getReceiver(id) procura na sua lista de m\u00e9dicos por um m\u00e9dico com esse id e retorna esse objeto m\u00e9dico. Se n\u00e3o encontra, emite uma exception avisando que n\u00e3o possui aquele remetente. O mesmo para o m\u00e9tido.\n- A classe Abstrata Communicator implementa o envio de mensagem e o inbox.\n\n***\n\n```sh\n#__case inserir\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n\n\n#__case vincular\n# tie _med _pac _pac ...\n$tie bisturi fred alvis goku\n$tie snif silva alvis\n$tie facada goku\nfail: ja existe outro medico da especialidade cirurgia\n$show\nPac: alvis:avc        Meds: [bisturi, snif]\nPac: fred:fratura     Meds: [bisturi]\nPac: goku:hemorragia  Meds: [bisturi]\nPac: silva:sinusite   Meds: [snif]\nMed: bisturi:cirurgia Pacs: [alvis, fred, goku]\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: [alvis, silva]\n\n#__case mensagens\n$msg alvis bisturi posso tomar homeprazol?\n$msg goku bisturi coceira no reto eh normal?\n$inbox bisturi\n[alvis:posso tomar homeprazol?]\n[goku:coceira no reto eh normal?]\n$msg bisturi alvis chupe limao que passa\n$msg bisturi goku venha na minha sala pra eu olhar\n$inbox goku\n[bisturi:venha na minha sala pra eu olhar]\n$msg goku facada\nfail:goku nao conhece facada\n$inbox machado\nfail: usuario nao existe\n$end\n```\n\n***\n\n## Diagrama de Classes\n![diagrama](diagrama.png)\n\n***\n\n## Esqueleto\n<!--FILTER Solver.java java-->\n```java\nclass HospitalException extends RuntimeException {\n\tpublic HospitalException(String message);\n\t\tsuper(message);\n\t}\n}\nclass Message {\n\tprivate String sender;\n\tprivate String text;\n\tpublic Message(String sender, String text);\n\t\tthis.sender = sender;\n\t\tthis.text = text;\n\t}\n\tpublic String toString();\n\t\treturn sender + \":\" + text;\n\t}\n}\ninterface ICommunicator {\n\tpublic String getId();\n\t//return received messages and clear inbox\n\tpublic Collection<Message> getInbox();\n\t//recover receiver ICommunicator object using getReceiver\n\t//creates de Message object using getId() and string message\n\t//and put message in the receiver inbox\n\tpublic void deliverMessage(String receiver, String message);\n\t//store message in inbox\n\tpublic void storeMessage(Message msg);\n\t//recover receiver using unique id\n\t//this method will be implemented in Pacient and Medic classes\n\t//If the object could not be found, throw an exception.\n\tpublic ICommunicator getReceiver(String id) throws HospitalException;\n}\nabstract class Communicator implements ICommunicator {\n\tprivate List<Message> inbox;\n\tpublic Communicator();\n\t\tinbox = new ArrayList<>();\n\t}\n\tpublic Collection<Message> getInbox();\n\t\tList<Message> output = new ArrayList<Message>(this.inbox);\n\t\tthis.inbox.clear();\n\t\treturn output;\n\t}\n\tpublic void storeMessage(Message msg);\n\t\tthis.inbox.add(msg);\n\t}\n\tpublic void deliverMessage(String receiver, String msg);\n\t\tthis.getReceiver(receiver).storeMessage(new Message(this.getId(), msg));\n\t}\n}\nabstract class IPaciente extends Communicator {\n\tpublic abstract void addMedico(IMedico medico);\n\tpublic abstract void removerMedico(String idMedico);\n\tpublic abstract Collection<IMedico> getMedicos();\n\tpublic abstract String getDiagnostico();\n}\nabstract class IMedico extends Communicator {\n\tpublic abstract void addPaciente(IPaciente paciente);\n\tpublic abstract void removerPaciente(String idPaciente);\n\tpublic abstract Collection<IPaciente> getPacientes();\n\tpublic abstract String getClasse();\n}\nclass Medico extends IMedico{\n\tString sender;\n\tString classe;\n\tMap<String, IPaciente> pacientes = new TreeMap<>();\n\tpublic Medico(String sender, String classe);\n\t\tthis.sender = sender;\n\t\tthis.classe = classe;\n\t}\n\tpublic String getId();\n\t\treturn sender;\n\t}\n\tpublic void addPaciente(IPaciente paciente);\n\t\tIPaciente mpaciente = pacientes.get(paciente.getId());\n\t\tif (mpaciente != null)\n\t\t\treturn;\n\t\tpacientes.put(paciente.getId(), paciente);\n\t\tpaciente.addMedico(this);\n\t}\n\tpublic void removerPaciente(String idPaciente);\n\t\tIPaciente mpaciente = pacientes.get(idPaciente);\n\t\tif (mpaciente == null)\n\t\t\treturn;\n\t\tpacientes.remove(idPaciente);\n\t\tmpaciente.removerMedico(this.sender);\n\t}\n\tpublic Collection<IPaciente> getPacientes();\n\t\treturn pacientes.values();\n\t}\n\tpublic String getClasse();\n\t\treturn this.classe;\n\t}\n\tpublic String toString();\n\t\treturn \"Med: \" + String.format(\"%-16.16s\", getId() + \":\" + getClasse()) + \" Pacs: [\"\n\t\t\t\t+ pacientes.keySet().stream().collect(Collectors.joining(\", \")) + \"]\\n\";\n\t}\n\t@Override\n\tpublic ICommunicator getReceiver(String id);\n\t\tICommunicator com = pacientes.get(id);\n\t\tif(com != null)\n\t\t\treturn com;\n\t\tthrow new HospitalException(\"fail:\" + getId() + \" nao conhece \" + id);\n\t}\n}\nclass Paciente extends IPaciente {\n\tprotected String sender;\n\tprotected String diagnostico;\n\tprotected TreeMap<String, IMedico> medicos = new TreeMap<>();\n\tpublic Paciente(String sender, String diagnostico);\n\t\tthis.sender = sender;\n\t\tthis.diagnostico = diagnostico;\n\t}\n\tpublic String getId();\n\t\treturn sender;\n\t}\n\tpublic void addMedico(IMedico medico);\n\t\tIMedico pmedico = medicos.get(medico.getId());\n\t\tif (pmedico != null)\n\t\t\treturn;\n\t\tmedicos.put(medico.getId(), medico);\n\t\tmedico.addPaciente(this);\n\t}\n\tpublic void removerMedico(String idMedico);\n\t\tIMedico pmedico = medicos.get(idMedico);\n\t\tif (pmedico == null)\n\t\t\treturn;\n\t\tmedicos.remove(idMedico);\n\t\tpmedico.removerPaciente(this.sender);\n\t}\n\tpublic Collection<IMedico> getMedicos();\n\t\treturn medicos.values();\n\t}\n\tpublic String getDiagnostico();\n\t\treturn diagnostico;\n\t}\n\tpublic String toString();\n\t\treturn \"Pac: \" + String.format(\"%-16.16s\", getId() + \":\" + getDiagnostico()) + \" Meds: [\"\n\t\t\t\t+ this.medicos.keySet().stream().collect(Collectors.joining(\", \")) + \"]\\n\";\n\t}\n\t@Override\n\tpublic ICommunicator getReceiver(String id);\n\t\tICommunicator com = medicos.get(id);\n\t\tif(com != null)\n\t\t\treturn com;\n\t\tthrow new HospitalException(\"fail:\" + getId() + \" nao conhece \" + id);\n\t}\n}\nclass Hospital {\n\tprivate TreeMap<String, IPaciente> pacientes = new TreeMap<>();\n\tprivate TreeMap<String, IMedico> medicos = new TreeMap<>();\n\tpublic Hospital();\n\t}\n\tpublic void removerPaciente(String sender);\n\t\tIPaciente paciente = pacientes.get(sender);\n\t\tif (paciente == null)\n\t\t\treturn;\n\t\tfor (IMedico medico : paciente.getMedicos())\n\t\t\tmedico.removerPaciente(sender);\n\t\tpacientes.remove(sender);\n\t}\n\tpublic void removerMedico(String sender);\n\t\tIMedico medico = medicos.get(sender);\n\t\tif (medico == null)\n\t\t\treturn;\n\t\tfor (IPaciente paciente : medico.getPacientes())\n\t\t\tpaciente.removerMedico(sender);\n\t\tmedicos.remove(sender);\n\t}\n\tpublic void addPaciente(IPaciente paciente);\n\t\tpacientes.put(paciente.getId(), paciente);\n\t}\n\tpublic void addMedico(IMedico medico);\n\t\tmedicos.put(medico.getId(), medico);\n\t}\n\tpublic void vincular(String nomeMedico, String nomePaciente);\n\t\tIMedico medico = medicos.get(nomeMedico);\n\t\tIPaciente paciente = pacientes.get(nomePaciente);\n\t\tif (medico == null)\n\t\t\treturn;\n\t\tif(paciente.getMedicos().stream().filter(med -> med.getClasse().equals(medico.getClasse())).findFirst().orElse(null) != null);\n\t\t\tSystem.out.println(\"fail: ja existe outro medico da especialidade cirurgia\");\n\t\t\treturn;\n\t\t}\n\t\tmedico.addPaciente(paciente);\n\t}\n\t//search for a pacient or medic with this id or throw an exception\n\tpublic ICommunicator getCommunicator(String id);\n\t\tICommunicator com = pacientes.get(id);\n\t\tif(com != null)\n\t\t\treturn com;\n\t\tcom = medicos.get(id);\n\t\tif(com != null)\n\t\t\treturn com;\n\t\tthrow new HospitalException(\"fail: usuario nao existe\");\n\t}\n\tpublic String showAll();\n\t\tStringBuilder lista = new StringBuilder();\n\t\tfor (IPaciente paciente : pacientes.values())\n\t\t\tlista.append(paciente);\n\t\tfor (IMedico medico : medicos.values())\n\t\t\tlista.append(medico);\n\t\treturn lista.toString();\n\t}\n}\npublic class Solver {\n\tpublic static void main(String[] args);\n\t\tScanner scanner = new Scanner(System.in);\n\t\tHospital hospital = new Hospital();\n\t\twhile (true);\n\t\t\ttry {\n\t\t\t\tString line = scanner.nextLine();\n\t\t\t\tSystem.out.println(\"$\" + line);\n\t\t\t\tList<String> ui = Arrays.asList(line.split(\" \"));\n\t\t\t\tif (ui.get(0).equals(\"end\"));\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (ui.get(0).equals(\"addPacs\"));\n\t\t\t\t\tui.stream().skip(1).forEach(tk -> hospital.addPaciente(new Paciente(tk.split(\"-\")[0], tk.split(\"-\")[1])));\n\t\t\t\t} else if (ui.get(0).equals(\"addMeds\"));\n\t\t\t\t\tui.stream().skip(1).forEach(tk -> hospital.addMedico(new Medico(tk.split(\"-\")[0], tk.split(\"-\")[1])));\n\t\t\t\t} else if (ui.get(0).equals(\"show\"));\n\t\t\t\t\tSystem.out.print(hospital.showAll());\n\t\t\t\t} else if (ui.get(0).equals(\"tie\"));\n\t\t\t\t\tui.stream().skip(2).forEach(name -> hospital.vincular(ui.get(1), name));\n\t\t\t\t} else if (ui.get(0).equals(\"msg\")); //sender receiver msg in many words\n\t\t\t\t\tICommunicator sender = hospital.getCommunicator(ui.get(1));\n\t\t\t\t\tString message = ui.stream().skip(3).collect(Collectors.joining(\" \"));\n\t\t\t\t\tsender.deliverMessage(ui.get(2), message);\n\t\t\t\t} else if (ui.get(0).equals(\"inbox\"));\n\t\t\t\t\tSystem.out.println(hospital.getCommunicator(ui.get(1)).getInbox().stream().map(m -> \"[\" + m + \"]\").collect(Collectors.joining(\"\\n\")));\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"fail: comando invalido\");\n\t\t\t\t}\n\t\t\t} catch (HospitalException he);\n\t\t\t\tSystem.out.println(he.getMessage());\n\t\t\t}\n\t\t}\n\t}\n}\n```\n<!--FILTER_END-->",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> inserir\naddPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\naddMeds bisturi-cirurgia snif-alergologia facada-cirurgia\nshow\nend\n========\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n$end\n<<<<<<<<\n\n>>>>>>>> vincular\naddPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\naddMeds bisturi-cirurgia snif-alergologia facada-cirurgia\nshow\ntie bisturi fred alvis goku\ntie snif silva alvis\ntie facada goku\nshow\nend\n========\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n$tie bisturi fred alvis goku\n$tie snif silva alvis\n$tie facada goku\nfail: ja existe outro medico da especialidade cirurgia\n$show\nPac: alvis:avc        Meds: [bisturi, snif]\nPac: fred:fratura     Meds: [bisturi]\nPac: goku:hemorragia  Meds: [bisturi]\nPac: silva:sinusite   Meds: [snif]\nMed: bisturi:cirurgia Pacs: [alvis, fred, goku]\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: [alvis, silva]\n$end\n<<<<<<<<\n\n>>>>>>>> mensagens\naddPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\naddMeds bisturi-cirurgia snif-alergologia facada-cirurgia\nshow\ntie bisturi fred alvis goku\ntie snif silva alvis\ntie facada goku\nshow\nmsg alvis bisturi posso tomar homeprazol?\nmsg goku bisturi coceira no reto eh normal?\ninbox bisturi\nmsg bisturi alvis chupe limao que passa\nmsg bisturi goku venha na minha sala pra eu olhar\ninbox goku\nmsg goku facada\ninbox machado\nend\n========\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n$tie bisturi fred alvis goku\n$tie snif silva alvis\n$tie facada goku\nfail: ja existe outro medico da especialidade cirurgia\n$show\nPac: alvis:avc        Meds: [bisturi, snif]\nPac: fred:fratura     Meds: [bisturi]\nPac: goku:hemorragia  Meds: [bisturi]\nPac: silva:sinusite   Meds: [snif]\nMed: bisturi:cirurgia Pacs: [alvis, fred, goku]\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: [alvis, silva]\n$msg alvis bisturi posso tomar homeprazol?\n$msg goku bisturi coceira no reto eh normal?\n$inbox bisturi\n[alvis:posso tomar homeprazol?]\n[goku:coceira no reto eh normal?]\n$msg bisturi alvis chupe limao que passa\n$msg bisturi goku venha na minha sala pra eu olhar\n$inbox goku\n[bisturi:venha na minha sala pra eu olhar]\n$msg goku facada\nfail:goku nao conhece facada\n$inbox machado\nfail: usuario nao existe\n$end\n<<<<<<<<\n\n>>>>>>>> mensagens !%\naddPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\naddMeds bisturi-cirurgia snif-alergologia facada-cirurgia\nshow\ntie bisturi fred alvis goku\ntie snif silva alvis\ntie facada goku\nshow\nmsg alvis bisturi posso tomar homeprazol?\nmsg goku bisturi coceira no reto eh normal?\ninbox bisturi\nmsg bisturi alvis chupe limao que passa\ninbox goku\nmsg goku facada\nend\n========\n$addPacs fred-fratura alvis-avc goku-hemorragia silva-sinusite\n$addMeds bisturi-cirurgia snif-alergologia facada-cirurgia\n$show\nPac: alvis:avc        Meds: []\nPac: fred:fratura     Meds: []\nPac: goku:hemorragia  Meds: []\nPac: silva:sinusite   Meds: []\nMed: bisturi:cirurgia Pacs: []\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: []\n$tie bisturi fred alvis goku\n$tie snif silva alvis\n$tie facada goku\nfail: ja existe outro medico da especialidade cirurgia\n$show\nPac: alvis:avc        Meds: [bisturi, snif]\nPac: fred:fratura     Meds: [bisturi]\nPac: goku:hemorragia  Meds: [bisturi]\nPac: silva:sinusite   Meds: [snif]\nMed: bisturi:cirurgia Pacs: [alvis, fred, goku]\nMed: facada:cirurgia  Pacs: []\nMed: snif:alergologia Pacs: [alvis, silva]\n$msg alvis bisturi posso tomar homeprazol?\n$msg goku bisturi coceira no reto eh normal?\n$inbox bisturi\n[alvis: posso tomar homeprazol?]\n[goku: coceira no reto eh normal?]\n$msg bisturi alvis chupe limao que passa\nmsg bisturi goku venha na minha sala pra eu olhar\n$inbox goku\n[bisturi: venha na minha sala pra eu olhar]\n$msg goku facada\nfail: goku nao conhece facada\n$end\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
