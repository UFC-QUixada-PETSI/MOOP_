{
    "title": "@toalha: Toalha, o item mais \u00fatil do universo",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@toalha: Toalha, o item mais \u00fatil do universo</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Toalha, o item mais \u00fatil do universo</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/toalha/cover.jpg\" /></p>\n<h2>Intro</h2>\n<ul>\n<li>Crie uma classe Toalha <code>Towel</code> com os atributos cor <code>color</code>, tamanho <code>size</code> e umidade <code>wetness</code>.</li>\n<li>Crie um construtor que inicialize todos os atributos cor e tamanho com valores recebidos como par\u00e2metro e umidade com 0.</li>\n<li>Crie um m\u00e9todo enxugar <code>dry</code> que recebe um valor inteiro quantidade <code>amout</code> e AUMENTA o atributo umidade da toalha.</li>\n<li>Crie um m\u00e9todo torcer <code>wringOut</code> que zera o atributo umidade da towel.</li>\n<li>Crie um m\u00e9todo para pegar m\u00e1ximo de umidade <code>getMaxWetness</code> que retorna o valor m\u00e1ximo de umidade que essa toalha pode ter.</li>\n<li>O m\u00e1ximo de umidade que uma toalha pode ter \u00e9 de acordo com o tamanho dela:<ul>\n<li><code>P</code> -&gt; 10</li>\n<li><code>M</code> -&gt; 20</li>\n<li><code>G</code> -&gt; 30</li>\n</ul>\n</li>\n<li>Crie um m\u00e9todo que retorna se a toalha esta seca <code>isDry</code>, que retorna <code>true</code> se a umidade da toalha for 0 e <code>false</code> caso contr\u00e1rio.</li>\n<li>Fa\u00e7a um c\u00f3digo de teste para validar o comportamento da classe Toalha.</li>\n</ul>\n<p><img alt=\"diagrama\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/toalha/diagrama.png\" /></p>\n<h2>Guide</h2>\n<p><a href=\"https://youtu.be/fEvJns4NpTM?si=G-FDqGnt_5SPSZpg\"><img alt=\"youtube icon\" src=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/toalha/../youguide.png\" /></a></p>\n<ul>\n<li>Abaixo voc\u00ea tem um exemplo de c\u00f3digo em python que implementa a classe <code>Towel</code> e testa seu comportamento.</li>\n<li>Adapte a ideia para a linguagem que voc\u00ea est\u00e1 estudando e crie seus pr\u00f3prios testes.</li>\n</ul>\n<!-- load solver.py fenced:filter:py -->\n\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">Towel</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">getMaxWetness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;P&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">10</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;M&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">20</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;G&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">30</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">dry</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span> <span class=\"o\">+=</span> <span class=\"n\">amount</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">getMaxWetness</span><span class=\"p\">():</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;toalha encharcada&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">getMaxWetness</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">wringOut</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">isDry</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">show</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wetness</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n<span class=\"c1\"># Testes</span>\n<span class=\"n\">towel</span> <span class=\"o\">=</span> <span class=\"n\">Towel</span><span class=\"p\">(</span><span class=\"s2\">&quot;Azul&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;P&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># Azul P 0</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">dry</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># Azul P 5</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">isDry</span><span class=\"p\">())</span> <span class=\"c1\"># False</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">dry</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># Azul P 10</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">dry</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"c1\"># msg: toalha encharcada</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># Azul P 10</span>\n\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">wringOut</span><span class=\"p\">()</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># Azul P 0</span>\n\n<span class=\"n\">towel</span> <span class=\"o\">=</span> <span class=\"n\">Towel</span><span class=\"p\">(</span><span class=\"s2\">&quot;Verde&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;G&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">isDry</span><span class=\"p\">())</span> <span class=\"c1\"># True</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">dry</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># Verde G 30</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">isDry</span><span class=\"p\">())</span> <span class=\"c1\"># False</span>\n<span class=\"n\">towel</span><span class=\"o\">.</span><span class=\"n\">dry</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># msg: toalha encharcada</span>\n</code></pre></div>\n<!-- load -->\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "type": "hide"
        }
    ],
    "draft": {}
}
