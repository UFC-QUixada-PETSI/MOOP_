{
    "title": "@lapiseira: Lapiseira com m\u00faltiplos grafites",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@lapiseira: Lapiseira com m\u00faltiplos grafites</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"lapiseira-com-m\u00faltiplos-grafites\">Lapiseira com m\u00faltiplos\ngrafites</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#guide\">Guide</a></th>\n<th><a href=\"#shell\">Shell</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/lapiseira/cover.jpg\"\nalt=\"cover\" />\n<figcaption aria-hidden=\"true\">cover</figcaption>\n</figure>\n<p>Fa\u00e7a o modelo de uma lapiseira que pode conter v\u00e1rios.</p>\n<h2 id=\"intro\">Intro</h2>\n<ul>\n<li>Iniciar lapiseira\n<ul>\n<li>Inicia uma lapiseira de determinado calibre sem grafite.</li>\n<li>Lapiseiras possuem um bico e um tambor.</li>\n<li>O bico guarda o grafite que est\u00e1 em uso.</li>\n<li>O tambor guarda os grafites reservas.</li>\n</ul></li>\n<li>Inserir grafite\n<ul>\n<li>Insere um grafite passando\n<ul>\n<li>o calibre: float.</li>\n<li>a dureza: string.</li>\n<li>o tamanho em mm: int.</li>\n</ul></li>\n<li>N\u00e3o deve aceitar um grafite de calibre n\u00e3o compat\u00edvel.</li>\n<li>O grafite \u00e9 colocado como o \u00daLTIMO grafite do tambor.</li>\n</ul></li>\n<li>Puxar grafite\n<ul>\n<li>Puxa o grafite do tambor para o bico.</li>\n<li>Se j\u00e1 tiver um grafite no bico, esse precisa ser removido\nprimeiro.</li>\n</ul></li>\n<li>Remover grafite\n<ul>\n<li>Retira o grafite do bico.</li>\n</ul></li>\n<li>Escrever folha\n<ul>\n<li>N\u00e3o \u00e9 poss\u00edvel escrever se n\u00e3o h\u00e1 grafite no bico.</li>\n<li>Quanto mais macio o grafite, mais rapidamente ele se acaba. Para\nsimplificar, use a seguinte regra:\n<ul>\n<li>Grafite HB: 1mm por folha.</li>\n<li>Grafite 2B: 2mm por folha.</li>\n<li>Grafite 4B: 4mm por folha.</li>\n<li>Grafite 6B: 6mm por folha.</li>\n</ul></li>\n<li>O \u00faltimo cent\u00edmetro de um grafite n\u00e3o pode ser aproveitado, quando o\ngrafite estiver com 10mm, n\u00e3o \u00e9 mais poss\u00edvel escrever e o grafite deve\nser retirado.</li>\n<li>Se n\u00e3o houver grafite suficiente para terminar a folha, avise que o\ntexto ficou incompleto.</li>\n</ul></li>\n</ul>\n<h2 id=\"guide\">Guide</h2>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/lapiseira/diagrama.png\"\nalt=\"diagrama\" />\n<figcaption aria-hidden=\"true\">diagrama</figcaption>\n</figure>\n<h2 id=\"shell\">Shell</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE inserindo grafites</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 0.5</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.5, bico: [], tambor: <span class=\"op\">&lt;&gt;</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE calibre errado</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 0.7 2B 50</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> calibre incompat\u00edvel</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE calibre certo</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 0.5 2B 50</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.5, bico: [], tambor: <span class=\"op\">&lt;</span><span class=\"pp\">[</span><span class=\"ss\">0.5:2B:50</span><span class=\"pp\">]</span><span class=\"op\">&gt;</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE mais de um grafite</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 0.5 2B 30</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.5, bico: [], tambor: <span class=\"op\">&lt;</span><span class=\"pp\">[</span><span class=\"ss\">0.5:2B:50</span><span class=\"pp\">][</span><span class=\"ss\">0.5:2B:30</span><span class=\"pp\">]</span><span class=\"op\">&gt;</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE puxando grafite</span></span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$pull</span></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.5, bico: <span class=\"pp\">[</span><span class=\"ss\">0.5:2B:50</span><span class=\"pp\">]</span>, tambor: <span class=\"op\">&lt;</span><span class=\"pp\">[</span><span class=\"ss\">0.5:2B:30</span><span class=\"pp\">]</span><span class=\"op\">&gt;</span></span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE puxando ocupado</span></span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$pull</span></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> ja existe grafite no bico</span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE removendo do bico</span></span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$remove</span></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.5, bico: [], tambor: <span class=\"op\">&lt;</span><span class=\"pp\">[</span><span class=\"ss\">0.5:2B:30</span><span class=\"pp\">]</span><span class=\"op\">&gt;</span></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<hr />\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE escrevendo </span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 0.9</span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 0.9 4B 14</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 0.9 4B 16</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE sem grafite no bico</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$write</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> nao existe grafite no bico</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE puxando grafite</span></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$pull</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.9, bico: <span class=\"pp\">[</span><span class=\"ss\">0.9:4B:14</span><span class=\"pp\">]</span>, tambor: <span class=\"op\">&lt;</span><span class=\"pp\">[</span><span class=\"ss\">0.9:4B:16</span><span class=\"pp\">]</span><span class=\"op\">&gt;</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE gastando grafite</span></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$write</span></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.9, bico: <span class=\"pp\">[</span><span class=\"ss\">0.9:4B:10</span><span class=\"pp\">]</span>, tambor: <span class=\"op\">&lt;</span><span class=\"pp\">[</span><span class=\"ss\">0.9:4B:16</span><span class=\"pp\">]</span><span class=\"op\">&gt;</span></span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE puxando novo</span></span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$remove</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$pull</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.9, bico: <span class=\"pp\">[</span><span class=\"ss\">0.9:4B:16</span><span class=\"pp\">]</span>, tambor: <span class=\"op\">&lt;&gt;</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$write</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.9, bico: <span class=\"pp\">[</span><span class=\"ss\">0.9:4B:12</span><span class=\"pp\">]</span>, tambor: <span class=\"op\">&lt;&gt;</span></span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE folha incompleta</span></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$write</span></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> folha incompleta</span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">calibre:</span> 0.9, bico: <span class=\"pp\">[</span><span class=\"ss\">0.9:4B:10</span><span class=\"pp\">]</span>, tambor: <span class=\"op\">&lt;&gt;</span></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#TEST_CASE tamanho insuficiente</span></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$write</span></span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">fail:</span> tamanho insuficiente</span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/lapiseira/.cache/draft/cpp/shell.cpp\">shell.cpp</a></li>\n</ul></li>\n<li>java\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/lapiseira/.cache/draft/java/Shell.java\">Shell.java</a></li>\n</ul></li>\n<li>ts\n<ul>\n<li><a\nhref=\"https://github.com/qxcodepoo/arcade/blob/master/base/lapiseira/.cache/draft/ts/shell.ts\">shell.ts</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT inserindo grafites\ninit 0.5\nshow\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT calibre errado\ninit 0.5\nshow\ninsert 0.7 2B 50\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$insert 0.7 2B 50\nfail: calibre incompat\u00edvel\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT calibre certo\ninit 0.5\nshow\ninsert 0.7 2B 50\ninsert 0.5 2B 50\nshow\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$insert 0.7 2B 50\nfail: calibre incompat\u00edvel\n$insert 0.5 2B 50\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50]>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT mais de um grafite\ninit 0.5\nshow\ninsert 0.7 2B 50\ninsert 0.5 2B 50\nshow\ninsert 0.5 2B 30\nshow\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$insert 0.7 2B 50\nfail: calibre incompat\u00edvel\n$insert 0.5 2B 50\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50]>\n$insert 0.5 2B 30\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50][0.5:2B:30]>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT puxando grafite\ninit 0.5\nshow\ninsert 0.7 2B 50\ninsert 0.5 2B 50\nshow\ninsert 0.5 2B 30\nshow\npull\nshow\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$insert 0.7 2B 50\nfail: calibre incompat\u00edvel\n$insert 0.5 2B 50\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50]>\n$insert 0.5 2B 30\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50][0.5:2B:30]>\n$pull\n$show\ncalibre: 0.5, bico: [0.5:2B:50], tambor: <[0.5:2B:30]>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT puxando ocupado\ninit 0.5\nshow\ninsert 0.7 2B 50\ninsert 0.5 2B 50\nshow\ninsert 0.5 2B 30\nshow\npull\nshow\npull\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$insert 0.7 2B 50\nfail: calibre incompat\u00edvel\n$insert 0.5 2B 50\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50]>\n$insert 0.5 2B 30\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50][0.5:2B:30]>\n$pull\n$show\ncalibre: 0.5, bico: [0.5:2B:50], tambor: <[0.5:2B:30]>\n$pull\nfail: ja existe grafite no bico\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT removendo do bico\ninit 0.5\nshow\ninsert 0.7 2B 50\ninsert 0.5 2B 50\nshow\ninsert 0.5 2B 30\nshow\npull\nshow\npull\nremove\nshow\nend\n======== EXPECT\n$init 0.5\n$show\ncalibre: 0.5, bico: [], tambor: <>\n$insert 0.7 2B 50\nfail: calibre incompat\u00edvel\n$insert 0.5 2B 50\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50]>\n$insert 0.5 2B 30\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:50][0.5:2B:30]>\n$pull\n$show\ncalibre: 0.5, bico: [0.5:2B:50], tambor: <[0.5:2B:30]>\n$pull\nfail: ja existe grafite no bico\n$remove\n$show\ncalibre: 0.5, bico: [], tambor: <[0.5:2B:30]>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT escrevendo \ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT sem grafite no bico\ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nwrite\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$write\nfail: nao existe grafite no bico\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT puxando grafite\ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nwrite\npull\nshow\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$write\nfail: nao existe grafite no bico\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:14], tambor: <[0.9:4B:16]>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT gastando grafite\ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nwrite\npull\nshow\nwrite\nshow\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$write\nfail: nao existe grafite no bico\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:14], tambor: <[0.9:4B:16]>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:10], tambor: <[0.9:4B:16]>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT puxando novo\ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nwrite\npull\nshow\nwrite\nshow\nremove\npull\nshow\nwrite\nshow\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$write\nfail: nao existe grafite no bico\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:14], tambor: <[0.9:4B:16]>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:10], tambor: <[0.9:4B:16]>\n$remove\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:16], tambor: <>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:12], tambor: <>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT folha incompleta\ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nwrite\npull\nshow\nwrite\nshow\nremove\npull\nshow\nwrite\nshow\nwrite\nshow\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$write\nfail: nao existe grafite no bico\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:14], tambor: <[0.9:4B:16]>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:10], tambor: <[0.9:4B:16]>\n$remove\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:16], tambor: <>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:12], tambor: <>\n$write\nfail: folha incompleta\n$show\ncalibre: 0.9, bico: [0.9:4B:10], tambor: <>\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tamanho insuficiente\ninit 0.9\ninsert 0.9 4B 14\ninsert 0.9 4B 16\nwrite\npull\nshow\nwrite\nshow\nremove\npull\nshow\nwrite\nshow\nwrite\nshow\nwrite\nend\n======== EXPECT\n$init 0.9\n$insert 0.9 4B 14\n$insert 0.9 4B 16\n$write\nfail: nao existe grafite no bico\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:14], tambor: <[0.9:4B:16]>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:10], tambor: <[0.9:4B:16]>\n$remove\n$pull\n$show\ncalibre: 0.9, bico: [0.9:4B:16], tambor: <>\n$write\n$show\ncalibre: 0.9, bico: [0.9:4B:12], tambor: <>\n$write\nfail: folha incompleta\n$show\ncalibre: 0.9, bico: [0.9:4B:10], tambor: <>\n$write\nfail: tamanho insuficiente\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\nfunction main() {\n\n    while (true) {\n        const line = input();\n        console.log(\"$\" + line);\n\n        const par = line.split(\" \");\n        const cmd = par[0];\n\n        if (cmd === \"end\") {\n            break;\n        }\n        else if (cmd === \"show\") { \n        }\n        else if (cmd === \"init\") { \n            // const thickness = parseFloat(par[1]);\n        }\n        else if (cmd === \"insert\") { \n            // const thickness = parseFloat(par[1]);\n            // const hardness = par[2];\n            // const size = parseInt(par[3]);\n        }\n        else if (cmd === \"remove\") { \n        }\n        else if (cmd === \"write\") { \n        }\n        else if (cmd === \"pull\") { \n        }\n        else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "encoding": 0
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.text.DecimalFormat;\nimport java.util.Scanner;\nimport java.util.ArrayList;\npublic class Shell {\n    public static void main(String[] _args) {\n\n        while(true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"show\")) { \n            } \n            else if (cmd.equals(\"init\")) { \n                // var thickness = Double.parseDouble(par[1]);\n            } \n            else if (cmd.equals(\"insert\")) { \n                // var thickness = Double.parseDouble(par[1]);\n                // var hardness = par[2];\n                // var size = Integer.parseInt(par[3]);\n            } \n            else if (cmd.equals(\"remove\")) { \n            } \n            else if (cmd.equals(\"show\")) { \n            } \n            else if (cmd.equals(\"write\")) { \n            } \n            else if (cmd.equals(\"pull\")) { \n            } \n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "encoding": 0
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <list>\n#include <sstream>\n#include <memory>\nusing namespace std;\n\n// Fun\u00e7\u00e3o auxiliar para mapear e juntar elementos de um container\ntemplate <typename CONTAINER, typename FUNC>\nauto map_join(const CONTAINER& c, FUNC f, const string& sep = \", \") {\n    stringstream ss;\n    for (auto it = c.begin(); it != c.end(); ++it) {\n        ss << (it != c.begin() ? sep : \"\");\n        ss << f(*it);\n    }\n    return ss.str();\n}\n\nint main() {\n    while (true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\") {\n            break;  \n        }\n        else if (cmd == \"show\") { \n        } \n        else if (cmd == \"init\") { \n            // float calibre;\n            // ss >> calibre;\n        } \n        else if (cmd == \"insert\") { \n            // float calibre;\n            // string dureza;\n            // int tamanho;\n            // ss >> calibre >> dureza >> tamanho;\n        } \n        else if (cmd == \"remove\") { \n        } \n        else if (cmd == \"pull\") { \n        } \n        else if (cmd == \"write\") { \n        } \n        else {\n            cout << \"fail: comando invalido\\n\";\n        }\n    }\n}\n",
                "encoding": 0
            }
        ]
    }
}
