{
    "title": "@contato: Gerenciando telefones de um \u00fanico contato",
    "description": "# Gerenciando telefones de um \u00fanico contato\n\n<!-- toch -->\n[Intro](#intro) | [Guide](#guide) | [Shell](#shell)\n-- | -- | --\n<!-- toch -->\n\n![cover](https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contato/cover.jpg)\n\nO objetivo dessa atividade \u00e9 implementar uma classe respons\u00e1vel por guardar um **\u00fanico** contato da agenda telef\u00f4nica do seu celular. Cada contato pode ter v\u00e1rios telefones.\n\nEssa classe Contact ser\u00e1 reutilizada nas atividades @agenda.\n\n## Intro\n\nSeu programa deve:\n\n- **Definir nome**\n  - Poder inicializar o contato passando o nome.\n    - Se j\u00e1 houver contato, inicie um novo contato.\n    - Se n\u00e3o houver nome, o nome default \u00e9 \"\".\n- **Inserir telefones no contato**\n  - Um telefone tem um label e um fone.\n  - Labels ser\u00e3o nomes como: casa, fixo, oi.\n  - Labels podem ser duplicados.\n\n```sh\n# Exemplo de sa\u00edda\n- ana [tim:3434, casa:4567, oi:8754, casa:4567, oi:8754]\n```\n\n- **Remover telefones do contato.**\n  - Remove os telefones pelo \u00edndice.\n- **Validando os n\u00fameros de telefone.**\n  - Processe os telefones para apenas permitir nos telefones os seguintes caracteres \"0123456789().\"\n  - Se o usu\u00e1rio tentar inserir individualmente um telefone invalido, avise e n\u00e3o insira o telefone.\n- **Favoritar e desfavoritar contato**\n- **Mostrar contato**\n  - Mostrar o contato com todos os telefones.\n  - Se ele for favoritado, mostre um @ no come\u00e7o do nome.\n\n***\n\n## Guide\n\n![diagrama](https://raw.githubusercontent.com/qxcodepoo/arcade/master/base/contato/diagrama.png)\n\n<!-- links .cache/draft -->\n- cpp\n  - [shell.cpp](https://github.com/qxcodepoo/arcade/blob/master/base/contato/.cache/draft/cpp/shell.cpp)\n- java\n  - [Shell.java](https://github.com/qxcodepoo/arcade/blob/master/base/contato/.cache/draft/java/Shell.java)\n- ts\n  - [shell.ts](https://github.com/qxcodepoo/arcade/blob/master/base/contato/.cache/draft/ts/shell.ts)\n<!-- links -->\n\n***\n\n## Shell\n\n```bash\n#TEST_CASE definindo nome\n$init david\n$show\n- david []\n\n#TEST_CASE inserindo telefones\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n\n#TEST_CASE removendo telefone por indice\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n\n#TEST_CASE validando numero de fone\n$add tim 9a9\nfail: invalid number\n$add tim (85)99.99\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n\n#TEST_CASE favoritos\n$tfav\n$show\n@ david [tim:99, vivo:83, tim:(85)99.99]\n\n$tfav\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n\n\n$end\n#__end__\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT definindo nome\ninit david\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT inserindo telefones\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT removendo telefone por indice\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nrm 2\nshow\nrm 0\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT validando numero de fone\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nrm 2\nshow\nrm 0\nshow\nadd tim 9a9\nadd tim (85)99.99\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n$add tim 9a9\nfail: invalid number\n$add tim (85)99.99\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT favoritos\ninit david\nshow\nadd oi 88\nadd tim 99\nadd tim 98\nadd vivo 83\nshow\nrm 2\nshow\nrm 0\nshow\nadd tim 9a9\nadd tim (85)99.99\nshow\ntfav\nshow\ntfav\nshow\nend\n======== EXPECT\n$init david\n$show\n- david []\n$add oi 88\n$add tim 99\n$add tim 98\n$add vivo 83\n$show\n- david [oi:88, tim:99, tim:98, vivo:83]\n$rm 2\n$show\n- david [oi:88, tim:99, vivo:83]\n$rm 0\n$show\n- david [tim:99, vivo:83]\n$add tim 9a9\nfail: invalid number\n$add tim (85)99.99\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n$tfav\n$show\n@ david [tim:99, vivo:83, tim:(85)99.99]\n$tfav\n$show\n- david [tim:99, vivo:83, tim:(85)99.99]\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "ts": [
            {
                "name": "shell.ts",
                "contents": "const input = () => \"\"; // MODO_TESTE\nexport {};\n\n\nfunction main() {\n    while (true) {\n        let line = input();\n        console.log(\"$\" + line);\n        const args = line.split(\" \");\n        const cmd = args[0];\n        \n        if (cmd === \"end\") {\n            break;\n        } else if (cmd === \"init\") {\n            const name = args[1];\n        } else if (cmd === \"add\") {\n            const id = args[1];\n            const number = args[2];\n        } else if (cmd === \"rm\") {\n            const index = +args[1];\n        } else if (cmd === \"tfav\") {\n        } else if (cmd === \"show\") {\n        } else {\n            console.log(\"fail: comando invalido\");\n        }\n    }\n}\n\nmain();\n",
                "type": "show"
            }
        ],
        "java": [
            {
                "name": "Shell.java",
                "contents": "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.stream.Collectors;\nimport java.util.Collections;\n\npublic class Shell{\n\n    public static void main(String[] Args) {\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n            String[] args = line.split(\" \");\n            \n            if (args[0].equals(\"end\")) {\n                break;\n            }\n            else if (args[0].equals(\"init\")) {\n                // var name = args[1];\n            }\n            else if (args[0].equals(\"show\")) {\n            }\n            else if (args[0].equals(\"add\")) {\n                // var id = args[1];\n                // var number = args[2];\n            }\n            else if (args[0].equals(\"rm\")) {\n                // var index = Integer.parseInt(args[1]);\n            }\n            else if (args[0].equals(\"tfav\")) {\n            }\n            else {\n                System.out.println(\"fail: invalid command\");\n            }\n        }\n    }\n    static Scanner scanner = new Scanner(System.in);\n}\n",
                "type": "show"
            }
        ],
        "cpp": [
            {
                "name": "shell.cpp",
                "contents": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <iomanip>\n#include <sstream>\n\nusing namespace std;\n\ntemplate <class CONTAINER, class FUNC>\nstring map_join(const CONTAINER &cont, FUNC func, string sep = \" \")\n{\n    stringstream ss;\n    for (auto it = cont.begin(); it != cont.end(); it++)\n    {\n        ss << (it == cont.begin() ? \"\" : sep) << func(*it);\n    }\n    return ss.str();\n}\nint main()\n{\n    while (true)\n    {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << endl;\n        stringstream ss(line);\n        ss >> cmd;\n\n        if (cmd == \"end\")\n        {\n            break;\n        }\n        else if (cmd == \"init\")\n        {\n            // string name;\n            // ss >> name;\n        }\n        else if (cmd == \"add\")\n        {\n            // string id, number;\n            // ss >> id >> number;\n        }\n        else if (cmd == \"rm\")\n        {\n            // int index{};\n            // ss >> index;\n        }\n        else if (cmd == \"tfav\")\n        {\n        }\n        else if (cmd == \"show\")\n        {\n        }\n        else\n        {\n            cout << \"fail: comando invalido\" << endl;\n        }\n    }\n}\n",
                "type": "show"
            }
        ]
    }
}
